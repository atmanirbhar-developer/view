{"version":3,"sources":["../../shared-lib/src/index.ts","../../shared-lib/src/messages/index.ts","../../shared-lib/src/config.ts","../../server-types/src/bare.ts","../../server/src/tagIds.ts","../../server/src/actions.ts","../../server/src/configServer.ts","../../server/src/currentIds.ts","../../server/src/exerpt.ts","../../server/src/loader.ts","../../server/src/database.ts","../../server-data/src/images.ts","../../server/src/session.ts","../../server/src/routes.ts","../../client/src/markdownToHtml.ts","hooks/useContext.ts","hooks/useFetchApi.ts","components/SelectTagsState.ts","hooks/useSelectTags.ts","components/ErrorMessage.tsx","hooks/useValidatedInput.ts","components/Label.tsx","components/createChild.tsx","components/Editor.tsx","hooks/usePagedownEditor.ts","components/getSubmitButton.tsx","../../ui-assets/icons/outline-email-24px.svg","../../ui-assets/icons/outline-chat-24px.svg","../../ui-assets/icons/outline-search-24px.svg","../../ui-assets/icons/outline-account_box-24px.svg","../../ui-assets/icons/outline-location_on-24px.svg","../../ui-assets/icons/outline-close-24px.svg","../../ui-assets/icons/outline-info-24px.svg","../../ui-assets/icons/outline-error-24px.svg","../../ui-assets/icons/outline-home-24px.svg","components/Validated.tsx","components/EditorTags.tsx","components/getDiscussionsSubtitle.tsx","components/getTagLink.tsx","components/getTags.tsx","components/getUserSummary.tsx","components/getWhen.tsx","components/getUserInfo.tsx","components/toLocaleString.ts","components/getDiscussionSummary.tsx","components/getMessage.tsx","components/getNavLinks.tsx","components/getPageNavLinks.tsx","components/getTagCount.tsx","components/ThrottledInput.tsx","hooks/useThrottledInput.ts","components/Topbar.tsx","layouts/renderLayout.tsx","layouts/index.tsx","routes/Home.tsx","components/htmlToReact.ts","routes/Users.tsx","forms/AnswerDiscussion.tsx","forms/EditTagInfo.tsx","forms/EditUserSettings.tsx","forms/Login.tsx","forms/NewDiscussion.tsx","routes/NotFound.tsx","routes/User.tsx","routes/Discussions.tsx","routes/Discussion.tsx","routes/NewDiscussion.tsx","routes/Tags.tsx","routes/Tag.tsx","routes/Login.tsx","routes/SiteMap.tsx","components/getImageSummary.tsx","components/getTagSummary.tsx","routes/Image.tsx","App.tsx","serviceWorker.ts","index-mock.tsx","../../client/src/api.ts","../../server-mock/src/mock.ts","../../shared-lib/src/data/index.ts","../../shared-lib/src/messages/wire.ts","../../shared-lib/src/urls.ts","../../shared-lib/src/data/tag.ts"],"names":["config","loginfails","autologin","appname","mockdelay","exerptlength","strQuestions","strTags","strNewQuestion","title","button","noun","tagValidation","minimum","maximum","canNewTag","minLengths","body","isTag","tag","undefined","getTagText","Url","slugify","getMapKey","tagId","id","resourceType","TagIdMap","images","map","Map","this","key","get","value","set","has","rc","forEach","includes","split","foundImage","find","idName","console","error","name","getTagKey","push","TagIdCounts","count","o","TagIdDiscussions","allImages","allTags","imageKeys","imageKeyIds","image","addTagId","Error","discussionId","summary","length","concat","getKey","titleCase","simulateTitle","words","i","word","substring","toLocaleUpperCase","join","createStoredTopic","stored","markdown","type","posted","dateTime","userId","createNewTag","extractNewUser","action","email","gravatarHash","crypto","update","digest","md5","trim","toLocaleLowerCase","user","profile","favourites","createNewDiscussion","messageId","createNewMessage","getLoadPriority","configServer","Current","getExerpt","assertTypeT","loaded","wanted","optional","alternate","assertType","found","keyNames","Array","isArray","expected","JSON","stringify","loadActions","getKeyFromTagId","tags","require","Action","location","aboutMe","Set","loadUsers","userToNewUser","userToNewUserProfile","sampleMessage","first","messages","x","loadDiscussions","discussion","discussionToNewDiscussion","message","messageToNewMessage","sorted","Date","getTime","sort","y","pair","allUsers","allDiscussions","sortedDiscussionsNewest","sortedDiscussionsActive","userMessages","messageDiscussions","userTags","tagDiscussions","currentIds","messageIdNext","next","getUserSummaryFrom","data","getUserSummary","getMessageStarted","getMessageEnded","getDiscussionTime","getMessage","wireSummaries","discussionMessages","users","discussions","userIds","discussionMessage","add","messageExerpt","nAnswers","getRange","nTotal","pageSize","pageNumber","array","start","range","selected","slice","getUser","userIdLogin","preferences","getDiscussion","options","sortedMessages","reverse","page","wireDiscussion","getAllTags","tagCounts","getTags","searchInput","filter","tagCount","localeCompare","pagesize","postNewTopic","addTag","handleAction","postNewUser","postEditUserProfile","tagIds","addDiscussionId","active","unshift","postNewDiscussion","splice","log","activate","userSummary","postNewMessage","postEditTagInfo","assertId","what","actual","second","onLoad","sessionData","getOrSet","sessionState","routeOnGet","url","getLocation","getResourceType","isParserError","siteTagCounts","isImage","isUsers","DB","userOptions","isUserOptions","userTabType","userActivity","isUserActivityOptions","read","isDiscussionsOptions","old","Session","sortedDiscussions","filteredDiscussions","discussionRange","isDiscussionOptions","isAllTags","isTagsOptions","isTagKey","loginUser","routeOnPost","json","toUTCString","isNewAnswer","isNewDiscussion","urlUserId","isEditUserProfile","isEditTagInfo","getAction","converter","getSanitizingConverter","toHtml","__html","makeHtml","AppContext","React","createContext","me","setMe","api","useMe","useContext","useApi","useFetchApi","getData","useFetchApi2","param","useState","prev","setParam","setData","setError","toggle","setToggle","newData","useMemo","param2","promise","Promise","resolve","reject","then","fetched","catch","useEffect","reason","reload","InputElement","inputElement","assert","stateValue","selectionStart","selectionEnd","isDirectionBackward","isLeftTrimmed","selectionDirection","focus","end","setSelectionRange","width","getTextWidth","style","InputState","state","canMoveLeft","canMoveRight","currentStart","currentEnd","elements","getInputIndex","inputIndex","isFirst","isLast","elementStart","index","getWordStart","getElementStart","isLeftMoving","isRightMoving","mutableState","remove","MutableState","renderedState","context","selection","buffer","replaceElement","tagDictionary","renderState","validation","logRenderedState","element","isValid","validationError","result","newValue","invariant","editingWord","nWords","wordStart","deleteSpaceAfter","assertSpaceAt","deleteSpaceBefore","addSpaceBefore","atBufferEnd","deleteCount","spliceStart","spliceValue","stringSplice","assertWords","where","setSelectionBoth","TagDictionary","inputValue","unwanted","findTags","max","startsWith","some","reducer","getMutableState","getInputState","isChange","getState","isEditorClick","isHintResult","hint","isDeleteTag","isTagClick","selectEndOf","isKeyDown","shiftKey","inputState","nextLeft","setSelectionStart","nextRight","setSelectionEnd","removeSelected","text","insert","after","force","counted","fragment","canvas","document","createElement","getContext","font","measureText","editing","setInput","setContent","addElement","exists","accumulated","wordIndex","wordEnd","assertElements","hints","getHints","toJSON","invalid","getValidationError","useSelectTags","inputTags","errorMessage","setErrorMessage","assertion","extra","setTimeout","useReducer","initialState","dispatch","setTagDictionary","ErrorMessage","props","className","bold","useValidatedInput","inputs","buttonText","errorMessages","input","validate","label","defaultValues","isAfterSubmit","onSubmitError","createInitialState","mapInputs","hideLabel","replace","htmlFor","createLabel","validated","create","defaultValue","handleChange","once","setOnce","window","getPagedownEditor","run","usePagedownEditor","Fragment","onChange","e","target","placeholder","Editor","child","attributes","created","createChild","onClick","countErrors","size","getButtonError","createValidated","currentState","isError","onSubmit","delete","minLength","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","d","_ref3","_ref","svgRef","height","viewBox","ref","ForwardRef","forwardRef","_ref4","cx","cy","r","Validated","children","cloneElement","icon","EditorTags","onEditorClick","onDeleteTag","onTagClick","onKeyDown","newinputState","isHandled","onHintResult","outputTag","getOnSelectTags","inputRef","createRef","handleKeyDown","preventDefault","Tag","close","current","handleDeleteTag","handleTagClick","showValidationError","validationErrorMessage","suffix","href","hrefAllTags","rel","showValidationResult","onClickCapture","tagName","onFocus","handleFocus","onBlur","ShowHints","ShowHint","getTag","more","anchor","getMore","tabIndex","hasFocus","relatedTarget","related","isElement","relatedName","relatedClass","activeElement","targetName","activeElementName","div","getElementById","getDiscussionsSubtitle","left","info","to","getTagInfoUrl","links","getTagEditUrl","route","newDiscussion","getDiscussionsOptionsUrl","getTagLink","getTagUrl","link","option","getUserUrl","userName","src","img","alt","gravatar","getWhen","when","getUserInfo","showWhen","toLocaleString","date","month","getMonth","year","getFullYear","minutes","getMinutes","padStart","getDate","getHours","getDiscussionSummary","short","getDiscussionUrl","messageSummary","stats","signature","topic","dangerouslySetInnerHTML","getNavLinks","spanifySelected","before","n","getPageNavLinks","numbers","last","getPageNumbers","Math","floor","getTagCount","ThrottledInput","setValue","handled","setHandled","isRunning","useRef","finished","handling","finally","useThrottledInput","event","Topbar","Route","alert","login","setTitle","renderContent","content","subTabs","footer","subMenu","tabs","tab","renderSubTabs","switchLayout","layout","right","rightColumn","rightButton","refDiv","refButton","hideOrShow","show","boundDiv","boundButton","classList","visible","showButtonLabel","closeButton","renderRightColumn","getClassName","main","tabbed","isTop","slug","slugDiv","navlink","renderTabs","mainColumn","subtitle","renderLayout","contents","getPage","showData","loadingError","loadingContents","Home","getPublic","isHtml","lines","s","sliced","parse","html","trimHtml","Parser","ProcessNodeDefinitions","parser","processingInstructions","shouldProcessNode","node","processNode","attribs","Link","processDefaultNode","parseWithInstructions","htmlToReact","showHome","Users","getUsers","showUsers","AnswerDiscussion","newMessage","__message","EditTagInfo","Data","tagSummaryLength","min","maxLength","rows","editTagInfo","history","getSummaryHint","EditUserSettings","editUserProfile","Login","password","NewDiscussion","outputTags","setOutputTags","NotFound","notFound","pathname","User","parsed","canEdit","UserProfile","aboutMeDiv","showCommonUserLayout","showUserProfile","UserEditSettings","showUserSettings","UserActivity","getUserActivity","activity","summaries","getActivityContent","getActivityUrl","getUserActivityUrl","showUserActivity","gravatarSmall","getUserOptionsUrl","settings","getSelected","Discussions","DiscussionsList","getDiscussions","showDiscussions","things","toString","toLowerCase","formatNumber","Discussion","DiscussionId","showDiscussion","getDiscussionOptionsUrl","getFirstMessage","getNextMessage","yourAnswer","Tags","TagsList","showTags","search","getTagsOptionsUrl","edit","getTagInfo","isTagInfo","isTagEdit","TagId","infoContent","showTag","SiteMap","getSiteMap","showSiteMap","getImageUrl","getImageSummary","features","getTagSummary","Image","ImageId","getImage","showImage","layers","renderLayers","layersWidth","handleLayerChange","alias","getAttribute","checked","level","listItems","layer","defaultChecked","renderNode","AppRoutes","exact","path","component","Page","siteMap","discussionsTagged","App","appOptions","useCreateMe","Provider","basename","process","Boolean","hostname","match","mockFetch","getT","init","method","headers","fetch","response","ok","statusText","a","getSiteMapUrl","getUsersUrl","convertPromise","convert","wire","wirePromise","Message","unwireUserActivity","unwireDiscussions","unwireDiscussion","getAllTagsUrl","getTagKeyUrl","postLoginUrl","postNewAnswerUrl","postNewDiscussionUrl","postEditUserProfileUrl","postEditTagInfoUrl","filename","Headers","append","status","getApi","failPromise","jsonPromise","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","unwireSummaries","unwireMessage","routeUsers","routeUser","parts","routeUserEdit","routeImage","routeDiscussions","routeDiscussion","routeSiteMap","routeAllTags","routeTags","routeDiscussionsTagged","routeTagInfo","routeTagEdit","routeTagKey","routeLogin","routeNewDiscussion","routeNewAnswer","routeEditUserProfile","isKeyword","toNumber","makeUrlT","queries","getRoot","part","safe","encodeURIComponent","makeUrl","Pairs","resourceTypes","root","find0","Elements","splitHash","splitQuery","query","segments","Queries","isUrlT","segmentIndex","partIndex","segment","pathSegments","isUrl","find1","errorUnexpectedPath","params","userTabTypes","matches","matchesT","getQuery","discussionSort","getActivityoptions","tagsSort","getTagsUrl","getDiscussionsTaggedUrl","discussionsSort","pageSizes","isRoot","isLogin"],"mappings":"0GAAA,mR,yECAA,2W,qDCAA,kCAAO,IAAMA,EAAS,CACpBC,YAAY,EACZC,WAAW,EACXC,QAAS,YACTC,UAAW,GACXC,aAAc,IACdC,aAAc,YACdC,QAAS,OACTC,eAAgB,CACdC,MAAO,iBACPC,OAAQ,eACRC,KAAM,YAERC,cAAe,CACbC,SAAS,EACTC,SAAS,EACTC,WAAW,GAEbC,WAAY,CACVP,MAAO,GACPQ,KAAM,M,4qiQCsBH,SAASC,EAAMC,GACpB,YAA4BC,IAApBD,EAAYA,IA0Bf,SAASE,EAAWZ,GAEzB,OAAOa,MAAIC,QAAQd,G,4DC/DrB,SAASe,EAAUC,GACjB,OAAOP,EAAMO,GAASA,EAAMN,IAArB,UAA8BM,EAAMC,GAApC,YAA0CD,EAAME,c,IAmCnDC,E,WAGJ,WAAYC,GAAmB,yBAFdA,YAEa,OADbC,IAA2B,IAAIC,IAE9CC,KAAKH,OAASA,E,gDAGFI,GACZ,OAAOD,KAAKF,IAAII,IAAID,K,0BAERA,EAAaE,GACzBH,KAAKF,IAAIM,IAAIH,EAAKE,K,0BAENF,GACZ,OAAOD,KAAKF,IAAIO,IAAIJ,K,oCAGgC,IAAD,OAC7CK,EAAkC,GAKxC,OAJAN,KAAKF,IAAIS,SAAQ,SAACJ,EAAOF,GACvBA,EApDN,SAAmBA,EAAaJ,GAC9B,IAAKI,EAAIO,SAAS,KAChB,OAAOP,EAGT,IAAMQ,EAAQR,EAAIQ,MAAM,KAClBf,GAAce,EAAM,GAC1B,GAAKf,EAKH,OADuCe,EAAM,IAE3C,IAAK,QACH,IAAMC,EAAab,EAAOc,MAAK,SAACC,GAAD,OAAYA,EAAOlB,KAAOA,KACzD,IAAKgB,EAAY,CAEfG,QAAQC,MAAR,+CAAsDb,EAAtD,MACA,MAEFA,EAAMZ,EAAWqB,EAAWK,MAC5B,MACF,QAEEF,QAAQC,MAAR,uDAA8Db,EAA9D,WAfJY,QAAQC,MAAR,8CAAqDb,EAArD,MAmBF,OAAOA,EAwBGe,CAAUf,EAAK,EAAKJ,QAC1BS,EAAGW,KAAK,CAAEhB,MAAKE,aAEVG,M,KAIEY,EAAb,kKACMzB,GAEF,IAAMQ,EAAMT,EAAUC,GAChB0B,EAAK,2DAAalB,GACxB,2DAAUA,EAAKkB,EAAQA,EAAQ,EAAI,KALvC,6BASI,OADqC,oEAC3BrB,KAAI,SAACsB,GACb,MAAO,CAAEnB,IAAKmB,EAAEnB,IAAKkB,MAAOC,EAAEjB,cAVpC,GAAiCP,GAepByB,EAAb,kDAKE,WAAYC,EAAoBC,GAAqB,IAAD,uBAClD,cAAMD,IALSC,aAImC,IAHnCD,eAGmC,IAFnCE,eAEmC,IADnCC,iBACmC,EAElD,EAAKF,QAAUA,EACf,EAAKD,UAAYA,EACjB,EAAKE,UAAY,IAAIzB,IACrB,EAAK0B,YAAc,IAAI1B,IAL2B,oBAO9BuB,GAP8B,IAOlD,2BAA+B,CAAC,IAArBI,EAAoB,QACvBjC,EAAe,CAAEC,GAAIgC,EAAMhC,GAAIC,aAAc,SACnD,IAAK,EAAKgC,SAASlC,GACjB,MAAM,IAAImC,MAAM,mBAElB,IAAM3B,EAAMZ,EAAWqC,EAAMX,MAC7B,EAAKS,UAAUpB,IAAIsB,EAAMhC,GAAIO,GAC7B,EAAKwB,YAAYrB,IAAIH,EAAKyB,EAAMhC,KAdgB,uCALtD,qDAsBmBD,GACf,IAAMQ,EAAMT,EAAUC,GACtB,kEAAcQ,KAGd,2DAAUA,EAAK,KACR,KA5BX,6BA8BSd,GACL,IAAMM,EAAe,CAAEN,OACvB,OAAOa,KAAK2B,SAASlC,KAhCzB,2BAkCON,GACH,IAAMO,EAAKM,KAAKyB,YAAYvB,IAAIf,GAC1BM,EAAeC,EAAK,CAAEA,KAAIC,aAAc,SAAY,CAAER,OACtDc,EAAMT,EAAUC,GACtB,GAAK,2DAAUQ,GAGf,OAAOR,IAzCX,sCA4CkBA,EAAcoC,GAC5B,IAAM5B,EAAMT,EAAUC,GACtB,2DAAUQ,GAAMgB,KAAKY,KA9CzB,sCAiDmC,IAAD,OAC9B,OAAO7B,KAAKuB,QAAQzB,KAAI,SAACX,GAAkB,IACjCV,EAAwBU,EAAxBV,MAAOwB,EAAiBd,EAAjBc,IAEf,MAAO,CAAExB,QAAOwB,MAAK6B,QAFW3C,EAAZ2C,QAEUX,MADhB,qDAAU3B,EAAU,CAAEL,IAAKc,KAAS8B,aApDxD,kCAyD2B,IAAD,OAEtB,OAAO/B,KAAKuB,QACTzB,KAAI,SAACX,GAAkB,IACdc,EAAiBd,EAAjBc,IAER,MAAO,CAAEA,MAAK6B,QAFW3C,EAAZ2C,QAEUX,MADT,qDAAU3B,EAAU,CAAEL,IAAKc,KAAS8B,WAGnDC,OACChC,KAAKsB,UAAUxB,KAAI,SAAC4B,GAAW,IACrBI,EAAgBJ,EAAhBI,QACFrC,EAAe,CAAEC,GADCgC,EAAPhC,GACUC,aAAc,SACnCwB,EAAQ,qDAAU3B,EAAUC,IAASsC,OAE3C,MAAO,CAAE9B,IADG,EAAKgC,OAAOxC,GAAOQ,IACjB6B,UAASX,eAvEjC,6BA8ES1B,GAEL,MAAO,CAAEQ,IADGf,EAAMO,GAASA,EAAMN,IAAMa,KAAKwB,UAAUtB,IAAIT,EAAMC,SA/EpE,GAAsCE,GAqFhCsC,EAAsB,CAC1B,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MAIK,SAASC,EAAchD,GAE5B,IADA,IAAMiD,EAAkBjD,EAAIsB,MAAM,KACzB4B,EAAI,EAAGA,EAAID,EAAML,SAAUM,EAAG,CACrC,IAAMC,EAAOF,EAAMC,GACdH,EAAU1B,SAAS8B,KACtBF,EAAMC,GAAKC,EAAKC,UAAU,EAAG,GAAGC,oBAAsBF,EAAKC,UAAU,IAGzE,OAAOH,EAAMK,KAAK,KCnKb,SAASC,EAAkBC,GAChC,IAAMb,EAAUa,EAAOb,QAAUa,EAAOb,QAAU,GAC5Cc,EAAWD,EAAOC,SAAWD,EAAOC,SAAW,GAErD,MAAO,CACLC,KAAM,WACNC,OAH4B,CAAErE,MAAOkE,EAAOlE,MAAOqD,UAASc,YAI5DG,SAAUJ,EAAOI,SACjBC,OAAQL,EAAOK,QAIZ,SAASC,EAAa9D,EAAa4D,EAAkBC,GAM1D,MAAO,CAAEH,KAAM,WAAYC,OALG,CAC5BrE,MAAO0D,EAAchD,GACrB2C,QAAS,GACTc,SAAU,IAEuBG,WAAUC,UAuBxC,SAASE,EAAeC,GAAsD,IAC3EJ,EAAqBI,EAArBJ,SAAUC,EAAWG,EAAXH,OADgE,EAE1DG,EAAOL,OAAvB/B,EAF0E,EAE1EA,KAAMqC,EAFoE,EAEpEA,MAGRC,EATR,SAAaD,GACX,OAAOE,aAAkB,OAAOC,OAAOH,GAAOI,OAAO,OAQhCC,CAAIL,EAAMM,OAAOC,qBAStC,MAAO,CAAEX,SAAQY,KARM,CACrB7C,OACAqC,QACAL,WACAM,eACAQ,QAAS,GACTC,WAAY,KAyCT,SAASC,EACdjB,EACAC,EACAC,EAEAnB,EAEAmC,GAEA,MAAO,CACLnB,KAAM,gBACNC,SACAC,WACAC,SACAnB,eACAmC,aAqBG,SAASC,EACdnB,EACAC,EACAC,EAEAnB,EAEAmC,GAEA,MAAO,CACLnB,KAAM,aACNC,SACAC,WACAC,SACAgB,YACAnC,gBAwCG,SAASqC,EAAgBf,GAC9B,OAAQA,EAAON,MACb,IAAK,UACH,OAAO,EACT,IAAK,kBACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,gBACH,OAAO,EACT,IAAK,aACH,OAAO,EACT,IAAK,cACH,OAAO,EACT,QACE,MAAM,IAAIjB,MAAJ,mB,WC/OCuC,GACC,ECKRC,E,WAEJ,aAAe,yBADPjE,WACM,EACZH,KAAKG,MAAQ,E,mDAGb,QAASH,KAAKG,U,KCVX,SAASkE,EAAUzB,GACxB,IACItC,EAF8C,EAC5C8B,EAAkBQ,EAASnC,MAAM,KADW,cAG/B2B,GAH+B,IAGlD,2BAA0B,CAAC,IAAhBE,EAAe,QACxB,GAAKA,EAAKP,OAAV,CAGA,GAAIzB,GAAMA,EAAGyB,OAASO,EAAKP,OAAS/D,SAAOK,aAAc,CACvDiC,GAAM,OACN,MAEFA,EAAKA,EAAKA,EAAK,IAAMgC,EAAOA,IAXoB,8BAalD,OAAOhC,GAAU,e,YCCnB,SAASgE,EAAeC,EAAaC,EAAWC,EAAwBC,GAyDtE,OAxDA,SAASC,EAAWC,EAAYJ,EAAaK,GAC3C,UAAWL,WAAkBI,EAC3B,MAAM,IAAIhD,MAAJ,qCAAwC4C,EAAxC,6BAAmEI,IAE3E,cAAeJ,GACb,IAAK,UACL,IAAK,SACL,IAAK,SACH,OACF,IAAK,SACH,MACF,IAAK,YACL,IAAK,SACL,IAAK,WACL,QACE,MAAM,IAAI5C,MAAJ,6CAAgD4C,IAE1D,GAAIM,MAAMC,QAAQP,GAAlB,CACE,IAAKM,MAAMC,QAAQH,GACjB,MAAM,IAAIhD,MAAJ,iDAAoDgD,IAE5D,GAAsB,IAAlBJ,EAAOzC,aAEJ,GAAsB,IAAlByC,EAAOzC,OAAc,qBAER6C,GAFQ,IAE9B,2BAA6B,CAC3BD,EAD2B,QACPH,EAAO,KAHC,mCAKzB,CAEL,GAAII,EAAM7C,SAAWyC,EAAOzC,OAC1B,MAAM,IAAIH,MAAJ,2CAA8C4C,EAAOzC,OAArD,kBAAqE6C,EAAM7C,SAEnF,IAAK,IAAIM,EAAI,EAAGA,EAAImC,EAAOzC,SAAUM,EACnCsC,EAAWC,EAAMvC,GAAImC,EAAOnC,UAKlC,IAAIqC,IAAaA,EAAUF,EAAQI,GAInC,IAAK,IAAM3E,KAAOuE,EAAQ,CACxB,IAAMQ,EAAWH,EAAWA,EAAW,IAAM5E,EAAMA,EACnD,GAA0B,qBAAf2E,EAAM3E,IACf,IAAKwE,IAAaA,EAASpE,IAAI2E,GAC7B,MAAM,IAAIpD,MAAJ,8BAAiCoD,EAAjC,eAAgDC,KAAKC,UAAUV,GAA/D,eAA6ES,KAAKC,UAAUN,UAGpGD,EAAWC,EAAM3E,GAAMuE,EAAOvE,GAAM+E,IAK1CL,CAAWJ,EAAQC,GACZD,EAoEF,SAASY,EAAYC,GAC1B,IAAM9E,EAAmB,GAEnB+E,EAnCsBf,EANdgB,EAAQ,KAMyB,CALrB,CACxB7G,MAAO,MACPuE,OAAQ,EACRD,SAAU,mCAsCZzC,EAAGW,KAAH,MAAAX,EAAE,YAAS+E,EAAKvF,IAAIyF,KAjEtB,WACE,IAeMhB,EAAiCD,EAfzBgB,EAAQ,KAeoC,CAdrB,CACnC,EACA,CACEvE,KAAM,SACNqC,MAAO,oBACPL,SAAU,gCACVc,QAAS,CACP2B,SAAU,WACVC,QAAS,2DAEX3B,WAAY,MAGc,IAAI4B,IAAY,CAAC,kBAAmB,sBAElE,OAAO,IAAI3F,IAAwBwE,GAkDIoB,GASjCpF,SAAQ,SAACqD,EAAkBZ,GAC/B1C,EAAGW,KATL,SAAuB+B,EAAgBY,GAGrC,OJ/EG,SAAuBd,EAAsBC,EAAkBC,GACpE,MAAO,CAAEH,KAAM,UAAWC,SAAQC,WAAUC,UI8EnCuC,CADsB,CAAExE,KADG6C,EAA1B7C,KAC6BqC,MADHQ,EAApBR,OAAoBQ,EAAbb,SAEyBC,GAMtC4C,CAAc5C,EAAQY,IAC9BtD,EAAGW,KALL,SAA8B+B,EAAgBY,GAC5C,OJ/CG,SAAiCjB,EAAoBK,GAC1D,IAAMwC,EAAW7C,EAAOkB,QAAQ2B,SAAW7C,EAAOkB,QAAQ2B,SAAW,GAC/DC,EAAU9C,EAAOkB,QAAQ4B,QAAU9C,EAAOkB,QAAQ4B,QAAU,GAOlE,MAAO,CAAE5C,KAAM,kBAAmBC,OANG,CACnC/B,KAAM4B,EAAO5B,KACbqC,MAAOT,EAAOS,MACdoC,WACAC,WAEwC1C,SAAUJ,EAAOI,SAAUC,UIsC5DuC,CAA+B3B,EAAMZ,GAIpC6C,CAAqB7C,EAAQY,OA7CzC,WACE,IACMkC,EAA6B,CACjC9C,OAAQ,EACRJ,SAAU,iDACVG,SAAU,gCACViB,UAAW,GAgBPO,EAA2BD,EArBnBgB,EAAQ,KAqB8B,CAdrB,CAC7B5F,GAAI,EACJqB,KAAM,2DACNsE,KAAM,CAAC,CAAElG,IAAK,QACd4G,MAAOD,EACPE,SAAU,CAACF,UASiD1G,GAPjC,SAACoF,EAAaI,GACzC,YAAmBxF,IAAfoF,EAAOrF,WAISC,IAAbwF,EAAMlF,SAA2CN,IAAvBwF,EAAMjF,iBAGzC,OAAO,IAAII,IAA4BwE,EAAOzE,KAAI,SAACmG,GAAD,MAAO,CAACA,EAAEvG,GAAIuG,OAyBfC,GAqBrC3F,SAAQ,SAAC4F,EAA4BtE,GAA0B,IACjEkE,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SACf1F,EAAGW,KAtBL,SACEY,EACAsE,EACAJ,GAEA,IAAMtH,EAAgB0H,EAAWpF,KAC3BsE,EAAcc,EAAWd,KAAKvF,IAAIsF,GAChCxC,EAA0CmD,EAA1CnD,SAAUoB,EAAgC+B,EAAhC/B,UAAWjB,EAAqBgD,EAArBhD,SAAUC,EAAW+C,EAAX/C,OAMvC,OAAOuC,EAL4B,CACjC9G,QACA4G,KAAMA,EAAKvF,KAAI,SAACX,GAAD,OAASA,EAAIc,OAC5B2C,YAEwCG,EAAUC,EAAQnB,EAAcmC,GASlEoC,CAA0BvE,EAAcsE,EAAYJ,IAC5DzF,EAAGW,KAAH,MAAAX,EAAE,YAAS0F,EAASlG,KAAI,SAACuG,GAAD,OAR1B,SAA6BxE,EAAsBwE,GAA0C,IACnFzD,EAA0CyD,EAA1CzD,SAAUoB,EAAgCqC,EAAhCrC,UAElB,OAAOuB,EADyB,CAAE3C,YADgByD,EAArBtD,SAAqBsD,EAAXrD,OAEkBnB,EAAcmC,GAKlCsC,CAAoBzE,EAAcwE,WAGzE,IAAME,EAAiCjG,EAAGR,KAAI,SAACqD,GAAD,MAAY,CAACA,EAAQ,IAAIqD,KAAKrD,EAAOJ,UAAU0D,cAQ7F,OAPAF,EAAOG,MAAK,SAACT,EAAGU,GACd,OAAIV,EAAE,KAAOU,EAAE,GACNV,EAAE,GAAKU,EAAE,GAEXpB,EAAuBU,EAAE,IAAMV,EAAuBoB,EAAE,OAG1DJ,EAAOzG,KAAI,SAAC8G,GAAD,OAAUA,EAAK,MClLnC,IAAMtF,ECfG,GDiBHuF,EAAkC,IAAI9G,IAEtCwB,EAAqB,GAErBuF,EAA8C,IAAI/G,IAGlDgH,EAA8C,GAC9CC,EAA8C,GAG9CC,EAA2C,IAAIlH,IAE/CmH,EAA0C,IAAInH,IAE9CoH,EAAqC,IAAIpH,IAGzCqH,EAAmC,IAAI/F,EAAiBC,EAAWC,GAEnE8F,EAAyB,IHpB7B,aAAe,yBAHfrE,YAGc,OAFdnB,kBAEc,OADdmC,eACc,EACZhE,KAAKgD,OAAS,IAAIoB,EAClBpE,KAAK6B,aAAe,IAAIuC,EACxBpE,KAAKgE,UAAY,IAAII,GGuBnBgB,EAAgC,SAAC3F,GAAD,OAAkB2H,EAAenF,OAAOxC,IAEvE,SAAS6H,IACd,OAAOD,EAAWrD,UAAUuD,OAU9B,SAASC,EAAmBxE,EAAgByE,GAC1C,MAAO,CACL/H,GAAIsD,EACJjC,KAAM0G,EAAK1G,KACXsC,aAAcoE,EAAKpE,aACnBmC,SAAUiC,EAAK5D,QAAQ2B,UAI3B,SAASkC,EAAe1E,GACtB,OAAOwE,EAAmBxE,EAAQ6D,EAAS3G,IAAI8C,IAGjD,SAAS2E,EAAkBxB,GACzB,OAAOA,EAAWJ,MAGpB,SAAS6B,EAAgBzB,GACvB,OAAOA,EAAWH,SAASjE,OAASoE,EAAWH,SAASG,EAAWH,SAASjE,OAAS,GAAKoE,EAAWJ,MAKvG,SAAS8B,GAAkB1B,EAA4B2B,GACrD,MAAO,CAAC3B,EAAWzG,IA5BG2G,EA4BgByB,EAAW3B,GA3B1C,IAAIK,KAAKH,EAAQtD,UAAU0D,YADpC,IAAwBJ,EA+BxB,SAAS0B,GAAcC,GACrB,IAAM1H,EAAyB,CAC7B2H,MAAO,GACPC,YAAa,IAETC,EAAuB,IAAIzC,IAgBjC,OAfAsC,EAAmBzH,SAAQ,SAAC6H,GAAuB,IAAD,cAClBA,EADkB,GACzCjC,EADyC,KAC7BE,EAD6B,KAExC3G,EAAmByG,EAAnBzG,GAAIqB,EAAeoF,EAAfpF,KAAMsE,EAASc,EAATd,KAClB8C,EAAQE,IAAIhC,EAAQrD,QACpB1C,EAAG4H,YAAYjH,KAAK,CAClBvB,KACAqB,OACAsE,KAAMA,EAAKvF,IAAIsF,GACfpC,OAAQqD,EAAQrD,OAChBsF,cAAejE,EAAUgC,EAAQzD,UACjCG,SAAUsD,EAAQtD,SAClBwF,SAAUpC,EAAWH,SAASjE,YAGlCoG,EAAQ5H,SAAQ,SAACyC,GAAD,OAAY1C,EAAG2H,MAAMhH,KAAKyG,EAAe1E,OAClD1C,EA0BT,SAASkI,GACPC,EACA/B,EACAgC,EACAC,EACAC,GAKA,IAAM7G,EAAS2G,EACTG,GAASF,EAAa,GAAKD,EAEjC,MAAO,CAAEI,MAAO,CAAEL,SAAQ/B,OAAMgC,WAAUC,cAAcI,SADvCH,EAAMI,MAAMH,EAAOA,EAAQ9G,IAyBvC,SAASkH,GAAQjG,EAAgBkG,GACtC,IAAMzB,EAA6BZ,EAAS3G,IAAI8C,GAChD,GAAKyE,EAAL,CAGA,IAAM0B,EACJnG,IAAWkG,OACP9J,EACA,CACEgE,MAAOqE,EAAKrE,OAT+D,EAWtCoE,EAAmBxE,EAAQyE,GAAhE/H,EAX2E,EAW3EA,GAAIqB,EAXuE,EAWvEA,KAAMsC,EAXiE,EAWjEA,aAClB,MAAO,CACL3D,KACAqB,OACAyE,SAfiF,EAWnDA,SAK9BnC,eACAoC,QAASgC,EAAK5D,QAAQ4B,QACtB0D,YAAaA,IA4DV,SAASC,GAAcC,GAC5B,IAAMlD,EAAaW,EAAe5G,IAAImJ,EAAQlD,WAAWzG,IACzD,GAAKyG,EAAL,CAGA,IAAMO,EAA2B2C,EAAQ3C,KAAO2C,EAAQ3C,KAAO,SACzD4C,EAA0B,WAAT5C,EAAoBP,EAAWH,SAAWG,EAAWH,SAASgD,QAAQO,UANA,EAOjEf,GAC1BrC,EAAWH,SAASjE,OACpB2E,EACA,GACA2C,EAAQG,KAAOH,EAAQG,KAAO,EAC9BF,GALMR,EAPqF,EAOrFA,MAOR,OAxJF,SACE3C,EACAH,EACA8C,GACsB,IACdpJ,EAA0ByG,EAA1BzG,GAAIqB,EAAsBoF,EAAtBpF,KAAMsE,EAAgBc,EAAhBd,KAAMU,EAAUI,EAAVJ,MAClBzF,EAA0B,CAC9B2H,MAAO,GACPvI,KACAqB,OACAsE,KAAMA,EAAKvF,IAAIsF,GACfW,QACA+C,QACA9C,YAEImC,EAAuB,IAAIzC,IAKjC,OAJAyC,EAAQE,IAAIlC,EAAWJ,MAAM/C,QAC7BgD,EAASzF,SAAQ,SAAC8F,GAAD,OAAa8B,EAAQE,IAAIhC,EAAQrD,WAClDmF,EAAQE,IAAI/H,EAAGyF,MAAM/C,QACrBmF,EAAQ5H,SAAQ,SAACyC,GAAD,OAAY1C,EAAG2H,MAAMhH,KAAKyG,EAAe1E,OAClD1C,EAoIAmJ,CAAetD,EAduE,EAO9E4C,SAO6BD,IAGvC,SAASY,KACd,OAAOtC,EAAeuC,YAGjB,SAASC,GAAQP,EAA0BQ,GAChD,IAAMxE,EAAwBqE,KAAaI,QAAO,SAACC,GAAD,OAC/CF,GAAqBE,EAAS9J,IAAIO,SAASqJ,MAExCnD,EAAqB2C,EAAQ3C,KAAO2C,EAAQ3C,KAAO,UACpC,SAAjB2C,EAAQ3C,KACVrB,EAAKqB,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEhG,IAAI+J,cAAcrD,EAAE1G,QAE1CoF,EAAKqB,MAAK,SAACT,EAAGU,GACZ,OAAOV,EAAE9E,QAAUwF,EAAExF,MAAQ8E,EAAEhG,IAAI+J,cAAcrD,EAAE1G,KAAO0G,EAAExF,MAAQ8E,EAAE9E,SATO,MAYrDqH,GAASnD,EAAKtD,OAAQ2E,EAAM2C,EAAQY,SAAUZ,EAAQG,KAAOH,EAAQG,KAAO,EAAGnE,GAC3G,MAAO,CAAEyD,MAbwE,EAYzEA,MACQa,UAbiE,EAYlEZ,UAiDjB,SAASmB,GAAa/G,GACpB,IAAMhE,EL/QD,SAAyBgE,GAA4B,IAClDJ,EAAqBI,EAArBJ,SAAUC,EAAWG,EAAXH,OACZ/C,EAAMZ,EAAW8D,EAAOL,OAAOrE,OACrC,OAAO,2BAAK0E,EAAOL,QAAnB,IAA2BC,WAAUC,SAAQ/C,QK4QxBsF,CAAuBpC,GAM5C,OALKiE,EAAe+C,OAAOhL,EAAIc,MAE7BY,QAAQC,MAAM,iBAEhBS,EAAQN,KAAK9B,GACN,CAAEc,IAAKd,EAAIc,KA4Gb,SAASmK,GAAajH,GAC3B,OAAQA,EAAON,MACb,IAAK,UACH,OAxIN,SAAqBM,GAAsC,IAAD,EAC/BoC,EAAsBpC,GAAvCH,EADgD,EAChDA,OAAQY,EADwC,EACxCA,KAIhB,OAHAiD,EAASzG,IAAI4C,EAAQY,GACrBqD,EAAa7G,IAAI4C,EAAQ,IACzBmE,EAAS/G,IAAI4C,EAAQ,IAAI9B,EAAYI,IAC9B,CAAE5B,GAAIsD,EAAQjC,KAAM6C,EAAK7C,MAmIrBsJ,CAAYlH,GACrB,IAAK,kBACH,OAlIN,SAA6BA,GAA8C,IAAD,ELzMnE,SAAgCA,GAErC,MAAO,CAAEH,OADkBG,EAAnBH,OACSF,OADUK,EAAXL,QKyMWyC,CAA8BpC,GAAjDH,EADgE,EAChEA,OAAQF,EADwD,EACxDA,OACVc,EAAOiD,EAAS3G,IAAI8C,GAK1B,OAJAY,EAAK7C,KAAO+B,EAAO/B,KACnB6C,EAAKR,MAAQN,EAAOM,MACpBQ,EAAKC,QAAQ2B,SAAW1C,EAAO0C,SAC/B5B,EAAKC,QAAQ4B,QAAU3C,EAAO2C,QACvB,CAAE/F,GAAIsD,EAAQjC,KAAM6C,EAAK7C,MA2HrBuJ,CAAoBnH,GAC7B,IAAK,WACH,OAAO+G,GAAa/G,GACtB,IAAK,gBACH,OAlHN,SAA2BA,GAA4C,IAAD,IL5L/D,SAA8BA,GAAgF,IAC3GJ,EAA8CI,EAA9CJ,SAAUC,EAAoCG,EAApCH,OAAQnB,EAA4BsB,EAA5BtB,aAAcmC,EAAcb,EAAda,UAD0E,EAEhFb,EAAOL,OAAjCrE,EAF0G,EAE1GA,MAAOmE,EAFmG,EAEnGA,SAGf,MAAO,CAAEhC,OADc,CAAElB,GAAImC,EAAcd,KAAMtC,GAChC4G,KALiG,EAEzFA,KAGFU,MAFI,CAAEhD,WAAUC,SAAQgB,YAAWpB,aK0LjB2C,CAA4BpC,GAA7DvC,EAD4D,EAC5DA,OAAQyE,EADoD,EACpDA,KAAagB,EADuC,EAC9CN,MAChBlE,EAAejB,EAAOlB,GAEtB6K,EAAkB,GAJ4C,cAKlDlF,GALkD,IAKpE,2BAAwB,CAAC,IAAdlG,EAAa,QAClBM,EAAQ2H,EAAezG,KAAKxB,GAChC,IAAKM,EAAO,CACV,IAAK0E,EAAyB,CAG5BtD,QAAQC,MAAR,2CAAkD3B,IAClD,SAOF,GAHAiL,GADkC7E,EAAoBpG,EAAKgE,EAAOJ,SAAUI,EAAOH,WAGnFvD,EAAQ2H,EAAezG,KAAKxB,IAI1B,SAGJoL,EAAOtJ,KAAKxB,IAzBsD,8BA4BpE8K,EAAOhK,SAAQ,SAACd,GAAD,OAAW2H,EAAeoD,gBAAgB/K,EAAOoC,MAEhE,IAAMsE,EAA6B,CACjCzG,GAAIkB,EAAOlB,GACXqB,KAAMH,EAAOG,KACbsE,KAAMkF,EACNxE,MAAOM,EACPL,SAAU,IAEZc,EAAe1G,IAAIyB,EAAcsE,GACjC,IAAMsE,EAAS5C,GAAkB1B,EAAYwB,GAO7C,OANAZ,EAAwB2D,QAAQD,GAChCzD,EAAwB0D,QAAQD,GAEhCxD,EAAa/G,IAAImG,EAAQrD,QAAS/B,KAAKoF,GAEvCa,EAAmB9G,IAAIiG,EAAQrC,UAAWnC,GACnCjB,EAqEI+J,CAAkBxH,GAC3B,IAAK,aACH,OApEN,SAAwBA,GAA0C,IAAD,ELxM1D,SAA2BA,GAAqE,IAC7FJ,EAA8CI,EAA9CJ,SAAUC,EAAoCG,EAApCH,OAGlB,MAAO,CAAEnB,aAH6CsB,EAA5BtB,aAGHwE,QADM,CAAEtD,WAAUC,SAAQgB,UAFKb,EAAda,UAEoBpB,SADvCO,EAAOL,OAApBF,WKuM0B2C,CAAyBpC,GAAnDtB,EADuD,EACvDA,aAAcwE,EADyC,EACzCA,QAChBF,EAA6BW,EAAe5G,IAAI2B,GAqBtD,OAnBAsE,EAAWH,SAAS/E,KAAKoF,GAEzB,SAAkBoE,GAEhB,IAAK,IAAIpI,EAAI2E,EAAwBjF,OAAS,EAAGM,GAAK,IAAKA,EACzD,GAAI2E,EAAwB3E,GAAG,KAAOoI,EAAO,GAG3C,OAFAzD,EAAwB4D,OAAOvI,EAAG,QAClC2E,EAAwB0D,QAAQD,GAIpC5J,QAAQgK,IAAI,qCAEdC,CAASjD,GAAkB1B,EAAYyB,IAEvCX,EAAa/G,IAAImG,EAAQrD,QAAS/B,KAAKoF,GACvCF,EAAWd,KAAK9E,SAAQ,SAACd,GAAD,OAAW0H,EAASjH,IAAImG,EAAQrD,QAASqF,IAAI5I,MAErEyH,EAAmB9G,IAAIiG,EAAQrC,UAAWnC,GACnC,CACLkJ,YAAarD,EAAerB,EAAQrD,QACpCJ,SAAUyD,EAAQzD,SAClBG,SAAUsD,EAAQtD,UA0CTiI,CAAe7H,GACxB,IAAK,cACH,OAxCN,SAAyBA,GAAkD,ML7MpE,SAA4BA,GAEjC,MAAO,CAAEhE,IADegE,EAAhBhE,IACM2D,OADUK,EAAXL,QK8MWyC,CAA0BpC,GAA1ChE,EAFiE,EAEjEA,IAAK2D,EAF4D,EAE5DA,OACLhB,EAAsBgB,EAAtBhB,QAASc,EAAaE,EAAbF,SACXnD,EAA2B2H,EAAezG,KAAKxB,GACrD,GAAKM,EAAL,CAIA,GAAIP,EAAMO,GAAQ,CAGhB,IAAMmF,EAAiBrD,EAAQZ,MAAK,SAACsF,GAAD,OAAOA,EAAEhG,MAAQR,EAAMN,OAC3DyF,EAAM9C,QAAUA,EAAQC,OAASD,OAAU1C,EAC3CwF,EAAMhC,SAAWA,EAASb,OAASa,OAAWxD,MACzC,CACL,GAA2B,UAAvBK,EAAME,aAER,OAEF,IAAM+B,EAAoBJ,EAAUX,MAAK,SAACsF,GAAD,OAAOA,EAAEvG,KAAOD,EAAMC,MAC/DgC,EAAMI,QAAUA,EAChBJ,EAAMkB,SAAWA,EAASb,OAASa,OAAWxD,EAEhD,MAAO,CAAEa,IAAKd,IAgBH8L,CAAgB9H,GACzB,QACE,MAAO,CAAErC,MAAO,0BAQtB,WAGE,SAASoK,EAASC,EAAcC,EAAgBpG,EAAkB7B,GAChE,GAAIiI,IAAWpG,EAAU,CACvB,IAAMe,EAAgBd,KAAKC,UAAU,CAAEkG,SAAQpG,YAAY,KAAM,GAC3DqG,EAAiBpG,KAAKC,UAAU/B,EAAQ,KAAM,GACpDtC,QAAQC,MAAR,wBAA+BqK,EAA/B,cAAyCpF,EAAzC,YAAkDsF,KALxBlG,EAAYC,GAQlC7E,SAAQ,SAAC4C,GAEf,OAAQA,EAAON,MACb,IAAK,UACHqI,EAAS,OAAQ/H,EAAOH,OAAQqE,EAAWrE,OAAOuE,OAAQpE,GAC1D,MACF,IAAK,gBACH+H,EAAS,aAAc/H,EAAOtB,aAAcwF,EAAWxF,aAAa0F,OAAQpE,GAC5E+H,EAAS,UAAW/H,EAAOa,UAAWqD,EAAWrD,UAAUuD,OAAQpE,GACnE,MACF,IAAK,aACH+H,EAAS,UAAW/H,EAAOa,UAAWqD,EAAWrD,UAAUuD,OAAQpE,GAMvEiH,GAAajH,MAGjBmI,GE/dA,IAAMC,GAAyC,IAAIxL,IAEnD,SAASyL,GAASxI,GAChB,IAAIyI,EAAeF,GAAYrL,IAAI8C,GAKnC,OAJKyI,IACHA,EAAe,GACfF,GAAYnL,IAAI4C,EAAQyI,IAEnBA,ECVF,SAASC,GAAWC,EAAazC,GAEpCrI,QAAQgK,IAAR,4BAAiCc,IAGnC,IH0IuBjM,EG1IjB8F,EAAyBlG,MAAIsM,YAAYD,GACzChM,EAAeL,MAAIuM,gBAAgBrG,GACzC,IAAIlG,MAAIwM,cAAcnM,GAKtB,OAAQA,GACN,IAAK,UACH,MH2HG,CACLE,OAAQyB,EACR+D,KAAM+B,EAAe2E,iBGxHrB,IAAK,QACH,IAAMrK,EAAQpC,MAAI0M,QAAQxG,GAC1B,GAAIlG,MAAIwM,cAAcpK,GAEpB,OAEF,OHsHmBhC,EGtHAgC,EAAMhC,GHuHtB4B,EAAUX,MAAK,SAACe,GAAD,OAAWA,EAAMhC,KAAOA,KGpH5C,IAAK,OACH,GAAIJ,MAAI2M,QAAQzG,GACd,OHqHD,WACL,IAAMlF,EAAyB,GAE/B,OADAuG,EAAStG,SAAQ,SAACkH,EAAMzE,GAAP,OAAkB1C,EAAGW,KAAKuG,EAAmBxE,EAAQyE,OAC/DnH,EAAGoG,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAElF,KAAKiJ,cAAcrD,EAAE5F,SGxHnCmL,GAGT,IAAMC,EAAc7M,MAAI8M,cAAc5G,GACtC,GAAIlG,MAAIwM,cAAcK,GAEpB,OARS,IAUHvI,EAAsBuI,EAAtBvI,KACR,OAD8BuI,EAAhBE,aAEZ,IAAK,UACL,IAAK,eACL,UAAKjN,EACH,OAAO8M,GAAWtI,EAAKlE,GAAIwJ,GAC7B,IAAK,WAEH,IAAMoD,EAAehN,MAAIiN,sBAAsB/G,GAC/C,GAAIlG,MAAIwM,cAAcQ,GAEpB,OAEF,OH4HH,SAAyBjD,GAG9B,IAAMrG,EAASqG,EAAQzF,KAAKlE,GACtBsG,EAA0BiB,EAAa/G,IAAI8C,GAC3C0D,EAAyB2C,EAAQ3C,KAAO2C,EAAQ3C,KAAO,SACvD4C,EAA0B,WAAT5C,EAAoBV,EAAWA,EAASgD,QAAQO,UAN4B,EAQvEf,GAASxC,EAASjE,OAAQ2E,EAAM,GAAI2C,EAAQG,KAAOH,EAAQG,KAAO,EAAGF,GAAzFR,EAR2F,EAQ3FA,MAR2F,EAcpEf,GAdoE,EAQpFgB,SACsDjJ,KAAI,SAACuG,GACxE,IAAMxE,EAAuBqF,EAAmBhH,IAAImG,EAAQrC,WAE5D,MAAO,CAD4B8C,EAAe5G,IAAI2B,GAClCwE,OAItB,MAAO,CAAE4B,MAhB0F,EAc3FA,MAEQC,YAhBmF,EAcpFA,YAEcY,QAAOa,UADFxC,EAASjH,IAAI8C,GAASwJ,QG3IzCN,CAAmBI,GAC5B,QAEE,OAIN,IAAK,aAED,IAAMjD,EAAU/J,MAAImN,qBAAqBjH,GACzC,IAAKlG,MAAIwM,cAAczC,GAErB,ODlDH,SAAkCrG,EAAgBqG,GACvD,IAAMoC,EAAeD,GAASxI,GAE9B,GAAIqG,EAAQ3C,MAAQ2C,EAAQY,SAAU,CACpC,IAAItH,EAAS8I,EAAavD,YACrBvF,IACHA,EAAS,GACT8I,EAAavD,YAAcvF,GAEzB0G,EAAQ3C,OACV/D,EAAO+D,KAAO2C,EAAQ3C,MAEpB2C,EAAQY,WACVtH,EAAOsH,SAAWZ,EAAQY,UAI9B,IAAMyC,EAAMjB,EAAavD,YACrBwE,IACEA,EAAIhG,OACN2C,EAAQ3C,KAAOgG,EAAIhG,MAEjBgG,EAAIzC,WACNZ,EAAQY,SAAWyC,EAAIzC,WC0BnB0C,CAAiCzD,EAAaG,GHoIjD,SAAwBA,GAC7B,IAAM3C,EAA4B2C,EAAQ3C,KAAO2C,EAAQ3C,KAAO,SAC1D+D,EAAkB,WAAT/D,EAETkG,EAAwCnC,EAASzD,EAA0BD,EAC3E5H,EAAMkK,EAAQlK,IACd0N,EAAuB1N,EAEzByN,EAAkB9C,QAAO,SAAClD,GACxB,IADiC,EAC3B/E,EAAe+E,EAAK,GACpBT,EAAaW,EAAe5G,IAAI2B,GAFL,cAGbsE,EAAWd,MAHE,IAGjC,2BAAqC,CAAC,IAA3B5F,EAA0B,QAEnC,GADwB2F,EAAgB3F,GAC9BQ,MAAQd,EAAIc,IACpB,OAAO,GANsB,8BASjC,OAAO,KAVT2M,EAYE9E,EAAyB2C,EAAS7C,EAAkBD,EAnB0B,EAoBxDa,GAC1BqE,EAAoB9K,OACpB2E,EACA2C,EAAQY,SAAWZ,EAAQY,SAAW,GACtCZ,EAAQG,KAAOH,EAAQG,KAAO,EAC9BqD,GALM/D,EApB4E,EAoB5EA,MAAOC,EApBqE,EAoBrEA,SAOT+D,EAAe,2BAAQhE,GAAR,IAAe3J,QA3BgD,EAiCrD4I,GALegB,EAASjJ,KAAI,SAAC8G,GAAD,OAAUE,EAAe5G,IAAI0G,EAAK,OACb9G,KAAI,SAACqG,GAAD,MAAgB,CAClGA,EACA2B,EAAW3B,QAGb,MAAO,CAAE8B,MAlC2E,EAiC5EA,MACQC,YAlCoE,EAiCrEA,YACcY,MAAOgE,GGrKrBZ,CAAkB7C,GAM3B,IAAMA,EAAU/J,MAAIyN,oBAAoBvH,GACxC,IAAKlG,MAAIwM,cAAczC,GAAU,ED7BlC,SAAiCrG,EAAgBqG,GACtD,IAAMoC,EAAeD,GAASxI,GAE9B,GAAIqG,EAAQ3C,KAAM,CAChB,IAAI/D,EAAS8I,EAAatF,WACrBxD,IACHA,EAAS,GACT8I,EAAatF,WAAaxD,GAExB0G,EAAQ3C,OACV/D,EAAO+D,KAAO2C,EAAQ3C,MAI1B,IAAMgG,EAAMjB,EAAatF,WACrBuG,GACEA,EAAIhG,OACN2C,EAAQ3C,KAAOgG,EAAIhG,MCafiG,CAAgCzD,EAAaG,GAC7C,IAAMlD,EAAa+F,GAAiB7C,GACpC,IAAKlD,EAEH,OAEF,OAAOA,EAKX,OAGF,IAAK,MACH,GAAI7G,MAAI0N,UAAUxH,GAChB,OAAO0G,KAET,IAAM7C,EAAU/J,MAAI2N,cAAczH,GAClC,IAAKlG,MAAIwM,cAAczC,GACrB,OAAO6C,GAAW7C,GAEpB,IAAMpJ,EAAMX,MAAI4N,SAAS1H,GACzB,OAAKlG,MAAIwM,cAAc7L,QAIvB,EH0KC,SAAgBd,GACrB,IAAMM,EAA2B2H,EAAezG,KAAKxB,EAAIc,KACzD,GAAKR,EAAL,CAIA,GAAIP,EAAMO,GAAQ,CAGhB,IAAMmF,EAAiBrD,EAAQZ,MAAK,SAACsF,GAAD,OAAOA,EAAEhG,MAAQR,EAAMN,OAE3D,MAAO,CAAEV,MAD4BmG,EAA7BnG,MACQqD,QADqB8C,EAAtB9C,QACUc,SADYgC,EAAbhC,SACW3C,IAAKd,EAAIc,KAE5C,GAA2B,UAAvBR,EAAME,aAAV,CAIA,IAAM+B,EAAoBJ,EAAUX,MAAK,SAACsF,GAAD,OAAOA,EAAEvG,KAAOD,EAAMC,MAE/D,MAAO,CAAEjB,MAD2BiD,EAA5BX,KACce,QADcJ,EAAtBI,QACiBc,SADKlB,EAAbkB,SACkB3C,IAAKd,EAAIc,OGhMvCiM,CAAUjM,GAMrB,QACE,QAKC,SAASkN,KAA0B,IAAD,EACMjB,GAAW,EAAG,GAC3D,MAAO,CAAExM,GAF8B,EAC/BA,GACKqB,KAF0B,EAC3BA,KACOsC,aAFoB,EACrBA,aACemC,SAFM,EACPA,UAI3B,SAAS4H,GAAYzB,EAAa3I,EAAgBqK,GAErDxM,QAAQgK,IAAR,6BAAkCc,EAAlC,eAA4C1G,KAAKC,UAAUmI,OAAMjO,EAAW,KAG9E,IAAMoG,EAAyBlG,MAAIsM,YAAYD,GACzChM,EAAeL,MAAIuM,gBAAgBrG,GACzC,IAAIlG,MAAIwM,cAAcnM,GAAtB,CAKA,IAAMoD,GAAmB,IAAIyD,MAAO8G,cAgEpC,OAAQ3N,GACN,IAAK,QACH,OAAOwN,KACT,IAAK,MACH,IAAM9D,EAAU/J,MAAI2N,cAAczH,GAClC,IAAKlG,MAAIwM,cAAczC,GACrB,OAAO6C,GAAW7C,EAAUgE,EAAqBxD,aAOvD,IAAM1G,EA1EN,SAAmBxD,GACjB,OAAQA,GACN,IAAK,aAID,IAAMkC,EAAevC,MAAIiO,YAAY/H,GACrC,GAAI3D,EAAc,CAEhB,IAAMiB,EAASuK,EACTrJ,EAAYkI,IAElB,OAAO3G,EAAwBzC,EAAQC,EAAUC,EAAQnB,EAAcmC,GAK3E,GAAI1E,MAAIkO,gBAAgBhI,GAAW,CACjC,IAAM1C,EAASuK,EACTxL,EH/GPwF,EAAWxF,aAAa0F,OGgHjBvD,EAAYkI,IAClB,OAAO3G,EAA2BzC,EAAQC,EAAUC,EAAQnB,EAAcmC,GAG5E,MAAO,CAAElD,MAAO,8BAGlB,IAAK,OAID,IAAM2M,EAAYnO,MAAIoO,kBAAkBlI,GACxC,OAAIiI,EACEzK,IAAWyK,EAEN,CAAE3M,MAAO,iDR5EvB,SAA+BgC,EAA8BC,EAAkBC,GACpF,MAAO,CAAEH,KAAM,kBAAmBC,SAAQC,WAAUC,UQ8EnCuC,CADQ8H,EAC6BtK,EAAUC,GAInD,CAAElC,MAAO,wBAGlB,IAAK,MACH,IAAM3B,EAAMG,MAAIqO,cAAcnI,GAC9B,OAAIrG,ERYL,SACL2D,EACAC,EACAC,EAEA7D,GAEA,MAAO,CAAE0D,KAAM,cAAeC,SAAQC,WAAUC,SAAQ7D,OQjBzCoG,CADQ8H,EACyBtK,EAAUC,EAAQ7D,GAErD,CAAE2B,MAAO,uBAGlB,QACE,MAAO,CAAEA,MAAO,6BAmBP8M,CAAUjO,GACzB,IAAIL,MAAIwM,cAAc3I,GAMtB,OAAO+I,GAAgB/I,GAJrBtC,QAAQgK,IAAI1H,EAAOrC,QC1NvB,IACI+M,GAAY,IADIvI,EAAQ,KACCwI,wBAGtB,SAASC,GAAOnL,GAErB,MAAO,CAAEoL,OADMH,GAAUI,SAASrL,I,qECIvBsL,I,4BAAaC,KAAMC,cAA+B,CAC7DC,QAAIjP,EACJkP,MAAO,SAACD,KACRE,SAAKnP,KAGA,SAASoP,KAEd,OADoCL,KAAMM,WAAWP,IACnCG,GAGb,SAASK,KAEd,OADoCP,KAAMM,WAAWP,IACnCK,ICsCb,SAASI,GAAmBC,GACjC,OAAOC,GAAaD,OAHA,GAMf,SAASC,GAEdD,EAEAE,GAC4B,IAAD,EACFX,KAAMY,cAA6B3P,GADjC,mBACpB4P,EADoB,KACdC,EADc,OAEHd,KAAMY,cAA4B3P,GAF/B,mBAEpBqI,EAFoB,KAEdyH,EAFc,OAGDf,KAAMY,cAA4B3P,GAHjC,mBAGpB0B,EAHoB,KAGbqO,EAHa,OASChB,KAAMY,UAAkB,GATzB,mBASpBK,EAToB,KASZC,EATY,KAgB3B,IAAMC,EAAUnB,KAAMoB,SAAQ,WAiB5B,OAhByD,SAACC,GACxD,IAAMC,EAAUb,EAAQE,EAAOU,GAa/B,OAZ0B,IAAIE,SAAc,SAACC,EAASC,GACpDH,EAAQI,MAAK,SAACC,GAGZZ,EAAQY,GAERH,OAEFF,EAAQM,OAAM,SAACjP,GACb8O,EAAO9O,YAMZ,CAAC8N,EAASE,IAoBb,OAdAX,KAAM6B,WAAU,WACdpB,EAAQE,GACLe,MAAK,SAACC,GACLZ,EAAQY,GACRb,EAASH,MAEViB,OAAM,SAACE,GACNpP,QAAQgK,IAAR,2BAAgCoF,IAChCd,EAASc,QAEZ,CAACrB,EAASE,EAAOM,IAIb,CAAE3H,KAAMuH,IAASF,EAAQrH,OAAOrI,EAAW0B,QAAOoP,OA5CzD,WACEb,GAAWD,IA2CoDE,WC3HnE,IA2Eaa,GAAb,WAQE,WAAYC,EAAgCC,EAAgBC,GAAsB,yBAPzEC,oBAOwE,OANxEC,kBAMwE,OALxEC,yBAKwE,OAJxEtQ,WAIwE,OAHxEuQ,mBAGwE,OAFhEN,kBAEgE,MACzEG,EAA4DH,EAA5DG,eAAgBC,EAA4CJ,EAA5CI,aAAcG,EAA8BP,EAA9BO,mBAAoBxQ,EAAUiQ,EAAVjQ,MACxD0K,GAAI,WAAY,CACd0F,iBACAC,eACAG,qBACAxQ,UAGFkQ,GAAQC,GAAcA,IAAenQ,EAAO,wBAGrB,OAAnBoQ,IACFF,GAAO,EAAO,kCACdE,EAAiB,GAEE,OAAjBC,IACFH,GAAO,EAAO,gCACdG,EAAe,GAEbD,EAAiBC,IACnBH,GAAO,EAAO,4CACdE,EAAiB,GAInB,IADA,IAAIG,GAAgB,EACbvQ,EAAM4B,QAAuB,MAAb5B,EAAM,IAC3BA,EAAQA,EAAMoC,UAAU,KACtBgO,IACAC,EACFE,GAAgB,EAGlB1Q,KAAKuQ,eAAiBA,EACtBvQ,KAAKwQ,aAAeA,EACpBxQ,KAAKyQ,oBAA6C,aAAvBE,EAC3B3Q,KAAKG,MAAQA,EACbH,KAAK0Q,cAAgBA,EACrB1Q,KAAKoQ,aAAeA,EA9CxB,oDAkDIpQ,KAAKoQ,aAAaQ,UAlDtB,iCAqDazQ,EAAe0I,EAAegI,GAEvC7Q,KAAKoQ,aAAajQ,MAAQA,EAC1BH,KAAKoQ,aAAaU,kBAAkBjI,EAAOgI,GAE3C,IAAME,EAAQC,GAAa7Q,EAAQ,KACnCH,KAAKoQ,aAAaa,MAAMF,MAAxB,UAAmCA,EAAnC,QA3DJ,+BAsEI,MAN4B,CAAC,UAAD,OAChB/Q,KAAKwQ,cADW,eAElBxQ,KAAKwQ,cAFa,oBAGbxQ,KAAKyQ,qBAHQ,iBAIhBzQ,KAAKG,QAEAsC,KAAK,UAtE1B,KA6EMyO,G,WAYJ,WAAYC,EAAsBf,EAA4BC,GAAiB,yBAXtEe,iBAWqE,OAVrEC,kBAUqE,OATrEC,kBASqE,OARrEC,gBAQqE,MACpEC,EAAaL,EAAbK,SADoE,EAEpCC,GAAcD,EAAUnB,GAAxDqB,EAFoE,EAEpEA,WAAYC,EAFwD,EAExDA,QAASC,EAF+C,EAE/CA,OACvBC,EA+cV,SAAyBL,EAA0CM,EAAezB,GAChF,OAAO0B,GACLP,EAAS1R,KAAI,SAACmG,GAAD,OAAOA,EAAE3D,QACtBwP,EACAzB,GAndqB2B,CAAgBR,EAAUE,EAAYrB,GAEnDE,EAA6DH,EAA7DG,eAAgBC,EAA6CJ,EAA7CI,aAAcC,EAA+BL,EAA/BK,oBAAqBtQ,EAAUiQ,EAAVjQ,MAGrD8R,EAAe1B,IAAmBC,GAAgBC,EAClDyB,EAAgB3B,IAAmBC,IAAiBC,EAG1DzQ,KAAKoR,YAAiC,IAAnBb,IAAyBoB,GAAWM,EAEvDjS,KAAKqR,aAAeb,IAAiBrQ,EAAM4B,SAAW6P,GAAUM,EAEhElS,KAAKsR,aAAeO,EAAetB,EACnCvQ,KAAKuR,WAAaM,EAAerB,E,qDAvBjC,OAAOxQ,KAAKsR,aAAe,I,gCAG3B,OAAOtR,KAAKuR,WAAa,M,oDAuBZY,GACbA,EAAaC,OAAOpS,KAAKsR,aAActR,KAAKuR,gB,KAO1Cc,G,WAQJ,WAAYC,EAA8BC,GAAmB,yBAPrDC,eAOoD,OANpDC,YAMoD,OAHpDrQ,WAGoD,OAFpDmQ,aAEoD,MAElDpB,EAAoBmB,EAApBnB,MAAOK,EAAac,EAAbd,SACfxR,KAAKwS,UAAYrB,EAAMqB,UACvBxS,KAAKyS,OAAStB,EAAMsB,OACpBzS,KAAKoC,MAAQoP,EAAS1R,KAAI,SAACmG,GAAD,OAAOA,EAAE3D,QACnCtC,KAAKuS,QAAUA,EAN2C,IASlDb,EAAeD,GAAcD,EAAUe,EAAQlC,QAA/CqB,WATkD,EAUVa,EAAQnC,aAAhDjQ,EAVkD,EAUlDA,MAAOoQ,EAV2C,EAU3CA,eAAgBC,EAV2B,EAU3BA,aAC/BxQ,KAAK0S,eAAehB,EAAYvR,EAAO,CACrC0I,MAAO0H,EACPM,IAAKL,IAEP3F,GAAI,eAAgB,CAClB2H,UAAWxS,KAAKwS,UAChBC,OAAQzS,KAAKyS,OACbrQ,MAAOpC,KAAKoC,Q,uDAMd,IAAM+O,EAAe,CAAEsB,OAAQzS,KAAKyS,OAAQD,UAAWxS,KAAKwS,WADpC,EAEoCxS,KAAKuS,QAAzDlC,EAFgB,EAEhBA,OAAQD,EAFQ,EAERA,aAAcuC,EAFN,EAEMA,cACxBL,EAA+BM,GAAYzB,EAAOd,EAHhC,EAEqBwC,WAC+BzC,EAAcuC,GAC1FG,GAAiB,kCAAmCR,GAEpD,IAAMjN,EAAiBiN,EAAcd,SAAS1R,KAAI,SAACiT,GAAD,OAAaA,EAAQzQ,QAAMwH,QAAO,SAACxH,GAAD,QAAYA,EAAKP,UAC/FiR,GAAWV,EAAcW,gBAAgBlR,OAE/C,OADA/B,KAAKuS,QAAQW,OAAO,CAAE7N,OAAM2N,YACrBV,I,qCAGMR,EAAeqB,EAAkBX,GAC9CxS,KAAKoT,YAEL,IAAMC,EAAsBrT,KAAKoC,MAAM0P,GAEjCwB,EAAStT,KAAKoC,MAAML,QAAgD,KAAtC/B,KAAKoC,MAAMpC,KAAKoC,MAAML,OAAS,GAAY,EAAI,GAGnF,GAAIsR,IAAgBF,EAApB,CAGA,IAAMI,EAAYxB,GAAa/R,KAAKoC,MAAO0P,EAAO9R,KAAKuS,QAAQlC,QAKzDmD,EAAgC,KAAbL,GAAmBrB,EAAQwB,EAAS,EACzDE,GACFxT,KAAKyT,cAAcF,EAAYF,EAAYtR,QAG7C,IAAM2R,EAAiC,KAAbP,GAAmBrB,IAAUwB,EAAS,GAAe,IAAVxB,EACjE4B,GACF1T,KAAKyT,cAAcF,EAAY,GAGjC,IAAMI,EAAiBJ,IAAcvT,KAAK4T,eAAiB9B,EACvD6B,GAEF3T,KAAKuS,QAAQlC,QAAQgD,EAAYtR,UAAYoR,EAASpR,OAAQ,+BAGhE8I,GAAI,iBAAkB,CACpB2I,mBACAE,oBACAC,mBAIF,IAAME,EAAsBR,EAAYtR,QAAUyR,GAAoBE,EAAoB,EAAI,GACxFI,EAAsBJ,GAAqBC,EAAiBJ,EAAY,EAAIA,EAC5EQ,EAAuBJ,EAA4B,IAAMR,EAAjBA,EAY9C,GATAnT,KAAKyS,OAASuB,GAAahU,KAAKyS,OAAQqB,EAAaD,EAAaE,GAE9DZ,EAASpR,OACX/B,KAAKoC,MAAM0P,GAASqB,EAEpBnT,KAAKoC,MAAMwI,OAAOkH,EAAO,GAIvBU,EAAW,CAEb,IAAMe,EAAYxB,GAAa/R,KAAKoC,MAAO0P,EAAO9R,KAAKuS,QAAQlC,QAC/DrQ,KAAKwS,UAAU3J,MAAQ2J,EAAU3J,MAAQ0K,EACzCvT,KAAKwS,UAAU3B,IAAM2B,EAAU3B,IAAM0C,OAGjCvT,KAAKwS,UAAU3J,MAAQ0K,IACzBvT,KAAKwS,UAAU3J,OAASgL,GAEtB7T,KAAKwS,UAAU3B,IAAM0C,IACvBvT,KAAKwS,UAAU3B,KAAOgD,GAG1B7T,KAAKoT,e,kCAKLa,GAAYjU,KAAKoC,MAAOpC,KAAKyS,OAAQzS,KAAKuS,QAAQlC,U,oCAE9ByB,GACpB9R,KAAKuS,QAAQlC,OAAmD,MAA5CrQ,KAAKyS,OAAOlQ,UAAUuP,EAAOA,EAAQ,GAAY,uC,6BAGhEjJ,EAAegL,GACpB7T,KAAKyS,OAASuB,GAAahU,KAAKyS,OAAQ5J,EAAOgL,EAAa,M,uCAI7CK,GACflU,KAAKwS,UAAU3J,MAAQqL,EACvBlU,KAAKwS,UAAU3B,IAAMqD,I,wCAELA,GAChBlU,KAAKwS,UAAU3J,MAAQqL,I,sCAETA,GACdlU,KAAKwS,UAAU3B,IAAMqD,I,oCAIrB,OAAOlU,KAAKyS,OAAO1Q,OAAS/B,KAAKyS,OAAO1Q,OAAS,EAAI,I,kCAG3C+P,GACV,IAAMyB,EAAYxB,GAAa/R,KAAKoC,MAAO0P,EAAO9R,KAAKuS,QAAQlC,QAC/DrQ,KAAKmU,iBAAiBZ,EAAYvT,KAAKoC,MAAM0P,GAAO/P,U,8BAGpD/B,KAAKuS,QAAQnC,aAAaQ,Y,KAQjBwD,GAAb,WAIE,WAAY/O,GAAmB,yBADdA,UACa,EAC5BrF,KAAKqF,KAAOA,EALhB,qDAOWgP,EAAoB7C,GAA0C,IAAD,OACpE,IAAK6C,EAAWtS,OACd,MAAO,GAGT,IAAMuS,EAAqB9C,EAAS1H,QAAO,SAAC7D,GAAD,MAAkB,QAAXA,EAAEpD,QAAgB/C,KAAI,SAACmG,GAAD,OAAOA,EAAE3D,QAM3EiS,EAAW,SAAC1L,EAAgB2L,GAChC,IAAM5P,EAAQ,EAAKS,KAChByE,QAAO,SAAC3K,GAAD,OAAU0J,EAAQ1J,EAAIc,IAAIwU,WAAWJ,GAAclV,EAAIc,IAAIsC,UAAU,GAAG/B,SAAS6T,MACxFvK,QAAO,SAAC7D,GAAD,OAAQqO,EAAS9T,SAASyF,EAAEhG,QAGtC,OADA2E,EAAM8B,MAAK,SAACT,EAAGU,GAAJ,OAAWV,EAAE9E,QAAUwF,EAAExF,MAAQ8E,EAAEhG,IAAI+J,cAAcrD,EAAE1G,KAAO0G,EAAExF,MAAQ8E,EAAE9E,SAC9EyD,EAAMoE,MAAM,EAAGwL,IAElB5P,EAAQ2P,GAAS,EA7BV,GA8Bb,OA9Ba,IA8BN3P,EAAM7C,OAAsB6C,EAAQA,EAAM5C,OAAOuS,GAAS,EA9BpD,EA8BsE3P,EAAM7C,WA3B7F,6BA6BSsS,GACL,OAAOrU,KAAKqF,KAAKqP,MAAK,SAACvV,GAAD,OAASA,EAAIc,MAAQoU,OA9B/C,+BAkCI,MAAM,GAAN,OAAUrU,KAAKqF,KAAKtD,OAApB,iBAlCJ,KAoGO,SAAS4S,GAAQxD,EAAsBhO,GAC5C0H,GAAI,UAAW1H,GACf,IAAMiN,EAAejN,EAAOoP,QAAQnC,aAIpC,SAASwE,IAEP,OADA9B,GAAiB,kBAAmB3B,GAC7B,IAAIkB,GAAalB,EAAOhO,EAAOoP,SAGxC,SAASsC,IACP,OAAO,IAAI3D,GAAWC,EAAOf,EAAcjN,EAAOoP,QAAQlC,QAG5D,GAnBF,SAAkBlN,GAChB,MAAuB,WAAhBA,EAAON,KAkBViS,CAAS3R,GAEX,OADmCyR,IACfG,WAGtB,GAvCF,SAAuB5R,GACrB,MAAuB,gBAAhBA,EAAON,KAsCVmS,CAAc7R,GAAS,CAEzBiN,EAAaQ,QACb,IAAMuB,EAA6ByC,IAEnC,OADAzC,EAAagC,iBAAiBhC,EAAayB,eACpCzB,EAAa4C,WAGtB,GA5CF,SAAsB5R,GACpB,MAAuB,eAAhBA,EAAON,KA2CVoS,CAAa9R,GAAS,CAExBiN,EAAaQ,QACb,IAAMuB,EAA6ByC,IAGnC,OAFAzC,EAAaO,eAAevP,EAAOuO,WAAYvO,EAAO+R,MACtD/C,EAAagC,iBAAiBhC,EAAayB,eACpCzB,EAAa4C,WAGtB,GAlDF,SAAqB5R,GACnB,MAAuB,cAAhBA,EAAON,KAiDVsS,CAAYhS,GAAS,CACvB,IAAMgP,EAA6ByC,IAEnC,OADAzC,EAAaO,eAAevP,EAAO2O,MAAO,IACnCK,EAAa4C,WAGtB,GArDF,SAAoB5R,GAClB,MAAuB,aAAhBA,EAAON,KAoDVuS,CAAWjS,GAAS,CACtB,IAAMgP,EAA6ByC,IAKnC,OAHAzC,EAAakD,YAAYlS,EAAO2O,OAEhCK,EAAavB,QACNuB,EAAa4C,WAGtB,GA3DF,SAAmB5R,GACjB,MAAuB,YAAhBA,EAAON,KA0DVyS,CAAUnS,GAAS,CAAC,IACdlD,EAAkBkD,EAAlBlD,IAAKsV,EAAapS,EAAboS,SACb,OAAQtV,GACN,IAAK,OACL,IAAK,UAEH,IAAMkS,EAA6ByC,IAEnC,OADAzC,EAAagC,iBAAiB,GACvBhC,EAAa4C,WAGtB,IAAK,MACL,IAAK,YAEH,IAAM5C,EAA6ByC,IAEnC,OADAzC,EAAagC,iBAAiBhC,EAAayB,eACpCzB,EAAa4C,WAGtB,IAAK,YACH,IAAMS,EAAyBX,IAEzB1C,EAA6ByC,IAC7BpQ,EAASgR,EAAWC,SAM1B,OALIF,EACFpD,EAAauD,kBAAkBlR,GAE/B2N,EAAagC,iBAAiB3P,GAEzB2N,EAAa4C,WAEtB,IAAK,aACH,IAAMS,EAAyBX,IAEzB1C,EAA6ByC,IAC7BpQ,EAASgR,EAAWG,UAM1B,OALIJ,EACFpD,EAAayD,gBAAgBpR,GAE7B2N,EAAagC,iBAAiB3P,GAEzB2N,EAAa4C,WAEtB,IAAK,YAEH,IAAMS,EAAyBX,IACzB1C,EAA6ByC,IAC/BW,GAEFC,EAAWK,eAAe1D,GAE5B,IAAM3N,EAASgR,EAAWC,SAG1B,OAFAtD,EAAaC,OAAO5N,EAAQ,GAC5B2N,EAAagC,iBAAiB3P,GACvB2N,EAAa4C,WAEtB,IAAK,SAEH,IAAMS,EAAyBX,IACzB1C,EAA6ByC,IAC/BW,GAEFC,EAAWK,eAAe1D,GAE5B,IAAM3N,EAASgR,EAAWlE,aAG1B,OAFAa,EAAaC,OAAO5N,EAAQ,GAC5B2N,EAAagC,iBAAiB3P,GACvB2N,EAAa4C,YAQ1B,OADAjC,GAAiB,8BAA+B3B,GACzCA,EAST,SAAS6C,GAAa8B,EAAcjN,EAAegL,EAAqBkC,GAEtE,IAEMC,EAFYF,EAAKvT,UAAU,EAAGsG,GAEVkN,EADVD,EAAKvT,UAAUsG,EAAQgL,GAGvC,OADAhJ,GAAI,eAAgB,CAAEiL,OAAMjN,QAAOgL,cAAakC,SAAQC,UACjDA,EAGF,SAASnL,GAAIpM,EAAe2C,EAAW6U,GAC5C,GAAmBA,EAAnB,CAGA,IAAM5I,EAAOpI,KAAKC,UAAU9D,EAAG,KAAM,GACrCP,QAAQgK,IAAR,UAAepM,EAAf,eAA2B4O,KAG7B,SAASyF,GAAiBrU,EAAe6T,GACvCzH,GAAIpM,EAAO6T,GAIb,SAASb,GACPD,EACAnB,GAIA,IAFA,IAAIqB,EAAqB,EACrBwE,EAAU,EACL7T,EAAI,EAAGA,EAAImP,EAASzP,SAAUM,EACZ,UAArBmP,EAASnP,GAAGQ,SACZqT,EACFxE,EAAarP,GAIjB,OADAgO,EAAmB,IAAZ6F,EAAe,sCACf,CACLxE,aACAC,QAAwB,IAAfD,EACTE,OAAQF,IAAeF,EAASzP,OAAS,GAiB7C,SAASgQ,GAAa3P,EAA8B0P,EAAezB,GAEjE,IADA,IAAIkD,EAAY,EACPlR,EAAI,EAAGA,EAAIyP,IAASzP,EAAG,CAC9B,IAAMC,EAAOF,EAAMC,GAEnBkR,GAAajR,EAAKP,OAAS,EAI3BsO,IAAS/N,EAAKP,OAAQ,4CAExB,OAAOwR,EAkBT,SAASU,GAAY7R,EAA8BqQ,EAAgBpC,GACjE,IADwF,IAAD,WAC9EhO,GACP,IAAMC,EAAOF,EAAMC,GACbkR,EAAYxB,GAAa3P,EAAOC,EAAGgO,GACnC8F,EAAW1D,EAAOlQ,UAAUgR,EAAWA,EAAYjR,EAAKP,QAC9DsO,EACE/N,IAAS6T,EACT,kBAEA,WACE,MAAO,CACL7T,OACA6T,WACA5C,YACAxR,OAAQO,EAAKP,OACb0Q,SACArQ,aAfCC,EAAI,EAAGA,EAAID,EAAML,SAAUM,EAAI,EAA/BA,GAsBX,SAAS2O,GAAa8E,GAEpB,IAcMvD,EAda,WACjB,IAAMvB,GAAqBoF,OAAQ,CACjC,IAAMA,EAASC,SAASC,cAAc,UAChC/D,EAAU6D,EAAOG,WAAW,MAClC,IAAKhE,EACH,OAGFA,EAAQiE,KAAO,sDACdxF,GAAqBoF,OAASA,EAC9BpF,GAAqBuB,QAAUA,EAElC,OAAQvB,GAAqBuB,QAEfgE,GAChB,OAAKhE,EAGEA,EAAQkE,YAAYX,GAAM/E,MAFxB,GAWX,SAAS6B,GACPzB,EACAd,EACAwC,EACAzC,EACAuC,GAEA,IAAMnB,EAA8B,GAChCkF,OAA8BtX,EAC9BiV,EAAqB,GAEzB,SAASsC,EAASb,EAAcjN,EAAegI,EAAaT,GAC1DvF,GAAI,WAAY,CAAEiL,OAAMjN,QAAOgI,QAC/BT,EAAawG,WAAWd,EAAMjN,EAAOgI,GACrCwD,EAAayB,EACbzF,EAAOxH,GAAS,GAAKgI,GAAOiF,EAAK/T,OAA3B,kCAA8D+T,EAA9D,YAAsEjN,EAAtE,YAA+EgI,IAGvF,SAASgG,EAAWhU,EAAuBP,GACzC,IAAM0Q,GAAoB1Q,EAAKP,QAAU8Q,EAAW9T,aAAgB4T,GAAiBA,EAAcmE,OAAOxU,GAC1GkP,EAASvQ,KAAK,CAAE4B,OAAMP,OAAM0Q,YAY9B,IARA,IAAM5Q,EAAkB+O,EAAMsB,OAAOhS,MAAM,KAAKqJ,QAAO,SAACxH,GAAD,OAAUA,EAAKP,UAChEyQ,EAAYrB,EAAMqB,UAGpBe,EAAY,EAEZwD,OAA8E3X,EAEzE4X,EAAY,EAAGA,EAAY5U,EAAML,SAAUiV,EAAW,CAC7D,IAAM1U,EAAOF,EAAM4U,GAEbC,EAAU1D,EAAYjR,EAAKP,OACjC,GAAIyQ,EAAU3J,MAAQoO,GAAWzE,EAAU3B,IAAM0C,EAI/CsD,EAAW,MAAOvU,OACb,CACL,IAAK8N,EAAc,CAMjBC,GAAO,EAAO,yBACd,SAKF,GAAImC,EAAU3J,OAAS0K,EAEjBf,EAAU3B,KAAOoG,GAEnBN,EAASrU,EAAMkQ,EAAU3J,MAAQ0K,EAAWf,EAAU3B,IAAM0C,EAAWnD,GACvEsG,EAAUlF,EAASzP,OACnB8U,EAAW,QAASvU,KAGpB+N,GAAQ0G,EAAa,4CACrBA,EAAc,CACZxD,YACA1K,MAAO2J,EAAU3J,MAAQ0K,EACzBuC,KAAMxT,QAGL,CAEL,IAAKyU,EAAa,CAChB1G,GAAO,EAAO,gDACd,SAGF0G,EAAYjB,MAAQ,IAAMxT,EACtBkQ,EAAU3B,KAAOoG,IAEnBN,EAASI,EAAYjB,KAAMiB,EAAYlO,MAAO2J,EAAU3B,IAAMkG,EAAYxD,UAAWnD,GACrFsG,EAAUlF,EAASzP,OACnB8U,EAAW,QAASE,EAAYjB,MAChCiB,OAAc3X,IAMpBmU,GAAajR,EAAKP,OAAS,EAGN,qBAAZ2U,IAETA,EAAUlF,EAASzP,OAGfqO,GAEFuG,EAAS,GAAI,EAAG,EAAGvG,GAErByG,EAAW,QAAS,KAvKxB,SAAwBrF,EAA0CiB,EAAgBpC,GAChF4D,GACEzC,EAAS1R,KAAI,SAACmG,GAAD,OAAOA,EAAE3D,QACtBmQ,EACApC,GAEFoB,GAAcD,EAAUnB,GACxBmB,EAASjR,SAAQ,SAACwS,EAASjB,GAAV,OACfzB,IACI0C,EAAQzQ,KAAKP,QAA4B,UAAjBgR,EAAQlQ,MAAoBiP,IAAUN,EAASzP,OAAS,EAClF,kCAgKJmV,CAAe1F,EAAUL,EAAMsB,OAAQpC,GAEvC,IAAM8G,EAAqBxE,EAAqBA,EAAcyE,SAAS/C,EAAY7C,GAAxC,GAE1C2F,EAAcE,OAAS,iBAAM,IAAMF,EAAMrX,KAAI,SAACoV,GAAD,OAAUA,EAAKjV,OAAKwC,KAAK,KAAO,KAkB9E,IAAMwQ,EAhBN,WACE,IAAMK,EAAiB9B,EAAS1H,QAAO,SAACiJ,GAAD,QAAeA,EAAQzQ,KAAKP,UAAQA,OACrEuV,EAAoB9F,EAAS1H,QAAO,SAACiJ,GAAD,OAAcA,EAAQC,WAASlT,KAAI,SAACiT,GAAD,OAAaA,EAAQzQ,QAClG,OAAIgR,EAAS,GAAKT,EAAWhU,QACpB,iCAELyU,EAAS,GAAKT,EAAW/T,QACpB,uCAEHwY,EAAQvV,OACc,IAAnBuV,EAAQvV,OAAR,eACKuV,EAAQ,GADb,sDAEKA,EAAQxX,KAAI,SAACwC,GAAD,MAAU,IAAMA,EAAO,OAAKG,KAAK,SAFlD,kCAIF,GAEe8U,GASxB,MAPqC,CACnCpG,QACAK,WACA6C,aACA8C,QACAlE,mBCx0BG,SAASuE,GACdC,EACA/N,EACAmJ,GAOA,MAEwC1E,KAAMY,cAA6B3P,GAF3E,mBAEOsY,EAFP,KAEqBC,EAFrB,KAIA,SAAStH,EAAOuH,EAAoBvR,EAAiBwR,GACnD,IAAKD,EAAW,CACd,GAAIC,EAAO,CACT,IAAMzW,EAAYyW,IACZxK,EAAOpI,KAAKC,UAAU9D,EAAG,KAAM,GACrCiF,EAAO,UAAMA,EAAN,eAAoBgH,GAG7ByK,YAAW,WAGTH,EAAgBtR,KACf,GACHxF,QAAQC,MAAMuF,IAjBlB,MAuB0B8H,KAAM4J,WAAWpD,GAAS8C,GAAW,SAACA,GAAD,OD6yB1D,SAAsBpH,EAAgBoH,EAAqB5E,GAChExC,GAAQoH,EAAU/C,MAAK,SAAC9P,GAAD,OAAWA,IAAUA,EAAMlB,UAAS,0BAA0B,WACnF,MAAO,CAAE+T,gBAEX,IAAMhF,EAASgF,EAAUhV,KAAK,KACxBoG,EAAQ4J,EAAO1Q,OAAS,EACxBoP,EAAe,CAAEsB,SAAQD,UAAW,CAAE3J,QAAOgI,IAAKhI,IAExDgC,GAAI,wBAAyB,CAAE4M,cAC/B,IAAMnF,EAA+BM,GAAYzB,EAAOd,EAAQwC,GAEhE,OADAC,GAAiB,yBAA0BR,GACpCA,ECvzBL0F,CAAa3H,EAAQoH,EAAW5E,MAxBlC,mBAuBO1B,EAvBP,KAuBc8G,EAvBd,OA4B0C9J,KAAMY,cAAoC3P,GA5BpF,mBA4BOuT,EA5BP,KA4BsBuF,EA5BtB,KAoDA,OAnBA/J,KAAM6B,WAAU,WAEdtG,IACGmG,MAAK,SAACxK,GAEL,IAAMsN,EAA+B,IAAIyB,GAAc/O,GAEvD6S,EAAiBvF,MAElB5C,OAAM,SAACE,GAEN0H,EAAgB,0BAAD,OAA2B1H,SAE7C,CAACvG,IAMG,CAAEyH,QAAO8G,WAAUtF,gBAAetC,SAAQqH,gB,UChEtCS,GAA2D,SAACC,GACvE,IAAMC,GAAqBD,EAAMV,aAAe,QAAU,WAAaU,EAAME,KAAO,QAAU,IAC9F,OAAO,wBAAGD,UAAWA,GAAYD,EAAMV,eCQlC,SAASa,GACdC,EACAR,EACAS,GAQA,MAG0BtK,KAAM4J,WAC9BpD,GAoCJ,SAA8C6D,EAA6BrH,GACzE,IAAMuH,EAAgB,IAAI3Y,IAa1B,OAXAyY,EAAOjY,SAAQ,SAACoY,EAAO1Y,GACrB,IAAME,EAAQgR,EAAMlR,GACpB,GAAqB,kBAAVE,EAMT,MAAM,IAAIyB,MAAM,2EALhB,IAAM8V,EAAekB,GAASzY,EAAOwY,EAAMtP,QAASsP,EAAME,OACtDnB,GACFgB,EAActY,IAAIH,EAAKyX,MAMtB,CACL5U,OAAQqO,EACR2H,cAAe3H,EACfuH,gBACAF,SACAO,eAAe,EACfC,mBAAe5Z,GAvDf6Z,CAAmBT,EAAQR,IAL7B,mBAGO7G,EAHP,KAGc8G,EAHd,OAmHF,SACE9G,EACA8G,EACAQ,GAMA,IAAMS,EAA8C,IAAInZ,IACxDoR,EAAMqH,OAAOjY,SAAQ,SAACoY,EAAO1Y,GAE3B,IAEM4Y,EC3JH,SAAqBA,EAAeM,GACzC,GAAIA,EACF,MAAO,CAAEpY,UAAM3B,EAAW2T,aAAS3T,GAErC,IAAM2B,EAAO8X,EACVO,QAAQ,gBAAiB,IACzBA,QAAQ,KAAM,KACdzV,oBAEH,MAAO,CAAE5C,OAAMgS,QADC,4BAAOsG,QAAStY,GAAO8X,IDmJvBS,CAAYX,EAAME,MAAOF,EAAMQ,WAEvCzB,EAAoCvG,EAAM4H,cAA4B5H,EAAMuH,cAAcxY,IAAID,QAApCb,EAI1Dma,EEpJH,SACLC,EACAC,EACAC,EACAb,EACAnB,GAEA,GAAoB,WAAhB8B,EAAO3W,KACT,OCRkB,SAACuV,GAAiC,IAC9CS,EAAoDT,EAApDS,MAAOa,EAA6CtB,EAA7CsB,aAAcD,EAA+BrB,EAA/BqB,aAAc/B,EAAiBU,EAAjBV,cCnBtC,WAA8B,IAAD,EACVvJ,KAAMY,UAAkB,GADd,mBAC3B4K,EAD2B,KACrBC,EADqB,KASlCzL,KAAM6B,WAAU,WAET2J,IACFE,OAAeC,oBAAoBC,MACpCH,GAAQ,MAET,CAACD,IDYJK,GAEA,IAAMT,EACJ,mBAAC,KAAMU,SAAP,KACE,mBAAC,GAAD,CAAWvC,aAAcA,GACvB,+BAEEwC,SAAU,SAACC,GAAD,OAAOT,EAAaS,EAAEC,OAAOja,QACvCT,GAAG,YACH2Y,UAAU,YACVtX,KAAM8X,EAAM9X,KACZsZ,YAAY,qBACZZ,aAAcA,MAOtB,OACE,mBAAC,KAAMQ,SAAP,KACGpB,EAAM9F,QACP,0BAAKsF,UAAU,aACb,0BAAKA,UAAU,aACb,8BACE,0BAAK3Y,GAAG,cAAc2Y,UAAU,iBAElC,8BACE,0BAAK3Y,GAAG,oBAET6Z,KD/BAe,CAAO,CACZzB,QACAa,eACAD,eACA/B,iBAmCJ,IAAM6C,EAhCN,WACE,OAAQf,EAAO3W,MACb,IAAK,QACH,IAAM2X,EAAahB,EAAOgB,WACpB3X,EAAO2X,EAAW3X,KAAO2X,EAAW3X,KAAO,OACjD,OACE,0CACEA,KAAMA,GACF2X,EAFN,CAGEzZ,KAAM8X,EAAM9X,KACZsZ,YAAab,EAAOa,YACpBZ,aAAcA,EACdS,SAAU,SAACC,GAAD,OAAOT,EAAaS,EAAEC,OAAOja,WAI7C,IAAK,WACH,IAAMqa,EAAahB,EAAOgB,WAC1B,OACE,+CACMA,EADN,CAEEzZ,KAAM8X,EAAM9X,KACZsZ,YAAab,EAAOa,YACpBZ,aAAcA,EACdS,SAAU,SAACC,GAAD,OAAOT,EAAaS,EAAEC,OAAOja,WAI7C,QACE,MAAM,IAAIyB,MAAM,oBAGR6Y,GACd,OACE,mBAAC,KAAMR,SAAP,KACGpB,EAAM9F,QACP,mBAAC,GAAD,CAAW2E,aAAcA,GAAe6C,IFiGxBG,CAHC/B,EAAXa,OACa,GAAKrI,EAAM2H,cAAc7Y,IANG,SAACkT,GAAD,OAAsB8E,EAAS,CAAEhY,MAAKkT,eAQrB0F,EAAOnB,GACzEwB,EAAU9Y,IAAIH,EAAKsZ,MAarB,IAAM7a,GKnLwBma,ELoL5BJ,EAAWI,MKpLgC8B,ELqL3C,kBAAM1C,EAAS,CAAEhY,IAAK,WAAYkT,SAAU,MKrLoBuE,ELyKlE,SAAwBvG,GACtB,IAAMyJ,EAAczJ,EAAMuH,cAAcmC,KAClC/Z,EAAwB,IAAhB8Z,EAAoB,QAAU,SAM5C,OAL+BzJ,EAAM6H,cACjC7H,EAAM6H,cACL7H,EAAM4H,eAAkB6B,EAAzB,eAEQnC,EAAW9Z,KAFnB,kDAEiEmC,EAFjE,gBACA1B,EAOJ0b,CAAe3J,GKjLf,8BACE,4BAAOtO,KAAK,SAAS1C,MAAO0Y,EAAO8B,QALvC,SAAqBR,GACnBQ,OAKE,mBAAC,GAAD,CAAcjD,aAAcA,EAAcY,MAAM,MAP/C,IAAyBO,EAAe8B,EAAqBjD,ELwLlE,MAAO,CAAEwB,YAAWxa,UAnJUqc,CAAmB5J,EAAO8G,EAAUQ,GAA1DS,EAPR,EAOQA,UAAWxa,EAPnB,EAOmBA,OAEnB,MAAO,CACLsc,aAAc7J,EAAMrO,OACpBmY,QAAsC,IAA7B9J,EAAMuH,cAAcmC,KAC7B9B,cAAe5H,EAAM4H,cACrBra,SACAwa,YACAF,cAPoB,SAAClY,GAAD,OAAkBmX,EAAS,CAAEhY,IAAK,gBAAiBkT,SAAUrS,EAAMuF,YAiE3F,SAASsO,GAA0BjI,EAAwBvJ,GAAuC,IACxFlD,EAAkBkD,EAAlBlD,IAAKkT,EAAahQ,EAAbgQ,SACPrQ,EAAiF4J,EAAjF5J,OAAQ4V,EAAyEhM,EAAzEgM,cAA8BwC,EAA2CxO,EAA1DqM,cAAyBC,EAAiCtM,EAAjCsM,cAAeF,EAAkBpM,EAAlBoM,cACrE,GAAY,aAAR7Y,EACFib,GAAW,OACN,GAAY,kBAARjb,EACT+Y,EAAgB7F,MACX,CACL6F,OAAgB5Z,GAEhB0D,EAAM,eAAQA,IAGE7C,GAAOkT,EAEvB,IAAMwF,EAAQjM,EAAI8L,OAAOtY,IAAID,GAEvByX,EAAekB,GAASzF,EAAUwF,EAAMtP,QAASsP,EAAME,OAE7DH,EAAgB,IAAI3Y,IAAqB2Y,GAEpChB,EAGHgB,EAActY,IAAIH,EAAKyX,GAFvBgB,EAAcyC,OAAOlb,GAMzB,MAAO,CACL6C,SACA4V,gBACAF,OAAQ9L,EAAI8L,OACZO,cAAemC,EACflC,gBACAF,iBAsDJ,SAASF,GAASzY,EAAekJ,EAA4BwP,GAE3D,MADqBxP,EAAQ5E,YACRtE,GAAmB,KAAVA,GAC5B,MAAM,GAAN,OAAU0Y,EAAV,gBAEF,IAAM9W,EAAU5B,EAAYA,EAAM4B,OAAV,EACxB,OAAIsH,EAAQ+R,WAAarZ,EAASsH,EAAQ+R,UACjC/R,EAAQ+R,WAAa,GAArB,UACAvC,EADA,6BAC0BxP,EAAQ+R,UADlC,0BAEAvC,EAFA,6BAE0BxP,EAAQ+R,UAFlC,oCAEuErZ,EAFvE,UADT,EMxMF,SAASsZ,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAASM,GAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM+B,CAA8BV,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAImC,GAAqB,KAAMjG,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGDC,GAAqB,KAAMpG,cAAc,OAAQ,CACnDmG,EAAG,wHAGD,GAAsB,SAA6BE,GACrD,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ0D,GAAyBa,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO+E,GAAS,CACtDtK,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM8d,GAAOG,KAGvFM,GAA0B,KAAMC,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAAqB+E,GAAS,CACpEuB,OAAQG,GACP3E,OAEU,ICnCf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGD,GAAqB,KAAMnG,cAAc,OAAQ,CACnDmG,EAAG,iJAGD,GAAqB,SAA4BE,GACnD,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,GAAO,KAGvF,GAA0B,KAAMwe,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAAoB,GAAS,CACnEsG,OAAQG,GACP3E,OAEU,ICnCf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGD,GAAqB,KAAMnG,cAAc,OAAQ,CACnDmG,EAAG,+OAGD,GAAuB,SAA8BE,GACvD,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,GAAO,KAGvF,GAA0B,KAAMwe,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAAsB,GAAS,CACrEsG,OAAQG,GACP3E,OAEU,ICnCf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGD,GAAqB,KAAMnG,cAAc,OAAQ,CACnDmG,EAAG,mUAGD,GAA2B,SAAkCE,GAC/D,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,GAAO,KAGvF,GAA0B,KAAMwe,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAA0B,GAAS,CACzEsG,OAAQG,GACP3E,OAEU,ICnCf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGD,GAAqB,KAAMnG,cAAc,OAAQ,CACnDmG,EAAG,6JAGDS,GAAqB,KAAM5G,cAAc,SAAU,CACrD6G,GAAI,GACJC,GAAI,EACJC,EAAG,MAGD,GAA2B,SAAkCV,GAC/D,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,GAAO,GAAOye,KAG9F,GAA0B,KAAMD,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAA0B,GAAS,CACzEsG,OAAQG,GACP3E,OAEU,ICzCf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGD,GAAqB,KAAMnG,cAAc,OAAQ,CACnDmG,EAAG,kHAGD,GAAsB,SAA6BE,GACrD,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,GAAO,KAGvF,GAA0B,KAAMwe,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAAqB,GAAS,CACpEsG,OAAQG,GACP3E,OAEU,ICnCf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGD,GAAqB,KAAMnG,cAAc,OAAQ,CACnDmG,EAAG,yJAGD,GAAqB,SAA4BE,GACnD,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,GAAO,KAGvF,GAA0B,KAAMwe,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAAoB,GAAS,CACnEsG,OAAQG,GACP3E,OAEU,ICnCf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDmG,EAAG,qGAGD,GAAsB,SAA6BE,GACrD,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,KAGhF,GAA0B,KAAMwe,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAAqB,GAAS,CACpEsG,OAAQG,GACP3E,OAEU,IC9Bf,SAAS,KAA2Q,OAA9P,GAAWkD,OAAOC,QAAU,SAAUnB,GAAU,IAAK,IAAI/X,EAAI,EAAGA,EAAImZ,UAAUzZ,OAAQM,IAAK,CAAE,IAAIoZ,EAASD,UAAUnZ,GAAI,IAAK,IAAIpC,KAAOwb,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQxb,KAAQma,EAAOna,GAAOwb,EAAOxb,IAAY,OAAOma,IAA2ByB,MAAM7b,KAAMwb,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkExb,EAAKoC,EAAnE+X,EAEzF,SAAuCqB,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2Dxb,EAAKoC,EAA5D+X,EAAS,GAAQ4B,EAAaV,OAAOW,KAAKR,GAAqB,IAAKpZ,EAAI,EAAGA,EAAI2Z,EAAWja,OAAQM,IAAOpC,EAAM+b,EAAW3Z,GAAQ0Z,EAASG,QAAQjc,IAAQ,IAAama,EAAOna,GAAOwb,EAAOxb,IAAQ,OAAOma,EAFxM,CAA8BqB,EAAQM,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpZ,EAAI,EAAGA,EAAIga,EAAiBta,OAAQM,IAAOpC,EAAMoc,EAAiBha,GAAQ0Z,EAASG,QAAQjc,IAAQ,GAAkBqb,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQxb,KAAgBma,EAAOna,GAAOwb,EAAOxb,IAAU,OAAOma,EAMne,IAAI,GAAqB,KAAM9D,cAAc,OAAQ,CACnDkG,KAAM,OACNC,EAAG,oBAGD,GAAqB,KAAMnG,cAAc,OAAQ,CACnDmG,EAAG,kFAGD,GAAqB,SAA4BE,GACnD,IAAIC,EAASD,EAAKC,OACdne,EAAQke,EAAKle,MACb2Z,EAAQ,GAAyBuE,EAAM,CAAC,SAAU,UAEtD,OAAoB,KAAMrG,cAAc,MAAO,GAAS,CACtDvF,MAAO,GACP8L,OAAQ,GACRC,QAAS,YACTC,IAAKH,GACJxE,GAAQ3Z,EAAqB,KAAM6X,cAAc,QAAS,KAAM7X,GAAS,KAAM,GAAO,KAGvF,GAA0B,KAAMwe,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,KAAMzG,cAAc,GAAoB,GAAS,CACnEsG,OAAQG,GACP3E,OCtBQkF,IDwBE,ICxBU,SAAClF,GAA2B,IAC3CV,EAAiBU,EAAjBV,aAGFW,EAAaD,EAAMmF,SAASnF,MAAMC,UAAwB,WAAaD,EAAMmF,SAASnF,MAAMC,UAA9C,UAC9CkC,EAAS7C,EAAgCvJ,KAAMqP,aAAapF,EAAMmF,SAAU,CAAElF,cAAtDD,EAAMmF,SAC9BE,EAAQ/F,EAA2B,mBAAC,GAAD,CAAYW,UAAU,QAAQmE,KAAK,iBAA/Cpd,EAC7B,OACE,mBAAC,KAAM6a,SAAP,KACE,0BAAK5B,UAAU,aACZkC,EACAkD,GAEH,mBAAC,GAAD,CAAc/F,aAAcA,O,WCDrBgG,GAAuD,SAACtF,GAAW,IACtEX,EAAkCW,EAAlCX,UAAWvE,EAAuBkF,EAAvBlF,OAD0D,EAGZsE,GAAcC,EAFrCW,EAAf1O,WAE2E0O,GAA9FjH,EAHqE,EAGrEA,MAAO8G,EAH8D,EAG9DA,SAAUtF,EAHoD,EAGpDA,cAAetC,EAHqC,EAGrCA,OAAQqH,EAH6B,EAG7BA,aAH6B,EnBm1BxE,SACLrH,EACAwC,EACAK,EACA+E,EACA9G,EACAwB,GAEA,SAAS4D,EAAWnG,GAClB,MAAO,CACLA,aAAc,IAAID,GAAaC,EAAcC,GAC7CA,SACA6C,SACAP,gBACAE,cAsEJ,MAAO,CAAE8K,cAlET,SAAuBvN,GACrB6H,EAAS,CAAEpV,KAAM,cAAe0P,QAASgE,EAAWnG,MAiE9BwN,YA/DxB,SAAqB9L,EAAe1B,GAClC6H,EAAS,CAAEpV,KAAM,YAAa0P,QAASgE,EAAWnG,GAAe0B,WA8D9B+L,WA5DrC,SAAoB/L,EAAe1B,GACjC6H,EAAS,CAAEpV,KAAM,WAAY0P,QAASgE,EAAWnG,GAAe0B,WA2DjBoI,SAzDjD,SAAkB9J,GAChB6H,EAAS,CAAEpV,KAAM,SAAU0P,QAASgE,EAAWnG,MAwDU0N,UAtD3D,SAAmB1N,EAAgCnQ,EAAasV,GAC9D,GAAY,UAARtV,EAEF,OAAO,EAMT,SAAS8d,IACP,OAAO,IAAI7M,GAAWC,EAAO,IAAIhB,GAAaC,EAAcC,GAASA,GA2BvE,GAzBA,WACE,OAAQpQ,GACN,IAAK,OACL,IAAK,UAEH,OAAQwR,GAAcN,EAAMK,SAAUnB,GAAQsB,QAChD,IAAK,MACL,IAAK,YAEH,OAAQF,GAAcN,EAAMK,SAAUnB,GAAQuB,OAChD,IAAK,YACL,IAAK,YAEH,OAD+BmM,IACb3M,YAEpB,IAAK,aACL,IAAK,SAEH,OAD+B2M,IACb1M,aAKtB,OAAO,EAEL2M,GAAa,CACf,IAAMzL,EAAmBgE,EAAWnG,GAEpC,OADA6H,EAAS,CAAEpV,KAAM,UAAW0P,UAAStS,MAAKsV,cACnC,EAET,OAAO,GAY6D0I,aAVtE,SAAsB7N,EAAgC8N,GAAoB,IAChExM,EAAeD,GAAcN,EAAMK,SAAUnB,GAA7CqB,WACRuG,EAAS,CACPpV,KAAM,aACN0P,QAASgE,EAAWnG,GACpB8E,KAAMgJ,EACNxM,iBmB95BkFyM,CACpF9N,EACA+H,EACAlF,EACA+E,EACA9G,EACAwB,GANMgL,EALqE,EAKrEA,cAAeC,EALsD,EAKtDA,YAAaC,EALyC,EAKzCA,WAAY3D,EAL6B,EAK7BA,SAAU4D,EALmB,EAKnBA,UAAWG,EALQ,EAKRA,aAa/DG,EAAWjQ,KAAMkQ,YAyBvB,SAAS3E,EAAaS,GACpBD,EAASC,EAAEC,QAGb,SAASkE,EAAcnE,GACjB2D,EAAU3D,EAAEC,OAA4BD,EAAEla,IAAKka,EAAE5E,WACnD4E,EAAEoE,iBAiBN,IAAMC,EAAyC,SAACpG,GAAW,IACjDtC,EAAyBsC,EAAzBtC,KAAMhE,EAAmBsG,EAAnBtG,MAAOkB,EAAYoF,EAAZpF,QAGfyL,EACJ,wBAAG9D,QAAS,SAACR,GAAD,OAtChB,SAAyBrI,EAAeqI,GACtCyD,EAAY9L,EAAOsM,EAASM,SAC5BvE,EAAEoE,iBAoCmBI,CAAgB7M,EAAOqI,IAAI1b,MAAM,cAClD,mBAAC,GAAD,CAAYoe,OAAO,QAGjBxE,EAAYrF,EAAU,MAAQ,cACpC,OACE,2BAAMqF,UAAWA,EAAWsC,QAAS,SAACR,GAAD,OAvCzC,SAAwBrI,EAAeqI,GACrC0D,EAAW/L,EAAOsM,EAASM,SAC3BvE,EAAEoE,iBAqC4CK,CAAe9M,EAAOqI,KAC/DrE,EACA2I,IA/EsE,MAwF7E,WAEE,KADkBrG,EAAMyG,uBAAyB1N,EAAM8B,gBAAgBlR,QAErE,MAAO,CACLsW,UAAW,aACXoF,UAAMre,EACN6T,qBAAiB7T,GAGrB,IACMqe,EAAO,mBAAC,GAAD,CAAYpF,UAAU,UAC7ByG,EAAyB3N,EAAM8B,gBAE/B8L,EAC0D,MAA9DD,EAAuBA,EAAuB/c,OAAS,QAAa3C,EAClE,mBAAC,KAAM6a,SAAP,KACG,iBACD,wBAAG+E,KAAM5G,EAAM6G,YAAa7E,OAAO,SAAS8E,IAAI,uBAAhD,gBAGC,KAQP,MAAO,CAAEjM,gBAJP,wBAAGoF,UAAU,SACVyG,EADH,IAC4BC,GAGJtB,OAAMpF,UAnBd,gCAqByB8G,GAArClM,EAtHqE,EAsHrEA,gBAAiBwK,EAtHoD,EAsHpDA,KAAMpF,EAtH8C,EAsH9CA,UAqB/B,OACE,0BAAK3Y,GAAG,YACN,0BAAK2Y,UAAWA,EAAW+G,eArH/B,SAA2BjF,GAC2B,QAArCA,EAAEC,OAAuBiF,SAKxC1B,EAAcS,EAASM,WAgHlBvN,EAAMK,SAAS1R,KAtBtB,SAAoBiT,EAA0BjB,GAC5C,IAAMkB,GAAWoF,EAAMyG,qBAAuB9L,EAAQC,QACtD,MAAwB,QAAjBD,EAAQlQ,KACb,mBAAC2b,EAAD,CAAK1I,KAAM/C,EAAQzQ,KAAMwP,MAAOA,EAAO7R,IAAK6R,EAAOkB,QAASA,IAE5D,4BACEnQ,KAAK,OACL5C,IAAI,QACJ8c,IAAKqB,EACL/F,UAAWrF,OAAU5T,EAAY,UACjC2R,MAAO,GACP+M,UAAWQ,EACXpE,SAAUR,EACV4F,QAAS,SAACnF,GAAD,OAAOoF,GAAYpF,GAAG,IAC/BqF,OAAQ,SAACrF,GAAD,OAAOoF,GAAYpF,GAAG,SAS7BsD,GAEH,mBAAC,GAAD,CAAWtG,MAAOhG,EAAMgG,MAAO9C,WAAYlD,EAAMkD,WAAYnB,OA5FjE,SAA0BgL,GACxBD,EAAaG,EAASM,QAAUR,MA4F9B,mBAAC,GAAD,CAAcxG,aAAcA,IAC3BzE,IAmBDwM,GAAqD,SAACrH,GAAW,IAC7DjB,EAA8BiB,EAA9BjB,MAAO9C,EAAuB+D,EAAvB/D,WAAYnB,EAAWkF,EAAXlF,OAC3B,OAAKmB,EAAWtS,OAId,0BAAKsW,UAAU,aACXlB,EAAMpV,OAEJoV,EAAMrX,KAAI,SAACoV,GAAD,OAAU,mBAAC,GAAD,CAAUA,KAAMA,EAAMb,WAAYA,EAAYnB,OAAQA,EAAQjT,IAAKiV,EAAKjV,SAD5F,qBALC,0BAAKoY,UAAU,sBAmBpBqH,GAAmD,SAACtH,GAAW,IAC3DlD,EAA6BkD,EAA7BlD,KAAMb,EAAuB+D,EAAvB/D,WAAYnB,EAAWkF,EAAXlF,OAmB1B,IAAM/T,EAjBN,SAAgBc,GACd,IAAM6R,EAAQ7R,EAAIic,QAAQ7H,GAC1B,OACE,2BAAMgE,UAAU,QACF,IAAXvG,EACC7R,EAEA,mBAAC,KAAMga,SAAP,KACGha,EAAIsC,UAAU,EAAGuP,GAClB,2BAAMuG,UAAU,SAAShE,GACxBpU,EAAIsC,UAAUuP,EAAQuC,EAAWtS,UAOhC4d,CAAOzK,EAAKjV,KAElBkB,EAAQ+T,EAAK/T,MAAQ,2BAAMkX,UAAU,cAAhB,WAAqCnD,EAAK/T,YAAgB/B,EAE/E0C,EAAUoT,EAAKpT,QAAU,4BAAIoT,EAAKpT,cAAe1C,EAavD,IAAMwgB,EAXN,SAAiB3f,GACf,IAAMwd,EAAO,mBAAC,GAAD,CAAW1M,MAAM,KAAK8L,OAAO,OAGpCgD,EACJ,wBAAGb,KAAI,gBAAW/e,EAAX,SAAuBma,OAAO,SAAS8E,IAAI,uBAC/CzB,GAGL,OAAO,wBAAGpF,UAAU,aAAawH,GAEtBC,CAAQ5K,EAAKjV,KAC1B,OACE,0BACEoY,UAAU,OACV0H,SAAU,EACV9f,IAAKiV,EAAKjV,IACV0a,QAAS,SAACR,GAAD,OAAOjH,EAAOgC,EAAKjV,MAC5B6d,UAAW,SAAC3D,GACI,UAAVA,EAAEla,KAAiBiT,EAAOgC,EAAKjV,KACnCka,EAAEoE,kBAEJe,QAAS,SAACnF,GAAD,OAAOoF,GAAYpF,GAAG,IAC/BqF,OAAQ,SAACrF,GAAD,OAAOoF,GAAYpF,GAAG,KAE7Bhb,EACAgC,EACAW,EACA8d,IAMP,SAASL,GAAYpF,EAAkC6F,GAKrD,IAAM5F,EAASD,EAAEC,OACX6F,EAAgB9F,EAAE8F,cAElBC,EAAmCD,GAPzC,SAAmBC,GACjB,YAA4C9gB,IAApC8gB,EAAwBb,QAMwBc,CAAUF,GAAiBA,OAAgB7gB,EAE/FghB,EAAeH,EAA6BC,EAAuBA,EAAQb,QAArB,WAAvB,UAC/BgB,EAAgBH,EAAeA,EAAQ7H,UAAb,GAE1BiI,EAAgBjK,SAASiK,cAG/BzV,GAAI,cAAe,CACjBmV,WACAO,WAJiBnG,EAAOiF,QAKxBmB,kBAJwBF,EAAgBA,EAAcjB,QAAU,iBAKhEe,cACAC,iBAGFL,EAAWA,GAA6B,SAAjBK,EAEvB,IAAMI,EAAMpK,SAASqK,eAAe,YAElCD,EAAIpI,UADF2H,EACc,WAEA,GCzSb,SAASW,GACdliB,EACAmiB,EACAzhB,EACAuH,GAEA,IAAMma,EAAQ1hB,EAAkB,mBAAC,KAAD,CAAS2hB,GAAIxhB,MAAIyhB,cAAc5hB,IAA/B,aAAZC,EACd4hB,EACH7hB,GAAgB,SAATuH,EACN,0BAAK2R,UAAU,kBACb,6BACE,6BACE,mBAAC,KAAD,CAAMyI,GAAIxhB,MAAIyhB,cAAc5hB,IAA5B,qBAEF,6BACE,mBAAC,KAAD,CAAM2hB,GAAIxhB,MAAI2hB,cAAc9hB,IAA5B,4BAPkBC,EAa5B,OACE,mBAAC,KAAM6a,SAAP,KACE,0BAAK5B,UAAU,YACb,6BAAK5Z,GACL,0BAAK4Z,UAAU,QACb,mBAAC,KAAD,CAAMyI,GAAIxhB,MAAI4hB,MAAMC,cAAe9I,UAAU,cAC1Cra,SAAOQ,eAAeE,UAI5BsiB,EACD,0BAAK3I,UAAU,qBACb,0BAAKA,UAAU,SAASuI,GACxB,0BAAKvI,UAAU,QACZwI,EACD,mBAAC,KAAD,CACEC,GAAIxhB,MAAI8hB,yBAAyB,CAAE1a,KAAM,SAAUvH,QACnDkZ,UAAoB,WAAT3R,EAAoB,gBAAatH,GAF9C,UAMA,mBAAC,KAAD,CACE0hB,GAAIxhB,MAAI8hB,yBAAyB,CAAE1a,KAAM,SAAUvH,QACnDkZ,UAAoB,WAAT3R,EAAoB,gBAAatH,GAF9C,aC1CH,SAASiiB,GAAWliB,GACzB,IAAM6f,EAAO1f,MAAIgiB,UAAUniB,GAC3B,OACE,mBAAC,KAAD,CAAMkZ,UAAU,MAAMyI,GAAI9B,GACvB7f,EAAIc,KCHJ,SAAS2J,GAAQvE,GACtB,OACE,0BAAKgT,UAAU,SACZhT,EAAKvF,KAAI,SAACX,GACT,IAAMoiB,EAAOF,GAAWliB,GAExB,OAAO,mBAAC,KAAM8a,SAAP,CAAgBha,IAAKd,EAAIc,KAAMshB,EAA/B,SCLR,SAAS7Z,GACd5F,EACA0f,GAEA,IAAMxC,EAAO1f,MAAImiB,WAAW3f,GACtB4f,EAAW,mBAAC,KAAD,CAASZ,GAAI9B,GAAOld,EAAQf,MACvC8Z,EAAuB,UAAhB2G,EAAO3G,KAAmB,GAAqB,QAAhB2G,EAAO3G,KAAiB,GAAK,IAEnE8G,EAAG,0CAAsC7f,EAAQuB,aAA9C,cAAuE,EAAPwX,EAAhE,qBACH+G,EAAM,0BAAKD,IAAKA,EAAKE,IAAK/f,EAAQf,KAAMgQ,MAAO8J,EAAMgC,OAAQhC,IAC7Dpc,EAAQ+iB,EAAO/iB,MAAQqD,EAAQf,UAAO3B,EAM5C,MAAO,CAAEsiB,WAAUI,SAJjB,mBAAC,KAAD,CAAShB,GAAI9B,EAAMvgB,MAAOA,EAAO4Z,UAAU,YACxCuJ,GAGwB3hB,IAAK+e,GCpB7B,SAAS+C,GAAQC,GACtB,OAAO,0BAAK3J,UAAU,QAAQ2J,GCEzB,SAASC,GAAYngB,EAA2B+Y,EAAoBmH,GAA8B,IAAD,EAClEta,GAAe5F,EAAS,CAC1DrD,OAAO,EACPoc,SAFM6G,EAD8F,EAC9FA,SAAUI,EADoF,EACpFA,SAAU7hB,EAD0E,EAC1EA,IAItBiiB,EAAYF,EAAmBD,GAAQC,QAApB5iB,EACzB,OACE,0BAAKiZ,UAAU,YAAYpY,IAAKA,GAC7BiiB,EACAJ,EACD,0BAAKzJ,UAAU,WACZqJ,EACA5f,EAAQ0D,SAAW,2BAAM6S,UAAU,iBAAiBvW,EAAQ0D,eAAmBpG,ICjBjF,SAAS+iB,GAAeC,GAC7B,IAAMC,EAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOD,EAAKE,YAClGC,GAAO,IAAI/b,MAAOgc,gBAAkBJ,EAAKI,cAAgB,GAAlD,aAA6D,GAAKJ,EAAKI,eAAejgB,UAAU,IACvGkgB,GAAW,GAAKL,EAAKM,cAAcC,SAAS,EAAG,KACrD,MAAM,GAAN,OAAUN,EAAV,YAAmBD,EAAKQ,WAAxB,OAAoCL,EAApC,eAA+CH,EAAKS,WAApD,YAAkEJ,GCK7D,SAASK,GAAqBhhB,GAAqE,IAApCihB,EAAmC,wDACjG/D,EAAO1f,MAAI0jB,iBAAiBlhB,GAC5BkgB,EAAOG,GAAe,IAAI3b,KAAK1E,EAAQmhB,eAAelgB,WACtDmgB,EAAQH,OAAQ3jB,EACpB,0BAAKiZ,UAAU,SACb,0BAAKA,UAAU,WACb,iCAASvW,EAAQyG,UADnB,IAC4D,IAArBzG,EAAQyG,SAAiB,SAAW,YAIzE4a,EAAYJ,EAChB,0BAAK1K,UAAU,aAAa0J,GAAQC,IAEpCC,GAAYngB,EAAQmhB,eAAelY,YAAa,QAASiX,GAErDjP,EACJ,0BAAKsF,UAAU,sBACZ6K,EACD,0BAAK7K,UAAU,WACb,6BACE,mBAAC,KAAD,CAASyI,GAAI9B,GAAOld,EAAQf,OAE9B,0BAAKsX,UAAU,WAAWvW,EAAQmhB,eAAe3a,eAChDsB,GAAQ9H,EAAQuD,MAChB8d,IAIP,MAAO,CAAEpQ,UAAS9S,IAAK+e,GC9BzB,SAASlX,GAAWzB,EAAuByL,EAAezM,GACxD,IAAM+d,EAAQ/d,EAAOuE,GAAQvE,QAAQjG,EAC/B4iB,EAAOG,GAAe,IAAI3b,KAAKH,EAAQtD,WAU7C,MAAO,CAAE9C,IAAK,GAAK6R,EAAOiB,QARxB,mBAAC,KAAMkH,SAAP,KACE,0BAAK5B,UAAU,WACb,0BAAKgL,wBAAyBtV,GAAO1H,EAAQzD,YAC5CwgB,EACAnB,GAAY5b,EAAQ0E,YAAa,QAASiX,MCZ5C,SAASsB,GACd9e,EACAwa,EACAvgB,EACAigB,EACA6E,GAEA,OAAO/e,EAAO1E,KAAI,SAACmG,EAAG6L,GACpB,IAAK7L,EAAG,CACN,IAAMud,EAAkBhf,EAAOsN,EAAQ,GAAmC2R,EAC1E,OACE,2BAAMxjB,IAAK,QAAUujB,EAAQnL,UAAU,QAAvC,UAJ0B,IAStBvC,EAAY7P,EAAZ6P,KAAM2N,EAAMxd,EAANwd,EACd,GAAIF,GAAmB7E,IAAY+E,EACjC,OACE,2BAAMpL,UAAU,WAAWpY,IAAK6V,GAC7BA,GAIP,IAAMuC,EAAYqG,IAAY+E,EAAI,gBAAarkB,EAC/C,OACE,mBAAC,KAAD,CAAS0hB,GAAI9B,EAAKyE,GAAIxjB,IAAK6V,EAAMrX,MAAOA,EAAMglB,GAAIpL,UAAWA,GAC1DvC,MCGF,SAAS4N,GACdhF,EACAjW,EACAC,EACAsW,GAIA,OAAOsE,GAtCT,SAAwB5E,EAAiBlK,GACvC,SAASmP,EAAQ5d,EAAe6d,GAI9B,IADA,IAAMtjB,EAAe,GACZ+B,EAAI0D,EAAO1D,GAAKuhB,IAAQvhB,EAC/B/B,EAAGW,KAAKoB,GAEV,OAAO/B,EAET,IAQMA,GAPJkU,GAAO,EACHmP,EAAQ,EAAGnP,GACXkK,EAAU,GAAK,EACfiF,EAAQ,EAAG,GAAG3hB,OAAO,MAAC5C,EAAWoV,IACjCA,EAAMkK,GAAW,EACjB,CAAC,OAAGtf,GAAW4C,OAAO2hB,EAAQnP,EAAM,EAAGA,IACvC,CAAC,OAAGpV,GAAW4C,OAAO2hB,EAAQjF,EAAU,EAAGA,EAAU,IAAI1c,YAAO5C,EAAWoV,IACf1U,KAAI,SAACmG,GAAD,OACpEA,EAAI,CAAE6P,KAAM,GAAK7P,EAAGwd,EAAGxd,QAAM7G,KAQ/B,OANIsf,EAAU,GACZpe,EAAGoK,QAAQ,CAAEoL,KAAM,OAAQ2N,EAAG/E,EAAU,IAEtCA,EAAUlK,GACZlU,EAAGW,KAAK,CAAE6U,KAAM,OAAQ2N,EAAG/E,EAAU,IAEhCpe,EAUQujB,CAAenF,EADlBoF,KAAKC,MAAMtb,EAASC,IAAaD,EAASC,EAAW,EAAI,IAE1CsW,GAAM,SAACyE,GAAD,MAAO,cAAgBA,IAAG/E,GAAS,GCrC/D,SAASsF,GAAYja,GAA0B,IAC5C9J,EAAe8J,EAAf9J,IAAKkB,EAAU4I,EAAV5I,MACP4d,EAAS5d,GAAmB,IAAVA,EAAT,aAA6BA,QAAU/B,EACtD,OACE,0BAAKiZ,UAAU,QAAQpY,IAAKA,GAC1B,2BAAMoY,UAAU,OAAOpY,GACtB8e,GCAA,IAAMkF,GAA+D,SAAC7L,GAAgC,IACnG7J,EAAqB6J,EAArB7J,IAAK8L,EAAgBjC,EAAhBiC,YAD6F,ECUrG,SAA2B9L,GAA6C,IAAD,EAClDJ,KAAMY,SAAS,IADmC,mBACrE5O,EADqE,KAC9D+jB,EAD8D,OAE9C/V,KAAMY,SAAS,IAF+B,mBAErEoV,EAFqE,KAE5DC,EAF4D,OAGpCjW,KAAMY,cAA6B3P,GAHC,mBAGrEsY,EAHqE,KAGvDC,EAHuD,KAKtE0M,EAAYlW,KAAMmW,QAAgB,GAIxC,SAASC,EAASC,GAChBH,EAAU3F,SAAU,EACpB0F,EAAWI,GA8Bb,OA3BArW,KAAM6B,WAAU,WACd,IAAIqU,EAAU3F,QAAd,CAKA,IAAM8F,EAAWrkB,EACbqkB,IAAaL,IAKjBE,EAAU3F,SAAU,EAEpBnQ,EAAI,CAAE1E,YAAa2a,IAChB3U,MAAK,eAGLE,OAAM,SAACE,GACN0H,EAAgB1H,EAAO5J,YAExBoe,SAAQ,WAEP3M,WAAWyM,EAvCG,IAuCsBC,UAEvC,CAACrkB,EAAOgkB,EAAS5V,IAEb,CAAEpO,QAAO+jB,WAAUxM,gBDjDgBgN,CAAkBnW,GAApDpO,EAFkG,EAElGA,MAAO+jB,EAF2F,EAE3FA,SAAUxM,EAFiF,EAEjFA,aAGzB,OACE,mBAAC,KAAMuC,SAAP,KACE,4BAAOpX,KAAK,OAAOqX,SAJF,SAACyK,GAAD,OAAgDT,EAASS,EAAMvK,OAAOja,QAI5CA,MAAOA,EAAOka,YAAaA,IACtE,mBAAC,GAAD,CAAc3C,aAAcA,MEVrBkN,I,OAAkC,WAC7C,IAAMvW,EAAKG,KAKX,OACE,0BAAK6J,UAAU,UACb,0BAAKA,UAAU,aACb,yBAAIA,UAAU,SACZ,yBAAIA,UAAU,QACZ,mBAAC,KAAD,CAASyI,GAAG,QAAQriB,MAAM,SACxB,mBAAC,GAAD,CAAWsS,MAAM,KAAK8L,OAAO,SAGjC,yBAAIxE,UAAU,QACZ,mBAAC,KAAD,CAASyI,GAAI+D,QAAMxf,KAAM5G,MAAOT,SAAOO,SACrC,mBAAC,GAAD,CAAawS,MAAM,KAAK8L,OAAO,SAGlCxO,EACC,mBAAC,KAAM4L,SAAP,KACE,yBAAI5B,UAAU,QACZ,mBAAC,KAAD,CAASyI,GAAI+D,QAAM3c,YAAazJ,MAAOT,SAAOM,cAC5C,mBAAC,GAAD,CAAcyS,MAAM,KAAK8L,OAAO,SAGpC,yBAAIxE,UAAU,QACZ,mBAAC,KAAD,CAASyI,GAAI+D,QAAM5c,MAAOxJ,MAAM,SAC9B,mBAAC,GAAD,CAAkBsS,MAAM,KAAK8L,OAAO,SAGxC,yBAAIxE,UAAU,QACZ,mBAAC,KAAD,CAASyI,GAAG,SAASriB,MAAM,gBAAgBkc,QA/BzD,SAA2BR,GACzB2K,MAAM,yEACN3K,EAAEoE,mBA8BY,mBAAC,GAAD,CAAWxN,MAAM,KAAK8L,OAAO,SAGjC,yBAAIxE,UAAU,QAAQ3Q,GAAe2G,EAAI,CAAE5P,OAAO,EAAMoc,KAAM,UAAWiH,WAG3E,yBAAIzJ,UAAU,QACZ,mBAAC,KAAD,CAASyI,GAAI+D,QAAME,MAAO1M,UAAU,SAApC,6B,qBCrCd,SAAS2M,GAASvmB,GAChB4X,SAAS5X,MAAT,UAAoBA,EAApB,cAA+BT,SAAOG,SAoBxC,SAAS8mB,GAAcC,EAAsBC,EAAmBC,GAC9D,GAAItgB,MAAMC,QAAQmgB,GAAU,CAC1B,IAAM1T,EAAW0T,EAAQplB,KAAI,SAACmG,EAAG6L,GAC/B,IAAMuT,EAAoB,IAAVvT,GAAeqT,EApBrC,SAAuBA,GACrB,OACE,0BAAK9M,UAAU,mBAAmBpY,IAAI,WACpC,0BAAKoY,UAAU,QACb,6BAAK8M,EAAQrP,MACb,8BACGqP,EAAQG,KAAKxlB,KAAI,SAACylB,EAAKzT,GAAN,OAChB,mBAAC,KAAD,CAASgP,GAAIyE,EAAIvG,KAAM/e,IAAK,GAAK6R,EAAOuG,UAAWvG,IAAUqT,EAAQpc,SAAW,gBAAa3J,GAC1FmmB,EAAIzP,YAY4B0P,CAAcL,QAAW/lB,EAC5DiZ,EAAsB,IAAVvG,GAAeqT,EAAU,gBAAkB,UAC7D,OACE,mBAAC,KAAMlL,SAAP,CAAgBha,IAAK,GAAK6R,GACvBuT,EACD,0BAAKhN,UAAWA,EAAWpY,IAAKgG,EAAEhG,KAC/BgG,EAAE8M,aAKX,OAAQqS,EAGN,mBAAC,KAAMnL,SAAP,KACGzI,EACD,0BAAK6G,UAAU,UAAUpY,IAAI,UAC1BmlB,IALL5T,EAUJ,OACE,mBAAC,KAAMyI,SAAP,KACGiL,EACAE,GAwGP,SAASK,GAAaC,GAAiB,IAAD,EAlEtC,SAA2BC,GACzB,IAAKA,EACH,MAAO,CAAEC,YAAa,KAAMC,YAAa,MAG3C,IAAMC,EAAS3X,KAAMkQ,YACf0H,EAAY5X,KAAMkQ,YAExB,SAAS2H,EAAWC,GAClB,IAAMC,EAAWJ,EAAOpH,QAClByH,EAAcJ,EAAUrH,QACzBwH,GAAaC,IAGdF,GACFC,EAASE,UAAUhU,OAAO,UAC1B+T,EAAYC,UAAU/d,IAAI,YAE1B6d,EAASE,UAAU/d,IAAI,UACvB8d,EAAYC,UAAUhU,OAAO,YAYjC,SAASiG,EAAUtX,EAAcslB,GAC/B,OAAOA,EAAUtlB,EAAOA,EAAO,UAGjC,IAAM8kB,EACJ,6BACExN,UAAWA,EAAU,uBAAwBsN,EAAMU,SACnDxjB,KAAK,SACL8X,QAjBJ,SAAuBgK,GACrBqB,GAAW,GACXrB,EAAMpG,kBAgBJxB,IAAKgJ,GAEJJ,EAAMW,iBAILC,EACJ,6BAAQlO,UAAU,sBAAsBxV,KAAK,SAAS8X,QArBxD,SAAuBgK,GACrBqB,GAAW,GACXrB,EAAMpG,kBAmBwE9f,MAAM,SAClF,mBAAC,GAAD,CAAYsS,MAAM,KAAK8L,OAAO,QAWlC,MAAO,CAAE+I,YANP,0BAAKvN,UAAWA,EAAU,eAAgBsN,EAAMU,SAAUpV,MAAO,CAAEF,MAAO4U,EAAM5U,OAASgM,IAAK+I,GAC3FS,EACAZ,EAAM5S,SAIW8S,eAQeW,CAAkBd,EAAOC,OAAtDC,EAD4B,EAC5BA,YAAaC,EADe,EACfA,YAkBrB,IAAMxN,EAhBN,SAAsBtH,GACpB,OAAQA,GACN,IAAK,OACH,MAAO,cACT,IAAK,OACH,MAAO,mBACT,IAAK,SACH,MAAO,qBACT,IAAK,OACH,MAAO,mBACT,IAAK,OACH,MAAO,mBACT,QACE,MAAM,IAAInP,MAAM,oBAGJ6kB,CAAaf,EAAO3U,OAEtC,QAxBiC3R,IAwBtBsmB,EAAOgB,KAxBIC,OA2BpB,OADA3B,GAASU,EAAOgB,KAAKjoB,OACd,0BAAK4Z,UAAWA,GA3H3B,SAAoBqO,EAAYE,GAC9B,IAAMvO,EAAauO,EAAqB,mBAAb,WACrBC,EAAOH,EAAKC,OAAOD,EAAK3d,UAAU8d,KAClCC,EAAWD,EAAmB,0BAAKxO,UAAU,QAAQwO,QAAnCznB,EACxB,OACE,mBAAC,KAAM6a,SAAP,KACE,0BAAK5B,UAAWA,GACd,0BAAKA,UAAU,QACZqO,EAAKC,OAAO7mB,KAAI,SAACylB,EAAKzT,GAAN,OACf,mBAAC,KAAD,CACEgP,GAAIyE,EAAIwB,QAAQ/H,KAChB/e,IAAK,GAAK6R,EACVuG,UAAWvG,IAAU4U,EAAK3d,SAAW,gBAAa3J,GAEjDmmB,EAAIwB,QAAQjR,SAGhBgR,IAGL,0BAAKzO,UAAU,UACZqO,EAAKC,OAAO7mB,KAAI,SAACylB,EAAKzT,GACrB,OACE,0BAAKuG,UAAWvG,IAAU4U,EAAK3d,SAAW,cAAW3J,EAAWa,IAAK,GAAK6R,GACvEmT,GAAcM,EAAIL,QAASK,EAAIJ,eAmGP6B,CAAWtB,EAAOgB,MAAM,IAG7D,IAAMO,EAAahC,GAAcS,EAAOgB,KAAKxB,QAASQ,EAAOgB,KAAKvB,QAASO,EAAOgB,KAAKtB,QACvFJ,GAASU,EAAOgB,KAAKjoB,OAErB,IAAMA,EAAQinB,EAAOgB,KAAKQ,SAAWxB,EAAOgB,KAAKQ,SAAW,6BAAKxB,EAAOgB,KAAKjoB,OAE7E,MAAqB,SAAjBinB,EAAO3U,MAEP,mBAAC,KAAMkJ,SAAP,KACE,0BAAK5B,UAAWA,GACbwN,EACD,0BAAKxN,UAAU,UAAU5Z,GACzB,0BAAK4Z,UAAU,WAAW4O,IAE3BrB,GAKH,mBAAC,KAAM3L,SAAP,KACE,0BAAK5B,UAAWA,GACbwN,EACAoB,GAEFrB,GAMF,SAASuB,GAAazB,GAC3B,IAAM0B,EAAW3B,GAAaC,GAC9B,OAAO,0BAAKrN,UAAU,eAAe+O,GC/MhC,SAASC,GACdvX,EACAwX,GACqB,IACb7f,EAAiCqI,EAAjCrI,KAAM3G,EAA2BgP,EAA3BhP,MAAOoP,EAAoBJ,EAApBI,OAAQZ,EAAYQ,EAAZR,QAQ7B,OAAO6X,GANgB1f,EACnB6f,EAAS,CAAE7f,OAAMyI,SAAQZ,YACzBxO,EAYN,SAAsBA,GACpB,IAAM6K,EAAO7K,EAAc6K,IACrBR,EAAOQ,EAAM,qCAAUA,EAAV,KAAsB,CAAEvM,kBAO3C,MAAO,CAAEsnB,KAAM,CAAEjoB,MAAO,QAASymB,QAL/B,mBAAC,KAAMjL,SAAP,KACG9O,EACD,sCAAWrK,EAAMuF,WAGuB0K,MAAO,QApB/CwW,CAAazmB,GACb0mB,IAKN,IAAMA,GAA0B,CAC9Bd,KAAM,CAAEjoB,MAAO,aAAcymB,QAAS,OACtCnU,MAAO,UCxBF,IAAM0W,GAAgC,WAM3C,OAAOJ,GAFmCxY,GAD9BH,KAC+CgZ,UAFnB,YAGE,SAAC5X,GAAD,OAI5C,SAAkBA,EAAiC+H,GAAqC,IAC9EpQ,EAASqI,EAATrI,KACAkgB,EAAW9P,EAAX8P,OAF6E,MAGrF,WACE,IAAMC,EAAQngB,EAAKhH,MAAM,SACnBmE,EAAQgjB,EAAMjnB,MAAK,SAACknB,GAAD,OAAOA,EAAEpT,WAAWkT,EAAS,OAAS,SAC/D,OAAI/iB,EAIK,CAAEnG,MAHKkpB,EAAS/iB,EAAMrC,UAAU,EAAGqC,EAAM7C,OAAS,GAAG2B,OAASkB,EAAMrC,UAAU,GAAGmB,OAGxEokB,OAFDF,EAAM5e,MAAM,GAAGvG,KAAK,SAI5B,CAAEhE,MAAO,YAAaqpB,OAAQrgB,GAGfsgB,GAAlBtpB,EAf6E,EAe7EA,MAAOqpB,EAfsE,EAetEA,OAGT5C,ECLD,SAAqB8C,GAC1BA,EAzBF,SAAkBA,GAqBhB,OADAA,GADAA,GADAA,GAFAA,GADAA,GADAA,GADAA,GADAA,GADAA,GAFAA,GAFAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAK5O,QAAQ,qBAAsB,mBAC9BA,QAAQ,qBAAsB,mBAC9BA,QAAQ,kBAAmB,gBAC3BA,QAAQ,kBAAmB,gBAC3BA,QAAQ,eAAgB,aACxBA,QAAQ,eAAgB,aAExBA,QAAQ,uBAAwB,oBAEhCA,QAAQ,yBAA0B,qBAClCA,QAAQ,yBAA0B,qBAClCA,QAAQ,sBAAuB,kBAC/BA,QAAQ,sBAAuB,kBAC/BA,QAAQ,mBAAoB,eAC5BA,QAAQ,mBAAoB,eAE5BA,QAAQ,iBAAkB,cAC1BA,QAAQ,iBAAkB,cAC1BA,QAAQ,iBAAkB,aAK/B6O,CAASD,GAD4C,MAInB1iB,EAAQ,KAA3C4iB,EAJsD,EAItDA,OAAQC,EAJ8C,EAI9CA,uBACVC,EAAS,IAAIF,EAQbG,EAAyB,CAC3B,CAEEC,kBAAmB,SAAUC,GAC3B,MAAqB,MAAdA,EAAKxnB,MAEdynB,YAAa,SAAUD,EAAWhL,GAChC,IAAIyB,EAAOuJ,EAAKE,QAAL,KACX,OAAOta,KAAMmI,cAAcoS,KAAM,CAAE5H,GAAI9B,GAAQzB,KAGnD,CAEE+K,kBAAmB,SAAUC,GAC3B,OAAO,GAETC,YAvByB,IAAIL,EAAuBha,MAuBhBwa,qBAIxC,OADmBP,EAAOQ,sBAAP,eAAqCZ,EAArC,WAzBD,WAChB,OAAO,IAwB0EK,GD3BnEQ,CAFHlB,EAASG,EAAS/Z,GAAO+Z,GAAQ9Z,QAG9C,MAAO,CAAE0Y,KAAM,CAAEjoB,QAAOymB,WAAWnU,MAAO,QAvBqC+X,CAAShZ,EAAS,CAAE6X,QAJpF,QEHV,IAAMoB,GAAiC,WAE5C,OAAO1B,GAAQ1Y,GADHD,KACmBsa,UAAWC,KAG5C,SAASA,GAAUnZ,GAAwD,IACjErI,EAASqI,EAATrI,KAQR,MAAO,CACLif,KAAM,CAAExB,QAPR,0BAAK7M,UAAU,aACZ5Q,EAAK3H,KAAI,SAAC8D,GACT,OAAOqe,GAAYre,EAAM,WAKLnF,MAAO,SAC/BsS,MAAO,QCdJ,IAAMmY,GAAmE,SAAC9Q,GAE/E,IAAM7J,EAAMG,KAF6E,EAkBrB6J,GAbhC,IAAIxY,IAAoB,CAC1D,CACE,WACA,CACE8Y,MAAO,OACPM,WAAW,EACX9P,QAAS,CAAE+R,UAAWpd,SAAOgB,WAAWC,MACxCua,OAAQ,CAAE3W,KAAM,cAIE,CAAED,SAAU,IACjB,CAAEiW,MAAO,mBAAoBla,KAAM,WAC9Cqc,EAlBiF,EAkBjFA,aAAcC,EAlBmE,EAkBnEA,QAASvc,EAlB0D,EAkB1DA,OAAQwa,EAlBkD,EAkBlDA,UAAWF,EAlBuC,EAkBvCA,cAM1CnX,EAAyBuW,EAAzBvW,aAAcqO,EAAWkI,EAAXlI,OA0BtB,OAPE,2BAAMmI,UAAU,SAAS6C,SAjB3B,SAAsByJ,GACpBA,EAAMpG,iBACFtD,GAIJ1M,EACG4a,WAAWtnB,EAAcmZ,GACzBnL,MAAK,SAACuZ,GAGLlZ,OAEDH,MAAMiJ,KAKP,4CACCE,EAAUhZ,IAAI,YACf,0BAAKmY,UAAU,UAAU3Z,KCvClB2qB,GAAyD,SAACjR,GAErE,IAAM7J,EAAMG,KAFqF,EAItD4a,OAAKC,iBAAnCnO,EAJoF,EAIzFoO,IAAqBC,EAJoE,EAIzEjV,IAElBgE,EAA8B,IAAIzY,IAAoB,CAC1D,CACE,UACA,CACE8Y,MAAO,UACPxP,QAAS,CAAE+R,aACX5B,OAAQ,CACN3W,KAAM,WACNwX,YAAa,GACbG,WAAY,CAAEkP,KAAM,EAAGD,gBAI7B,CACE,WACA,CACE5Q,MAAO,cACPxP,QAAS,CAAE5E,UAAU,GACrB+U,OAAQ,CAAE3W,KAAM,cAKdf,EAAsBsW,EAAtBtW,QAASc,EAAawV,EAAbxV,SA7BgF,EAoC7B2V,GAClEC,EAPsB,CACtB1W,QAASA,GAAoB,GAC7Bc,SAAUA,GAAsB,IAGf,CAAEiW,MAAO,aAAcla,KAAM,SACxCqc,EApCyF,EAoCzFA,aAAcC,EApC2E,EAoC3EA,QAASvc,EApCkE,EAoClEA,OAAQwa,EApC0D,EAoC1DA,UAAWF,EApC+C,EAoC/CA,cA+BlD,OACE,2BAAMX,UAAU,kBAAkB6C,SArBpC,SAAsByJ,GACpBA,EAAMpG,iBACFtD,GAKJ1M,EACGob,YAAYvR,EAAMjZ,IAAK6b,GACvBnL,MAAK,SAAC1Q,GAEL,IAAMwM,EAAMrM,MAAIyhB,cAAc5hB,GAI9BiZ,EAAMwR,QAAQ3oB,KAAK0K,MAEpBoE,MAAMiJ,KAKP,0BAAKX,UAAU,WACZa,EAAUhZ,IAAI,WACf,wBAAGmY,UAAU,QAAb,6CACA,wBAAGA,UAAU,aA9BnB,WACE,IAAMlX,EAAgBsoB,EAAYzO,EAAalZ,QAAQC,OACvD,MAAM,GAAN,OAAUZ,EAAV,oBA4B8B0oB,KAE5B,0BAAKxR,UAAU,WAAWa,EAAUhZ,IAAI,aACxC,0BAAKmY,UAAU,WAAW3Z,KC1EnBorB,GAAmE,SAAC1R,GAE/E,IAAM7J,EAAMG,KAEN8J,EAA8B,IAAIzY,IAAoB,CAC1D,CACE,OACA,CACE8Y,MAAO,eACPxP,QAAS,GACTmQ,OAAQ,CAAE3W,KAAM,QAASwX,YAAa,WAAYG,WAAY,MAGlE,CACE,WACA,CACE3B,MAAO,sBACPxP,QAAS,CAAE5E,UAAU,GACrB+U,OAAQ,CAAE3W,KAAM,QAASwX,YAAa,WAAYG,WAAY,MAGlE,CACE,QACA,CACE3B,MAAO,QACPxP,QAAS,GACTmQ,OAAQ,CAAE3W,KAAM,QAASwX,YAAa,WAAYG,WAAY,MAGlE,CACE,UACA,CACE3B,MAAO,WACPxP,QAAS,CAAE5E,UAAU,GACrB+U,OAAQ,CAAE3W,KAAM,cAKd9B,EAAmCqX,EAAnCrX,KAAMyE,EAA6B4S,EAA7B5S,SAAUpC,EAAmBgV,EAAnBhV,MAAOqC,EAAY2S,EAAZ3S,QAvCiF,EA+C5C8S,GAClEC,EARsB,CACtBzX,OACAyE,SAAUA,GAAsB,GAChCpC,QACAqC,QAASA,GAAoB,IAEZ,CAAEoT,MAAO,eAAgBla,KAAM,qBAC1Cqc,EA/CwG,EA+CxGA,aAAcC,EA/C0F,EA+C1FA,QAASvc,EA/CiF,EA+CjFA,OAAQwa,EA/CyE,EA+CzEA,UAAWF,EA/C8D,EA+C9DA,cA0BlD,OACE,2BAAMX,UAAU,kBAAkB6C,SArBpC,SAAsByJ,GACpBA,EAAMpG,iBACFtD,GAKJ1M,EACGwb,gBAAgB3R,EAAMpV,OAAQgY,GAC9BnL,MAAK,SAACjP,GAEL,IAAM+K,EAAMrM,MAAImiB,WAAW7gB,GAI3BwX,EAAMwR,QAAQ3oB,KAAK0K,MAEpBoE,MAAMiJ,KAKP,qCACA,mDACA,0BAAKX,UAAU,UACZD,EAAM0J,SACP,0BAAKzJ,UAAU,UACZa,EAAUhZ,IAAI,QACdgZ,EAAUhZ,IAAI,cAGlBgZ,EAAUhZ,IAAI,WACf,iDACCgZ,EAAUhZ,IAAI,SACf,0BAAKmY,UAAU,UAAU3Z,KCjGlBsrB,I,OAAiC,WAE5C,IAAMzb,EAAMG,KAFsC,EA2BkB6J,GAvBhC,IAAIxY,IAAoB,CAC1D,CACE,WACA,CACE8Y,MAAO,WACPM,WAAW,EACX9P,QAAS,GACTmQ,OAAQ,CAAE3W,KAAM,QAASwX,YAAa,WAAYG,WAAY,MAGlE,CACE,WACA,CACE3B,MAAO,WACPM,WAAW,EACX9P,QAAS,GACTmQ,OAAQ,CAAE3W,KAAM,QAASwX,YAAa,WAAYG,WAAY,QAK5C,CAAEkH,SAAU,GAAIuI,SAAU,IAC/B,CAAEpR,MAAO,SAAUla,KAAM,UACpCqc,EA3B0C,EA2B1CA,aAAcC,EA3B4B,EA2B5BA,QAASvc,EA3BmB,EA2BnBA,OAAQwa,EA3BW,EA2BXA,UAAWF,EA3BA,EA2BAA,cAM5C1K,E7CX8BH,KAAMM,WAAWP,IACnCI,M6C2ClB,OAlBE,mBAAC,KAAM2L,SAAP,KACE,uFACA,8FACA,2BAAM5B,UAAU,QAAQ6C,SAhB5B,SAAsByJ,GACpBA,EAAMpG,iBACFtD,GAIJ1M,EACGwW,MAAM/J,GACNnL,MAAK,SAAC9E,GAAD,OAAmCuD,EAAMvD,MAC9CgF,MAAMiJ,KAQL,0BAAKX,UAAU,KAAKa,EAAUhZ,IAAI,aAClC,0BAAKmY,UAAU,KAAKa,EAAUhZ,IAAI,aAClC,0BAAKmY,UAAU,KAAK3Z,IAEtB,uDACA,8FACA,+FACA,6BACE,mDACA,qEAEF,4IC9DOwrB,GAA6D,SAAC9R,GAEzE,IAAM7J,EAAMG,KAF2F,EA4BpB6J,GAxB/C,IAAIxY,IAAoB,CAC1D,CACE,QACA,CACE8Y,MAAO,QACPxP,QAAS,CAAE+R,UAAWpd,SAAOgB,WAAWP,OACxC+a,OAAQ,CAAE3W,KAAM,QAASwX,YAAa,GAAIG,WAAY,MAG1D,CACE,WACA,CACE3B,MAAO,OACPxP,QAAS,CAAE+R,UAAWpd,SAAOgB,WAAWC,MACxCua,OAAQ,CAAE3W,KAAM,cAKE,CAAEpE,MAAO,GAAImE,SAAU,GAAIyC,KAAM,IACtC,CACjBwT,MAAO7a,SAAOQ,eAAeE,OAC7BC,KAAMX,SAAOQ,eAAeG,OAEtBqc,EA5B+F,EA4B/FA,aAAcC,EA5BiF,EA4BjFA,QAASlC,EA5BwE,EA4BxEA,cAAera,EA5ByD,EA4BzDA,OAAQwa,EA5BiD,EA4BjDA,UAAWF,EA5BsC,EA4BtCA,cA5BsC,EAoCnE7K,KAAMY,SAAqB,CAC7D1J,KAAM,GACN2N,SAAS,IAtC4F,mBAoChGmX,EApCgG,KAoCpFC,EApCoF,KAyC/FR,EAAYxR,EAAZwR,QAkBR,IA3DuG,EA4D/D5rB,SAAOY,cAAvCC,EA5D+F,EA4D/FA,QAASC,EA5DsF,EA4DtFA,QAASC,EA5D6E,EA4D7EA,UAsB1B,OApBE,2BAAMsZ,UAAU,SAAS6C,SAnB3B,SAAsByJ,GACpBA,EAAMpG,kBACFtD,GAAYkP,EAAWnX,SAI3BzE,EACG4S,cADH,2BACsBnG,GADtB,IACoC3V,KAAM8kB,EAAW9kB,QAClDwK,MAAK,SAACjP,GAEL,IAAM+K,EAAMrM,MAAI0jB,iBAAiBpiB,GACjCgpB,EAAQ3oB,KAAK0K,MAEdoE,MAAMiJ,KAOP,0BAAKX,UAAU,WAAWa,EAAUhZ,IAAI,UACxC,0BAAKmY,UAAU,WAAWa,EAAUhZ,IAAI,aACxC,0BAAKmY,UAAU,WACb,4BAAOgB,QAAQ,QAAf,QACA,mBAAC,GAAD,CACE5B,UAToB,GAUpBvE,OAAQkX,EACR1gB,WAAY6E,EAAI7E,WAChB7K,QAASA,EACTC,QAASA,EACTC,UAAWA,EACX8f,oBAAqB9F,EACrBkG,YAAa3f,MAAI4hB,MAAM7b,QAG3B,0BAAKgT,UAAU,WAAW3Z,KClFnB2rB,GAAyD,SAACjS,GACrE,OAAOkS,GAASlS,IAGX,SAASkS,GAASlS,EAA4BtX,GACnD,IAAMypB,EAAWnS,EAAM5S,SAAS+kB,SAChC,OACE,8BACE,0CACA,iDACoB,+BAAOA,IAE3B,mBAAC,GAAD,CAAc7S,aAAc5W,KCJ3B,IAAM0pB,GAAqD,SAACpS,GACjE,IAAMqS,EAASnrB,MAAI8M,cAAcgM,EAAM5S,UACjC6I,EAAKG,KACX,GAAIlP,MAAIwM,cAAc2e,GACpB,OAAOH,GAASlS,EAAOqS,EAAO3pB,OAJgE,IAMxFuL,EAAsBoe,EAAtBpe,YAAazI,EAAS6mB,EAAT7mB,KACf8mB,IAAYrc,GAAMzK,EAAKlE,KAAO2O,EAAG3O,GACvC,OAAQ2M,GACN,IAAK,UACL,UAAKjN,EACH,OAAO,mBAAC,GAAD,iBAAiBgZ,EAAjB,CAAwB1Y,GAAIkE,EAAKlE,GAAIqB,KAAM6C,EAAK7C,KAAM2pB,QAASA,KACxE,IAAK,eACH,OAAKA,EAGE,mBAAC,GAAD,iBAAsBtS,EAAtB,CAA6B1Y,GAAIkE,EAAKlE,GAAIqB,KAAM6C,EAAK7C,KAAM2pB,QAASA,KAFlEJ,GAASlS,EAAO,0CAG3B,IAAK,WACH,IAAM/O,EAAU/J,MAAIiN,sBAAsB6L,EAAM5S,UAChD,OAAIlG,MAAIwM,cAAczC,GACbihB,GAASlS,EAAO/O,EAAQvI,OAE1B,mBAAC,GAAD,iBAAkBsX,EAAlB,CAAyB/O,QAASA,EAASqhB,QAASA,KAC7D,QACE,OAAOJ,GAASlS,EAAO,4BASvBuS,GAAkD,SAACvS,GAAsB,IACrE1Y,EAAsB0Y,EAAtB1Y,GAAIqB,EAAkBqX,EAAlBrX,KAAM2pB,EAAYtS,EAAZsS,QACZ9pB,EAASuN,KAAMoB,SAAqB,WACxC,MAAO,CAAE7P,KAAIqB,UACZ,CAACrB,EAAIqB,IAOR,OAAOsmB,GAJsCxY,GADjCH,KACkDzF,QAASrI,IAC1B,SAACkP,GAAD,OAwCxC,SAAyBA,EAAoC+H,GAAsC,IAC1FjU,EAASkM,EAAfrI,KACFqa,EAAWpa,GAAe9D,EAAM,CACpCnF,OAAO,EACPoc,KAAM,SACLiH,SACKrc,EAAsB7B,EAAtB6B,QAASD,EAAa5B,EAAb4B,SACXolB,EAAcnlB,EAAsB,0BAAK4d,wBAAyBtV,GAAOtI,UAAjDrG,EACxB8lB,EACJ,0BAAK7M,UAAU,wBACZyJ,EACD,0BAAKzJ,UAAU,UACb,6BAAKzU,EAAK7C,MACTyE,EACC,wBAAG6S,UAAU,YACX,mBAAC,GAAD,CAAetH,MAAM,KAAK8L,OAAO,OADnC,IAC4CrX,QAE1CpG,EACJ,0BAAKiZ,UAAU,SACb,yCACCuS,KAKT,OAAOC,GAAqBjnB,EAAM,UAAWshB,EAASrN,EAAM6S,SAhE1DI,CAAgBhb,EAAS,CAAE4a,gBAKzBK,GAAuD,SAAC3S,GAAsB,IAC1E1Y,EAA+B0Y,EAA/B1Y,GAAIqB,EAA2BqX,EAA3BrX,KAAM2pB,EAAqBtS,EAArBsS,QAASd,EAAYxR,EAAZwR,QACrBhpB,EAASuN,KAAMoB,SAAqB,WACxC,MAAO,CAAE7P,KAAIqB,UACZ,CAACrB,EAAIqB,IAOR,OAAOsmB,GAJsCxY,GADjCH,KACkDzF,QAASrI,IAC1B,SAACkP,GAAD,OAsDxC,SACLA,EACA+H,GACS,IACKjU,EAASkM,EAAfrI,KACFqa,EAAWpa,GAAe9D,EAAM,CACpCnF,OAAO,EACPoc,KAAM,SACLiH,SAGGoD,EACJ,0BAAK7M,UAAU,yBACb,mBAAC,GAAD,CACEuR,QAAS/R,EAAM+R,QACf7oB,KAAM6C,EAAK7C,KACXyE,SAAU5B,EAAK4B,SACfC,QAAS7B,EAAK6B,QACdrC,MAAOQ,EAAKuF,YAAa/F,MACzBJ,OAAQY,EAAKlE,GACboiB,SAAUA,KAIhB,OAAO+I,GAAqBjnB,EAAM,eAAgBshB,EAASrN,EAAM6S,SA7E/DM,CAAiBlb,EAAS,CAAE4a,UAASd,gBAQnCqB,GAA2D,SAAC7S,GAA6B,MAEnDA,EAAM/O,QAAxCzF,EAFqF,EAErFA,KAAMyI,EAF+E,EAE/EA,YAAa3F,EAFkE,EAElEA,KAAM8C,EAF4D,EAE5DA,KACzBkhB,EAAYtS,EAAZsS,QACAhrB,EAAakE,EAAblE,GAAIqB,EAAS6C,EAAT7C,KACNsI,EAAU8E,KAAMoB,SAAiC,WACrD,MAAO,CAAE3L,KAAM,CAAElE,KAAIqB,QAAQsL,cAAa3F,OAAM8C,UAC/C,CAAC9J,EAAIqB,EAAMsL,EAAa3F,EAAM8C,IAOjC,OAAO6d,GAJ8CxY,GADzCH,KAC0Dwc,gBAAiB7hB,IAClC,SAACyG,GAAD,OA6DhD,SAA0BA,EAA4C+H,GAAsC,IACnGsT,EAAarb,EAAnBrI,KAgBR,IAAMyd,EAfN,WACE,IAAKiG,EAASC,UAAUrpB,OACtB,MAAO,CAAC,CAAEgR,QAAS,sEAA+C9S,IAAK,SAEzE,IAAM0J,EAAYwhB,EAASxhB,UAAUjD,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEhG,IAAI+J,cAAcrD,EAAE1G,QAOpE8F,EAAmB,CAAEgN,QALzB,mBAAC,KAAMkH,SAAP,KACE,uCAAQkR,EAASxhB,UAAU5H,OAA3B,YAAqC/D,SAAOO,UAC5C,0BAAK8Z,UAAU,QAAQ1O,EAAU7J,IAAIkkB,MAGC/jB,IAAK,QACzCsH,EAAoB4jB,EAASC,UAAUtrB,KAAI,SAACgC,GAAD,OAAaghB,GAAqBhhB,GAAS,MAC5F,MAAO,CAACiE,GAAO/D,OAAOuF,GAER8jB,GAEhB,SAASC,EAAe1nB,EAAmB8C,GACzC,OAAOpH,MAAIisB,mBAAmB,CAAE3nB,OAAMyI,YAAa,WAAY3F,SAEjE,IAAMye,EAAmB,CACvBrP,KAAoC,IAA9BqV,EAASC,UAAUrpB,OAAe,YAAlC,UAAmDopB,EAASC,UAAUrpB,OAAtE,aACNgH,SAAkC,WAAxBoiB,EAASriB,MAAMpC,KAAoB,EAAI,EACjD4e,KAAM,CACJ,CAAExP,KAAM,SAAUkJ,KAAMsM,EAAeH,EAASrpB,QAAS,WACzD,CAAEgU,KAAM,SAAUkJ,KAAMsM,EAAeH,EAASrpB,QAAS,aAI7D,OAAO+oB,GAAqBM,EAASrpB,QAAS,WAAYojB,EAASrN,EAAM6S,QAASvF,GA3FhFqG,CAAiB1b,EAAS,CAAE4a,gBA+FhC,SAASG,GACP/oB,EACAuK,EACA6Y,EACAwF,EACAvF,GAEA,IAAMsG,EAAgB/jB,GAAe5F,EAAS,CAC5CrD,OAAO,EACPoc,KAAM,UACLiH,SACG+E,EACJ,mBAAC,KAAM5M,SAAP,KACE,6BAAKnY,EAAQf,MACZ0qB,GAMC5nB,EAAe,CACnBkjB,QAAS,CACP/H,KAAM1f,MAAIosB,kBAAkB,CAAE9nB,KAAM9B,EAASuK,YAAa,YAC1DyJ,KAAM,WAERoP,QAAS,+CAGLyG,EAAgB,CACpB5E,QAAS,CACP/H,KAAM1f,MAAIosB,kBAAkB,CAAE9nB,KAAM9B,EAASuK,YAAa,iBAC1DyJ,KAAM,QAERoP,QAAS,8CACT2B,QAGIsE,EAAgB,CACpBpE,QAAS,CACP/H,KAAM1f,MAAIosB,kBAAkB,CAAE9nB,KAAM9B,EAASuK,YAAa,aAC1DyJ,KAAM,YAERoP,QAAS,8CACTC,UACA0B,QA4BF,MAAO,CACLH,KAPiB,CACjB3d,SApBF,WACE,OAAQsD,GACN,IAAK,UAEH,OADAxI,EAAQqhB,QAAUA,EACX,EACT,IAAK,eAIH,OAHIwF,IACFiB,EAASzG,QAAUA,GAEd,EACT,IAAK,WAEH,OADAiG,EAASjG,QAAUA,EACZwF,EAAU,EAAI,EACvB,QACE,MAAM,IAAI9oB,MAAM,2BAGLgqB,GAIfntB,MAAOqD,EAAQf,KACf4lB,OAAQ+D,EAAU,CAAC7mB,EAAS8nB,EAAWR,GAAY,CAACtnB,EAASsnB,IAK7Dpa,MAAO,UCxPJ,IAAM8a,GAA4D,SAACzT,GAExE,IAAM/O,EAAU/J,MAAImN,qBAAqB2L,EAAM5S,UAC/C,OAAIlG,MAAIwM,cAAczC,GACbihB,GAASlS,EAAO/O,EAAQvI,OAI1B,mBAAC,GAAD,CAAiB4F,KAAM2C,EAAQ3C,KAAMuD,SAAUZ,EAAQY,SAAUT,KAAMH,EAAQG,KAAMrK,IAAKkK,EAAQlK,OAGrG2sB,GAAmE,SAAC1T,GAAmC,IACnG1R,EAA8B0R,EAA9B1R,KAAMuD,EAAwBmO,EAAxBnO,SAAUT,EAAc4O,EAAd5O,KAAMrK,EAAQiZ,EAARjZ,IACxBkK,EAAkC8E,KAAMoB,SAAQ,WACpD,MAAO,CAAE7I,OAAMuD,WAAUT,OAAMrK,SAC9B,CAACuH,EAAMuD,EAAUT,EAAMrK,IAG1B,OAAOkoB,GAAQxY,GADHH,KACoBqd,eAAgB1iB,GAAU2iB,KAG5D,SAASA,GAAgBlc,GAAoD,IACnErI,EAASqI,EAATrI,KACAqB,EAAqBrB,EAArBqB,MAAOsiB,EAAc3jB,EAAd2jB,UACPziB,EAA4CG,EAA5CH,WAAYF,EAAgCK,EAAhCL,OAAQC,EAAwBI,EAAxBJ,SAAUhC,EAAcoC,EAAdpC,KAAMvH,EAAQ2J,EAAR3J,IACtCV,EAASU,EAAD,UAEE,WAATuH,EAAoB,SAAW,kBAFxB,aAE8CvH,EAAIc,IAFlD,aAE0DjC,SAAOM,cAFjE,cACHN,SAAOM,cAGZ4oB,EAAWvG,GAAuBliB,EAgC1C,SAAsB0C,EAAe8qB,GAEnC,IAAM3rB,EAAKa,EAAM+qB,WAAW9S,QAAQ,0BAA2B,OAAS,IAAM6S,EAAOE,cACrF,OAAiB,IAAVhrB,GAA6C,MAA9B8qB,EAAOA,EAAOlqB,OAAS,GAAazB,EAAGiC,UAAU,EAAGjC,EAAGyB,OAAS,GAAKzB,EAnC5C8rB,CAAa3jB,EAAQzK,SAAOM,cAAea,EAAKuH,GAEzF0e,EACJ,mBAAC,KAAMnL,SAAP,KACE,0BAAK5B,UAAU,mBACb,0BAAKA,UAAU,QACZqL,GAAgB/a,EAAYF,EAAQC,GAAU,SAACc,GAAD,OAAUlK,MAAI8hB,yBAAyB,CAAE5X,OAAM9C,OAAMvH,YAEtG,0BAAKkZ,UAAU,QACZiL,GACC,CAAC,GAAI,GAAI,IAAIxjB,KAAI,SAAC2jB,GAChB,MAAO,CAAE3N,KAAM,GAAK2N,EAAGA,SAEzB,SAACA,GAAD,OAAenkB,MAAI8hB,yBAAyB,CAAEnX,SAAUwZ,EAAmBtkB,WAC3E,SAACskB,GAAD,qBAAuBA,EAAvB,qBACA/a,GACA,GAEF,2BAAM2P,UAAU,QAAhB,eAQR,MAAO,CACLqO,KAAM,CAAExB,QAHMkG,EAAUtrB,KAAI,SAACgC,GAAD,OAAaghB,GAAqBhhB,MAG7CrD,QAAOyoB,WAAU9B,UAClCrU,MAAO,UCxDJ,IAAMsb,GAA2D,SAACjU,GACvE,IAAMqS,EAASnrB,MAAIyN,oBAAoBqL,EAAM5S,UAC7C,OAAIlG,MAAIwM,cAAc2e,GACbH,GAASlS,EAAOqS,EAAO3pB,OAGzB,mBAAC,GAAD,CAAcqF,WAAYskB,EAAOtkB,WAAYO,KAAM+jB,EAAO/jB,KAAM8C,KAAMihB,EAAOjhB,QAGhF8iB,GAA+D,SAAClU,GAAkC,IAC9F1R,EAA2B0R,EAA3B1R,KAAMP,EAAqBiS,EAArBjS,WAAYqD,EAAS4O,EAAT5O,KACpBH,EAAiC8E,KAAMoB,SAAQ,WACnD,MAAO,CACL7I,OACA8C,OACArD,WAAY,CAAEzG,GAAIyG,EAAWzG,GAAIqB,KAAMoF,EAAWpF,SAEnD,CAAC2F,EAAMP,EAAWzG,GAAIyG,EAAWpF,KAAMyI,IAE1C,OAAO6d,GAAQxY,GADHH,KACoBtF,cAAeC,GAAUkjB,KAGpD,SAASA,GAAezc,GAAmD,IACxErI,EAAiBqI,EAAjBrI,KAAMyI,EAAWJ,EAAXI,OACNxQ,EAA2C+H,EAA3C/H,GAAIqB,EAAuC0G,EAAvC1G,KAAMsE,EAAiCoC,EAAjCpC,KAAMU,EAA2B0B,EAA3B1B,MAAO+C,EAAoBrB,EAApBqB,MAAO9C,EAAayB,EAAbzB,SAC9ByC,EAAWK,EAAXL,OAEF0c,EAAgC1c,EAElC,CACEqN,KAAiB,IAAXrN,EAAe,WAAf,UAA+BA,EAA/B,YACNM,SAA8B,WAApBtB,EAAKqB,MAAMpC,KAAoB,EAAI,EAC7C4e,KAAM,CACJ,CACExP,KAAM,SACNkJ,KAAM1f,MAAIktB,wBAAwB,CAChCrmB,WAAYsB,EACZf,KAAM,YAGV,CACEoP,KAAM,SACNkJ,KAAM1f,MAAIktB,wBAAwB,CAChCrmB,WAAYsB,EACZf,KAAM,mBAhBdtH,EAsBE8lB,EAAuB,GAC7BA,EAAQjkB,KpBvCH,SAAyBoF,EAAuBhB,GACrD,OAAOyC,GAAWzB,EAAS,EAAGhB,GoBsCjBonB,CAAgB1mB,EAAOV,IACpCW,EAASzF,SAAQ,SAAC8F,EAASyL,GAAV,OAAoBoT,EAAQjkB,KpBpCxC,SAAwBoF,EAAuByL,GACpD,OAAOhK,GAAWzB,EAASyL,EAAQ,GoBmCe4a,CAAermB,EAASyL,OAE1E,IAAMsT,EACJtc,EAAML,OAASK,EAAMJ,SACnB,0BAAK2P,UAAU,UACb,0BAAKA,UAAU,SACZqL,GAAgB5a,EAAMH,WAAYG,EAAML,OAAQK,EAAMJ,UAAU,SAACc,GAAD,OAC/DlK,MAAIktB,wBAAwB,CAC1BrmB,WAAYsB,EACZ+B,OACA9C,KAAMoC,EAAMpC,iBAKlBtH,EAEAutB,EAAa,mBAAC,GAAD,CAAkB9qB,aAAcnC,EAAIwQ,OAAQA,IAG/D,OAFAgV,EAAQjkB,KAAK,CAAE8R,QAAS4Z,EAAY1sB,IAAK,WAElC,CACLymB,KAAM,CAAExB,UAASzmB,MAAOsC,EAAMokB,UAASC,UACvCrU,MAAO,QC9EJ,IAAMmZ,GAA8D,SAAC9R,GAQ1E,OAAO+O,GAJgB,CACrBT,KAAM,CAAExB,QAHM,mBAAC,GAAD,CAAsB0E,QAASxR,EAAMwR,UAGlCnrB,MAFLT,SAAOQ,eAAeC,OAGlCsS,MAAO,UCFE6b,GAAqD,SAACxU,GAEjE,IAAM/O,EAAU/J,MAAI2N,cAAcmL,EAAM5S,UACxC,OAAIlG,MAAIwM,cAAczC,GACbihB,GAASlS,EAAO/O,EAAQvI,OAE1B,mBAAC,GAAD,CAAU4F,KAAM2C,EAAQ3C,KAAMuD,SAAUZ,EAAQY,SAAUT,KAAMH,EAAQG,QAG3EqjB,GAAqD,SAACzU,GAA4B,IAC9E1R,EAAyB0R,EAAzB1R,KAAMuD,EAAmBmO,EAAnBnO,SAAUT,EAAS4O,EAAT5O,KAClBH,EAA2B8E,KAAMoB,SAAQ,WAC7C,MAAO,CAAE7I,OAAMuD,WAAUT,UACxB,CAAC9C,EAAMuD,EAAUT,IAGpB,OAAO6d,GAAQxY,GADHH,KACoB9E,QAASP,GAAUyjB,KAGrD,SAASA,GAAShd,GAAoD,IAC5DrI,EAAkBqI,EAAlBrI,KAAM6H,EAAYQ,EAAZR,QACNxG,EAAqBrB,EAArBqB,MAAOa,EAAclC,EAAdkC,UACTlL,EAAQT,SAAOO,QAIfwuB,EACJ,0BAAK1U,UAAU,UACb,mBAAC,GAAD,CAAgB9J,IAAKe,EAAS+K,YAAY,uBAC1C,mBAAC,GAAD,OAIE6M,EACJ,mBAAC,KAAMjN,SAAP,KACE,0BAAK5B,UAAU,YACb,6BAAK5Z,IAEP,0BAAK4Z,UAAU,qBACb,0BAAKA,UAAU,SAAS0U,GACxB,0BAAK1U,UAAU,QACb,mBAAC,KAAD,CACEyI,GAAIxhB,MAAI0tB,kBAAkB,CAAEtmB,KAAM,YAClC2R,UAA0B,YAAfvP,EAAMpC,KAAqB,gBAAatH,GAFrD,WAMA,mBAAC,KAAD,CACE0hB,GAAIxhB,MAAI0tB,kBAAkB,CAAEtmB,KAAM,SAClC2R,UAA0B,SAAfvP,EAAMpC,KAAkB,gBAAatH,GAFlD,WAWFgmB,EACJ,mBAAC,KAAMnL,SAAP,KACE,0BAAK5B,UAAU,mBACb,0BAAKA,UAAU,SACf,0BAAKA,UAAU,QACZqL,GAAgB5a,EAAMH,WAAYG,EAAML,OAAQK,EAAMJ,UAAU,SAACc,GAAD,OAC/DlK,MAAI0tB,kBAAkB,CAAExjB,OAAM9C,KAAMoC,EAAMpC,aAwCpD,MAAO,CACLggB,KAAM,CAAExB,QARR,0BAAK7M,UAAU,YACZ1O,EAAU7J,KAAI,SAACiK,GACd,OA5BN,SAAoBA,GAElB,IAAM9J,EAAM8J,EAAS9J,IACfd,EAAMkiB,GAAWtX,GACjB5I,EAAQ4I,EAAS5I,MAAQ,2BAAMkX,UAAU,cAAhB,WAAqCtO,EAAS5I,YAAgB/B,EACvF0C,EAAUiI,EAASjI,QAAU,0BAAKuW,UAAU,UAAUtO,EAASjI,cAAiB1C,EAChF6tB,EACJ,8BACE,mBAAC,KAAD,CAAM5U,UAAU,YAAYyI,GAAIxhB,MAAI2hB,cAAc,CAAEhhB,SAApD,SAMJ,OACE,0BAAKoY,UAAU,WAAWpY,IAAKA,GAC5Bd,EACAgC,EACAW,EACAmrB,GASMC,CAAWnjB,OAMQtL,QAAOyoB,WAAU9B,UAC/CrU,MAAO,QCzGJ,IAAMyN,GAAoD,SAACpG,GAChE,IAAMyI,EAAOvhB,MAAI6tB,UAAU/U,EAAM5S,UACjC,IAAKlG,MAAIwM,cAAc+U,GACrB,OAAO,mBAAC,GAAD,CAAO1hB,IAAK0hB,EAAK5gB,IAAKqC,KAAK,OAAOsnB,QAASxR,EAAMwR,UAE1D,IAAMqD,EAAO3tB,MAAI8tB,UAAUhV,EAAM5S,UACjC,OAAKlG,MAAIwM,cAAcmhB,GAGhB3C,GAASlS,GAFP,mBAAC,GAAD,CAAOjZ,IAAK8tB,EAAKhtB,IAAKqC,KAAK,OAAOsnB,QAASxR,EAAMwR,WAMtDyD,GAA6C,SAACjV,GAAuB,IACjEjZ,EAAuBiZ,EAAvBjZ,IAAKmD,EAAkB8V,EAAlB9V,KAAMsnB,EAAYxR,EAAZwR,QAIb3pB,EAAiCkO,KAAMoB,SAAQ,WACnD,MAAO,CAAEtP,IAAKd,EAAKmD,UAClB,CAACnD,EAAKmD,IAKT,OAAO+kB,GAAQxY,GADHH,KACoBiR,OAAQ1f,IAHQ,SAAC6P,GAAD,OAOlD,SAAiBA,EAAuC+H,GAA0B,IACxEpQ,EAASqI,EAATrI,KACAnF,EAASuV,EAATvV,KAEF7D,EAAiB,SAAT6D,EAAA,gCAA2CmF,EAAKxH,IAAhD,sBAAmEwH,EAAKxH,IAAxE,KAERinB,EAAoB,SAAT5kB,OAAkBlD,EAAYuhB,GAAuBliB,EAAO,WAAYgJ,EAAM,QAiC/F,MAJuB,CACrBif,KAAM,CAAExB,QANC,SAAT5iB,EACE,mBAAC,GAAD,CAAanD,IAAKsI,EAAKxH,IAAK2pB,QAAS/R,EAAM+R,QAAS9nB,QAAS2F,EAAK3F,QAASc,SAAU6E,EAAK7E,WAvB9F,WACE,IAAMd,EAAU2F,EAAK3F,QAAU2F,EAAK3F,QAAU,+CACxCc,EAAW6E,EAAK7E,SACpB,0BAAKygB,wBAAyBtV,GAAOtG,EAAK7E,YAE1C,0BAAKyV,UAAU,gBAAgB,oDAE3BI,EAAehR,EAAK3F,SAAa2F,EAAK7E,SAAW,gBAAkB,kBACzE,OACE,0BAAKyV,UAAU,YACb,0BAAKA,UAAU,WAAWvW,GACzBc,EACD,0BAAKyV,UAAU,QACb,mBAAC,KAAD,CAAMyI,GAAIxhB,MAAI2hB,cAAcxZ,GAAO4Q,UAAU,cAC1CI,KAWP6U,GAGe7uB,QAAOyoB,YACxBnW,MAAO,QA3CPwc,CAAQzd,EAAS,CAAExN,OAAMsnB,gBC9BtB,IAAMI,GAAiC,WAG5C,OAAO7C,GADgB,CAAET,KAAM,CAAExB,QADjB,mBAAC,GAAD,MAC0BzmB,MAAO,SAAWsS,MAAO,UCCxDyc,GAAmC,WAE9C,OAAOnG,GAAQ1Y,GADHD,KACmB+e,YAAaC,KAG9C,SAASA,GAAY5d,GAAgD,IAC3DrI,EAASqI,EAATrI,KACFyd,EAAuB,GAgB7Bzd,EAAK5H,OAAOU,SAAQ,SAAC0F,GAAD,OAAOif,EAAQjkB,KCzB9B,SAAyBa,GAC9B,IAAMkd,EAAO1f,MAAIquB,YAAY7rB,GAS7B,MAAO,CAAEiR,QAPP,mBAAC,KAAMkH,SAAP,KACE,6BACE,mBAAC,KAAD,CAAS6G,GAAI9B,GAAOld,EAAQf,OAE9B,0BAAKsiB,wBAAyBtV,GAAOjM,EAAQA,YAG/B7B,IAAK+e,GDeiB4O,CAAgB3nB,OAExD,IAAM4nB,EACJ,mBAAC,KAAM5T,SAAP,KACE,yCACA,0BAAK5B,UAAU,YACZ5Q,EAAKpC,KAAKvF,KAAI,SAACX,GACd,IAAM+lB,EE9BT,SAAuBpjB,GAC5B,IAAMkd,EAAO1f,MAAIgiB,UAAUxf,GACrB+W,EAAQ/W,EAAQrD,MAAM2a,QAAQ,IAJzB,QAMX,MAAO,CAAErG,QADO,mBAAC,KAAD,CAAS+N,GAAI9B,GAAOnG,GAClB5Y,IAAK+e,GF0BC8O,CAAc3uB,GAQ9B,OAAO,2BAAMc,IAAKilB,EAAQjlB,KAAMilB,EAAQnS,cAQhD,OAFAmS,EAAQjkB,KAAK,CAAE8R,QAAS8a,EAAU5tB,IAAK,YAEhC,CAAEymB,KAAM,CAAEjoB,MAAO,WAAYymB,WAAWnU,MAAO,UG7CjD,IAAMgd,GAAsD,SAAC3V,GAClE,IAAMqS,EAASnrB,MAAI0M,QAAQoM,EAAM5S,UACjC,OAAIlG,MAAIwM,cAAc2e,GACbH,GAASlS,EAAOqS,EAAO3pB,OAOzB,mBAAC,GAAD,CAASpB,GAAI+qB,EAAO/qB,GAAIqB,KAAM0pB,EAAO1pB,QAGxCitB,GAAgD,SAAC5V,GAAuB,IAIpE1Y,EAAa0Y,EAAb1Y,GAAIqB,EAASqX,EAATrX,KACNH,EAASuN,KAAMoB,SAAqB,WACxC,MAAO,CAAE7P,KAAIqB,UACZ,CAACrB,EAAIqB,IAGR,OAAOsmB,GAAQxY,GADHH,KACoBuf,SAAUrtB,GAASstB,KAGrD,SAASA,GAAUpe,GAA8C,IACvDrI,EAASqI,EAATrI,KACF5H,EACJ,0BAAKwY,UAAU,gBACb,0BAAKsJ,IAAKla,EAAK/F,MAAMigB,IAAK9E,OAAQpV,EAAK/F,MAAMmb,OAAQ9L,MAAOtJ,EAAK/F,MAAMqP,MAAO8Q,IAAI,MAGhF8D,EAASle,EAAK0mB,OAEhB,CACEpb,QAASqb,GAAa3mB,EAAK0mB,OAAQ,GACnCpd,MAAOtJ,EAAK4mB,YACZ/H,gBAAiB,cACjBD,SAAS,QALXjnB,EAOJ,MAAO,CACLsnB,KAAM,CAAExB,QAASrlB,EAAQpB,MAAOgJ,EAAK1G,MACrCgQ,MAAO,OACP4U,SAOJ,SAAS2I,GAAkB3J,GACzB,IAAMvK,EAASuK,EAAMvK,OACfmU,EAAuBnU,EAAOoU,aAAa,QAC3CC,EAAmBrU,EAAOqU,QAChC3J,MAAM,mCAAD,OAAoC2J,EAAU,OAAS,OAAvD,iBAAsEF,EAAtE,kBAaP,SAASH,GAAaD,EAA0BO,GAC9C,IAAMrW,EAAsB,IAAVqW,EAAc,oBAAiBtvB,EAC3CuvB,EAAYR,EAAOruB,KAAI,SAACyoB,GAC5B,IAxBiBqG,EAwBXL,GAxBWK,EAwBSrG,GAvBfgG,MAAQK,EAAML,MAAQK,EAAM7tB,KAAKorB,cAAc/S,QAAQ,IAAK,OAAOA,QAAQ,IAAK,KAwB3F,OACE,yBAAInZ,IAAKsuB,EAAOlW,UAAWkQ,EAAKhL,SAAW,cAAWne,GAf5D,SAAoBmpB,EAAsBgG,GAExC,OACE,gCACE,4BAAO1rB,KAAK,WAAWgsB,gBAAgB,EAAM3U,SAAUoU,GAAmBvtB,KAAMwtB,IAC/EhG,EAAKxnB,MAWH+tB,CAAWvG,EAAMgG,GACjBhG,EAAKhL,UAAY6Q,GAAa7F,EAAKhL,SAAUmR,EAAQ,OAI5D,OAAO,yBAAIrW,UAAWA,GAAYsW,GCpEpC,IAkBMI,GAAqC,WAEzC,OACE,mBAAC,KAAM9U,SAAP,KACE,mBAAC,GAAD,MACA,mBAAC,KAAD,KACE,mBAAC,KAAD,CAAmB+U,OAAK,EAACC,KAAK,SAASC,UAAWC,KAClD,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAK,IAAIC,UAAWC,KAC7C,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAK,QAAQC,UAAWC,KACjD,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAMpK,QAAME,MAAOmK,UAAWC,KACvD,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAMpK,QAAMuK,QAASF,UAAWC,KACzD,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAMpK,QAAM3c,YAAagnB,UAAWC,KAC7D,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAMpK,QAAM1D,cAAe+N,UAAWC,KAC/D,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAMpK,QAAM5c,MAAOinB,UAAWC,KACvD,mBAAC,KAAD,CAAmBH,OAAK,EAACC,KAAMpK,QAAMxf,KAAM6pB,UAAWC,KACtD,mBAAC,KAAD,CAAmBF,KAAMpK,QAAMwK,kBAAmBH,UAAWC,KAC7D,mBAAC,KAAD,CAAmBF,KAAMpK,QAAM5c,MAAOinB,UAAWC,KACjD,mBAAC,KAAD,CAAmBF,KAAMpK,QAAMhlB,OAAQqvB,UAAWC,KAClD,mBAAC,KAAD,CAAmBF,KAAMpK,QAAM3c,YAAagnB,UAAWC,KACvD,mBAAC,KAAD,CAAmBF,KAAMpK,QAAMxf,KAAM6pB,UAAWC,KAChD,mBAAC,KAAD,CAAmBD,UAAWC,QAMvBG,GA5CkC,SAACC,GAA2B,M3DatE,WAGL,IAAMrxB,EAAYF,SAAOE,UAAYiP,UAAc/N,EACnD,OAAO+O,KAAMY,SAAa7Q,G2DfNsxB,GAFuD,mBAEpEnhB,EAFoE,KAEhEC,EAFgE,KAInEC,EAAQghB,EAARhhB,IAKR,OAHA8H,SAAS5X,MAAT,UAAoBT,SAAOG,SAIzB,mBAAC+P,GAAWuhB,SAAZ,CAAqBtvB,MAAO,CAAEkO,KAAIC,QAAOC,QACvC,mBAAC,KAAD,CAA2BmhB,SAAUC,SACnC,mBAAC,GAAD,SCnBYC,QACW,cAA7B/V,OAAOrU,SAASqqB,UAEe,UAA7BhW,OAAOrU,SAASqqB,UAEhBhW,OAAOrU,SAASqqB,SAASC,MAAM,2DCNnC,IAAMvhB,GCmBC,SAAgBwhB,GAsBrB,SAASC,EAAQrkB,EAAa1M,GAI5B,OAzBF,SAAa0M,EAAa1M,GAGxB,GAAK8wB,EAaH,OAAOA,EAAUpkB,EAAK1M,GAZtB,IAAMgxB,EAAoB,GAU1B,OARIhxB,IACFgxB,EAAKC,OAAS,OACdD,EAAKhxB,KAAOgG,KAAKC,UAAUjG,GAC3BgxB,EAAKE,QAAU,CACb,eAAgB,qBAIbC,MAAMzkB,EAAKskB,GAWb/vB,CAAIyL,EAAK1M,GAAM4Q,MAAK,SAACwgB,GAC1B,IAAKA,EAASC,GACZ,MAAM,IAAI1uB,MAAMyuB,EAASE,YAE3B,OAAOF,EAAShjB,UA9B6B,4CAsCjD,sBAAAmjB,EAAA,+EACSR,EAAmB1wB,MAAImxB,kBADhC,4CAtCiD,kEA0CjD,WAAwB/uB,GAAxB,SAAA8uB,EAAA,+EACSR,EAAiB1wB,MAAIquB,YAAYjsB,KAD1C,4CA1CiD,kEA8CjD,sBAAA8uB,EAAA,+EACSR,EAA2B1wB,MAAIoxB,gBADxC,4CA9CiD,kEAkDjD,WAAuB9sB,GAAvB,SAAA4sB,EAAA,+EACSR,EAAgB1wB,MAAImiB,WAAW7d,KADxC,4CAlDiD,sBAsDjD,SAAS+sB,EAA6BlhB,EAAyBmhB,GAU7D,OAT2B,IAAIlhB,SAAe,SAACC,EAASC,GACtDH,EAAQI,MAAK,SAACghB,GACZ,IAAMrsB,EAAgBosB,EAAQC,GAC9BlhB,EAAQnL,MAEViL,EAAQM,OAAM,SAACjP,GACb8O,EAAO9O,SA7DoC,4CAmEjD,WAA+BuI,GAA/B,iBAAAmnB,EAAA,6DACQ7kB,EAAMrM,MAAIisB,mBAAmBliB,GAC7BynB,EAAiDd,EAA+BrkB,GAFxF,kBAGSglB,EAAeG,EAAaC,UAAQC,qBAH7C,4CAnEiD,kEAyEjD,WAA8B3nB,GAA9B,iBAAAmnB,EAAA,6DACQ7kB,EAAMrM,MAAI8hB,yBAAyB/X,GACnCynB,EAAgDd,EAA8BrkB,GAFtF,kBAGSglB,EAAeG,EAAaC,UAAQE,oBAH7C,4CAzEiD,kEA+EjD,WAA6B5nB,GAA7B,iBAAAmnB,EAAA,6DACQ7kB,EAAMrM,MAAIktB,wBAAwBnjB,GAClCynB,EAA+Cd,EAA6BrkB,GAFpF,kBAGSglB,EAAeG,EAAaC,UAAQG,mBAH7C,4CA/EiD,kEAqFjD,sBAAAV,EAAA,+EACSR,EAAsB1wB,MAAI6xB,kBADnC,4CArFiD,kEAyFjD,WAAuB9nB,EAA0B5B,GAAjD,eAAA+oB,EAAA,6DACQ7kB,EAAMrM,MAAI0tB,kBAAkB3jB,GADpC,kBAES2mB,EAAgBrkB,EAAKlE,IAF9B,4CAzFiD,kEA8FjD,WAAsBtI,GAAtB,eAAAqxB,EAAA,6DACQ7kB,EAAMrM,MAAI8xB,aAAajyB,GAD/B,kBAES6wB,EAAmBrkB,IAF5B,4CA9FiD,kEAuGjD,WAAqBlE,GAArB,SAAA+oB,EAAA,+EACSR,EAAuB1wB,MAAI+xB,eAAgB5pB,IADpD,4CAvGiD,kEA2GjD,WAA0B5F,EAAsB4F,GAAhD,SAAA+oB,EAAA,+EACSR,EAAmB1wB,MAAIgyB,iBAAiBzvB,GAAe4F,IADhE,4CA3GiD,kEA+GjD,WAA6BA,GAA7B,SAAA+oB,EAAA,+EACSR,EAAkB1wB,MAAIiyB,uBAAwB9pB,IADvD,4CA/GiD,kEAmHjD,WAA+BzE,EAAgByE,GAA/C,SAAA+oB,EAAA,+EACSR,EAAkB1wB,MAAIkyB,uBAAuBxuB,GAASyE,IAD/D,4CAnHiD,kEAuHjD,WAA2BtI,EAAasI,GAAxC,SAAA+oB,EAAA,+EACSR,EAAe1wB,MAAImyB,mBAAmBtyB,GAAMsI,IADrD,4CAvHiD,kEAyIjD,WAAyBiqB,GAAzB,mBAAAlB,EAAA,6DACQL,EAAmB,IAAIwB,SACrBC,OAAO,SAAU,oBACzBzB,EAAQyB,OAAO,SAAU,YACzBzB,EAAQyB,OAAO,gBAAiB,YAI1BniB,EAA6B2gB,MAAMsB,EAHf,CACxBvB,YAGIjd,EAA0B,IAAIxD,SAAgB,SAACC,EAASC,GAC5DH,EACGI,MAAK,SAACwgB,GACL,IAAKA,EAASC,GAAI,CAChB,IAAMxvB,EAAQ,IAAIc,MAAJ,UAAayuB,EAASwB,OAAtB,YAAgCxB,EAASE,aACtDzvB,EAAc6K,IAAM+lB,EACrB7wB,QAAQC,MAAMA,EAAMuF,SACpBuJ,EAAO9O,GAETuvB,EAASva,OAAOjG,MAAK,SAACiG,GAEpBnG,EAAQmG,SAGX/F,OAAM,SAACE,GACNpP,QAAQC,MAAMmP,EAAOnP,OACrB8O,EAAOK,SAzBf,kBA4BSiD,GA5BT,4CAzIiD,sBAwKjD,MAAO,CAELua,WA1K+C,2CA2K/CQ,SA3K+C,4CA4K/CjF,SA5K+C,2CA6K/C/f,QA7K+C,4CA8K/CiiB,gBA9K+C,4CA+K/Ca,eA/K+C,4CAgL/C3iB,cAhL+C,4CAiL/CM,WAjL+C,2CAkL/CE,QAlL+C,8CAmL/C+V,OAnL+C,4CAqL/CoF,MArL+C,4CAsL/CoE,WAtL+C,8CAuL/ChI,cAvL+C,4CAwL/C4I,gBAxL+C,8CAyL/CJ,YAzL+C,8CA0L/CjC,UA1L+C,6CDnBlCoK,EELV,SAAmBnmB,EAAa1M,GACrC,OAAO,IAAIyQ,SAAwB,SAACC,EAASC,GAC3CkI,YAAW,WACT,GAAI9Z,SAAOC,WAAX,CAEE,IAAM8zB,EAA4B,IAAIriB,SAAa,SAACC,EAASC,GAE3DA,EAAO,uCAOTD,EALgC,CAC9B2gB,IAAI,EACJC,WAAY,eACZljB,KAAM,kBAAM0kB,SAThB,CAmBA,IAAM/uB,EAASmK,KAAYzN,GAErB2N,IADkBpO,EACyBmO,GAAYzB,EAAK3I,EAAQ/D,GAAnDyM,GAAWC,EAAK3I,GAClCqK,GAGHuC,EAAO,IAAIhO,MAAJ,iCAAoC+J,KAK7C,IAAMqmB,EAA4B,IAAItiB,SAAa,SAACC,EAASC,GAE3DD,EAAQtC,MAOVsC,EALiC,CAC/B2gB,IAAI,EACJC,WAAY,KACZljB,KAAM,kBAAM2kB,QAGbh0B,SAAOI,iBFpCd6zB,KAASC,OAAO,mBAAC,GAAD,CAAK3jB,IAAKA,KAAS8H,SAASqK,eAAe,SDkHrD,kBAAmByR,WACrBA,UAAUC,cAAcC,MAAMxiB,MAAK,SAACyiB,GAClCA,EAAaC,iB,gCIjInB,62B,mDC0BA,SAASC,EAAgB7Z,GAEvB,IAAM1Q,EAAkC,IAAIlI,IAAyB4Y,EAAM1Q,MAAMnI,KAAI,SAAC8D,GAAD,MAAU,CAACA,EAAKlE,GAAIkE,OAgBzG,OAduC+U,EAAMzQ,YAAYpI,KAAI,SAAC+wB,GAC5D,MAAO,CACLnxB,GAAImxB,EAAKnxB,GACTqB,KAAM8vB,EAAK9vB,KACXsE,KAAMwrB,EAAKxrB,KACX4d,eAAgB,CACdlY,YAAa9C,EAAM/H,IAAI2wB,EAAK7tB,QAC5BsF,cAAeuoB,EAAKvoB,cACpBvF,SAAU8tB,EAAK9tB,UAEjBwF,SAAUsoB,EAAKtoB,aAad,SAAS0oB,EAAkBtY,GAChC,IAAMyS,EAAYoH,EAAgB7Z,GAClC,MAAO,CAAE7P,MAAO6P,EAAM7P,MAAOsiB,aAqBxB,SAAS8F,EAAiBvY,GAC/B,IAAM1Q,EAAkC,IAAIlI,IAAyB4Y,EAAM1Q,MAAMnI,KAAI,SAAC8D,GAAD,MAAU,CAACA,EAAKlE,GAAIkE,OAEjGlE,EAA2CiZ,EAA3CjZ,GAAIqB,EAAuC4X,EAAvC5X,KAAMsE,EAAiCsT,EAAjCtT,KAAMyD,EAA2B6P,EAA3B7P,MAAO/C,EAAoB4S,EAApB5S,MAAOC,EAAa2S,EAAb3S,SAEtC,SAASysB,EAAc5B,GACrB,MAAO,CACL9lB,YAAa9C,EAAM/H,IAAI2wB,EAAK7tB,QAC5BJ,SAAUiuB,EAAKjuB,SACfG,SAAU8tB,EAAK9tB,UAInB,MAAO,CACLrD,KACAqB,OACAsE,OACAU,MAAO0sB,EAAc1sB,GACrB+C,MAAOA,EACP9C,SAAUA,EAASlG,IAAI2yB,IAapB,SAASzB,EAAmBrY,GACjC,IAAMyS,EAAYoH,EAAgB7Z,GAC5B7W,EAAuB6W,EAAM1Q,MAAM,GACnCa,EAAQ6P,EAAM7P,MACpB,MAAO,CAAEhH,UAASspB,YAAWzhB,UAAWgP,EAAMhP,UAAWb,SAzG3D,uG,mjECMM4pB,EAAoB,CAAE/yB,aAAc,QACpCgzB,EAA4B,CAChChzB,aAAc,OACdizB,MAAO,CAAC,KAAM,SAEVC,EAAgC,CACpClzB,aAAc,OACdizB,MAAO,CAAC,OAAQ,KAAM,SAIlBE,EAA6B,CACjCnzB,aAAc,QACdizB,MAAO,CAAC,KAAM,SAGVG,EAA0B,CAAEpzB,aAAc,cAC1CqzB,EAAkC,CACtCrzB,aAAc,aACdizB,MAAO,CAAC,KAAM,SAGVK,EAAsB,CAAEtzB,aAAc,WAEtCuzB,EAAsB,CAAEvzB,aAAc,MAAO2C,KAAM,OACnD6wB,EAAmB,CAAExzB,aAAc,OAKnCyzB,EAAsC,CAC1CzzB,aAAc,aACdizB,MAAO,CAAC,SAAU,QAEdS,EAA4B,CAChC1zB,aAAc,MACdizB,MAAO,CAAC,MAAO,SAEXU,EAA4B,CAChC3zB,aAAc,MACdizB,MAAO,CAAC,MAAO,SAEXW,EAA2B,CAAE5zB,aAAc,MAAOizB,MAAO,CAAC,QAG1DY,EAAoB,CAAE7zB,aAAc,SACpC8zB,EAA4B,CAAE9zB,aAAc,aAAc2C,KAAM,OAChEoxB,EAA6B,CACjC/zB,aAAc,aACdizB,MAAO,CAAC,KAAM,SAAU,WAEpBe,EAAmC,CACvCh0B,aAAc,OACdizB,MAAO,CAAC,OAAQ,OAclB,SAASgB,EAAU/L,GACjB,OAAQA,GACN,IAAK,MACL,IAAK,OACL,IAAK,SACL,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,MACH,OAAO,EACT,QACE,OAAO,GAsFb,SAASgM,EAAShM,GAChB,IAAMvnB,GAAcunB,EACpB,MAAqB,kBAAPvnB,EAAkBA,OAAKlB,EAIhC,SAASG,EAAQd,GAEtB,OAAOA,EACJ2a,QAAQ,mBAAoB,IAC5BA,QAAQ,KAAM,KACdzV,oBAGL,SAASmwB,EAA2B5S,EAAkBzZ,EAASssB,GAA4B,IACjFp0B,EAAwBuhB,EAAxBvhB,aAAcizB,EAAU1R,EAAV0R,MAChBtyB,EAAe,GAYrB,OAXAA,EAAGW,KAAK+yB,EAAQr0B,IAChBizB,EAAMryB,SAAQ,SAAC0zB,GACb,GAAIL,EAAUK,GACZ3zB,EAAGW,KAAKgzB,OACH,CACL,IAAMh0B,EAAeg0B,EACf9zB,EAAQ,GAAKsH,EAAKxH,GAClBi0B,EAAe,SAARj0B,EAAmC,SAAjBN,EAA0Bw0B,mBAAmBh0B,GAASZ,EAAQY,GAAUA,EACvGG,EAAGW,KAAKizB,OAGL,IAAM5zB,EAAGmC,KAAK,MAAQsxB,EAAUA,EAAQhH,SAAW,IAG5D,SAASqH,EAAQlT,EAAc6S,GAA4B,IACjDp0B,EAAuBuhB,EAAvBvhB,aAAc2C,EAAS4e,EAAT5e,KAChBhC,EAAe,GAKrB,OAJAA,EAAGW,KAAK+yB,EAAQr0B,IACZ2C,GACFhC,EAAGW,KAAKqB,GAEH,IAAMhC,EAAGmC,KAAK,MAAQsxB,EAAUA,EAAQhH,SAAW,I,IAStDsH,E,WAEJ,WAAYzrB,GAAoB,yBADvBA,WACsB,EAC7B5I,KAAK4I,MAAQA,E,kDAETpE,GACJ,IAAMI,EAAQ5E,KAAK4I,MAAMjI,MAAK,SAACsF,GAAD,OAAOA,EAAE,KAAOzB,KAC9C,OAASI,EAAQA,EAAM,QAAKxF,I,4BAExBoF,GACJ,IAAMI,EAAQ5E,KAAK4I,MAAMjI,MAAK,SAACsF,GAAD,OAAOA,EAAE,KAAOzB,KAC9C,OAASI,EAAQA,EAAM,QAAKxF,M,KAI1Bk1B,EAAgB,IAAID,EAA4B,CACpD,CAAC,UAAW,WACZ,CAAC,QAAS,SACV,CAAC,aAAc,eACf,CAAC,OAAQ,SACT,CAAC,QAAS,UACV,CAAC,MAAO,UAGV,SAASL,EAAQr0B,GACf,IAAM40B,EAAOD,EAAcE,MAAM70B,GACjC,IAAK40B,EACH,MAAM,IAAI3yB,MAAJ,mCAAsCjC,EAAtC,MAER,OAAO40B,EAGF,SAAS1oB,EAAgBrG,GAE9B,OAD2B,IAAIivB,EAASjvB,GACxBqG,kBAiBX,SAASD,EAAYD,GAC1B,GAAe,MAAXA,EAAI,GAKN,MAAM,IAAI/J,MAAM,kCAGlB,IAAM8yB,EAAY/oB,EAAIuQ,QAAQ,MACX,IAAfwY,IACF/oB,EAAMA,EAAIpJ,UAAU,EAAGmyB,IAGzB,IAAMC,EAAahpB,EAAIuQ,QAAQ,KACzB0Y,GAAwB,IAAhBD,EAAoBhpB,EAAIpJ,UAAUoyB,GAAc,GAK9D,OAJoB,IAAhBA,IACFhpB,EAAMA,EAAIpJ,UAAU,EAAGoyB,IAGlB,CAAEpK,SAAU5e,EAAKohB,OAAQ6H,G,IAU5BH,E,WAIJ,WAAYjvB,GAAqB,yBAHzBqvB,cAGwB,OAFxBd,aAEwB,MAEtBxJ,EAAqB/kB,EAArB+kB,SAAUwC,EAAWvnB,EAAXunB,OAClB,GAAIA,GAAwB,MAAdA,EAAO,GACnB,MAAM,IAAInrB,MAAM,qCAElB,GAAoB,MAAhB2oB,EAAS,GACX,MAAM,IAAI3oB,MAAM,uCAElB5B,KAAK60B,SAA+B,IAApBtK,EAASxoB,OAAe,GAAKwoB,EAAShoB,UAAU,GAAG9B,MAAM,KACzET,KAAK+zB,QAAU,IAAIe,EAAQtvB,G,qDAGF0b,GACzB,OAhNJ,SAAS6T,EAAyBF,EAAoB3T,GAAkC,IAC9EvhB,EAAwBuhB,EAAxBvhB,aAAcizB,EAAU1R,EAAV0R,MACtB,GAAKiC,EAAS9yB,QAAU8yB,EAAS,KAAOb,EAAQr0B,GAAhD,CAGA,GAAIk1B,EAAS9yB,SAAW,EAAI6wB,EAAM7wB,OAAlC,CAeA,IADA,IAAIzB,EAAK,GACA00B,EAAe,EAAGC,EAAY,EAAGD,EAAeH,EAAS9yB,SAAUizB,IAAgBC,EAAW,CACrG,IAAMhB,EAAOrB,EAAMqC,GACbC,EAAUL,EAASG,GACzB,GAAIpB,EAAUK,IAEZ,GAAIiB,IAAYjB,EACd,YAOJ,OADqBA,GAEnB,IAAK,KACH,IAAMv0B,EAAKm0B,EAASqB,GACpB,IAAKx1B,EACH,OAEFY,EAAE,2BAAQA,GAAR,IAAYZ,OACd,MACF,IAAK,OACHY,EAAE,2BAAQA,GAAR,IAAYS,KAAMm0B,IACpB,MACF,IAAK,MACH50B,EAAE,2BAAQA,GAAR,IAAYL,IAAKi1B,IACnB,MACF,QACE,QAGN,OAAO50B,EA5CL,GAAIsyB,EAAM7wB,QAAsC,SAA5B6wB,EAAMA,EAAM7wB,OAAS,IAAiB8yB,EAAS9yB,SAAW6wB,EAAM7wB,OAAQ,CAC1F,IAIM6C,EAAQmwB,EAAOF,EAJI,CACvBl1B,eACAizB,MAAOA,EAAM5pB,MAAM,EAAG4pB,EAAM7wB,OAAS,KAGvC,GAAI6C,EACF,OAAO,2BAAKA,GAAZ,IAAmB7D,KAAM,OAkMtBg0B,CAAO/0B,KAAK60B,SAAU3T,K,+BAGtBngB,GACP,OAAOf,KAAK+zB,QAAQ7zB,IAAIa,K,8BAGlBmgB,GACN,OAlKJ,SAAeiU,EAAwBjU,GAAwB,IACrDvhB,EAAuBuhB,EAAvBvhB,aAAc2C,EAAS4e,EAAT5e,KACtB,SAAK6yB,EAAapzB,QAAUozB,EAAa,KAAOnB,EAAQr0B,MAGxB,IAAxBw1B,EAAapzB,SAAiBO,GAAkC,IAAxB6yB,EAAapzB,QAAgBozB,EAAa,KAAO7yB,GA6JxF8yB,CAAMp1B,KAAK60B,SAAU3T,K,wCAI5B,IAAKlhB,KAAK60B,SAAS9yB,OACjB,MAAO,UAET,IAAMpC,EAAe20B,EAAce,MAAMr1B,KAAK60B,SAAS,IACvD,OAAKl1B,GACI,CAAEmB,MAAM,4BAAD,OAA8Bd,KAAK60B,SAAS,GAA5C,U,KAkBb,SAAS/oB,EAAcxL,GAC5B,YAAqClB,IAA7BkB,EAAmBQ,MAG7B,IAAMw0B,EAAmC,CAAEx0B,MAAO,mBAQ5Cg0B,E,WAGJ,WAAYtvB,GACV,GADgC,yBAF1B+vB,YAEyB,EAC3B/vB,GAAYA,EAASunB,OAAQ,CAC/B,IAAMtsB,EAAQ+E,EAASunB,OAAOxqB,UAAU,GAAG9B,MAAM,KACjDT,KAAKu1B,OAAS90B,EACXqJ,QAAO,SAAC+d,GAAD,OAAOA,EAAE9lB,OAAS,KACzBjC,KAAI,SAAC+nB,GACJ,IAAM+K,EAAQ/K,EAAEpnB,MAAM,KACtB,OAAOmyB,EAAM7wB,OAAS,EAAI,CAAC6wB,EAAM,GAAIA,EAAM,IAAM,CAACA,EAAM,QAAIxzB,WAGhEY,KAAKu1B,OAAS,G,gDAIdx0B,GACF,IAAM6D,EAAQ5E,KAAKu1B,OAAO50B,MAAK,SAACsF,GAAD,OAAOA,EAAE,KAAOlF,KAC/C,OAAS6D,EAAQA,EAAM,QAAKxF,I,2BAEzB2B,EAAcZ,GACjB,IAAKA,EACH,MAAM,IAAIyB,MAAM,qCAElB5B,KAAKu1B,OAAOt0B,KAAK,CAACF,EAAMZ,M,+BAGxB,OAAQH,KAAKu1B,OAAOxzB,OAEhB,IAAM/B,KAAKu1B,OAAOz1B,KAAI,SAAC8G,GAAD,OAAWA,EAAK,GAAKA,EAAK,GAAK,IAAMA,EAAK,GAAKA,EAAK,MAAKnE,KAAK,KADpF,O,KASF+yB,EAAe,IAAInB,EAA2B,CAClD,CAAC,UAAW,WACZ,CAAC,WAAY,cAiBR,SAASpoB,EAAQzG,GAEtB,OADiB,IAAIivB,EAASjvB,GACdiwB,QAAQ/C,GAGnB,SAAShC,IACd,OAAO0D,EAAQ1B,GAGV,SAAStmB,EAAc5G,GAC5B,IAAMgM,EAAW,IAAIijB,EAASjvB,GAC1B5B,EAA2B4N,EAASkkB,SAAS7C,GACjD,GAAIjvB,EACF,MAAO,CAAEA,OAAMyI,YAAa,gBAG9B,KADAzI,EAAO4N,EAASkkB,SAAS/C,IAEvB,OAAO2C,EAET,IAAM/P,EAAM/T,EAASmkB,SAAS,OAC9B,IAAKpQ,EACH,MAAO,CAAE3hB,QAEX,IAAMyI,EAAuCmpB,EAAaH,MAAM9P,GAChE,OAAKlZ,EAGE,CAAEzI,OAAMyI,eAFN,CAAEvL,MAAO,wBAKb,SAASyL,EAAsB/G,GACpC,IAAM2G,EAAcC,EAAc5G,GAClC,GAAIsG,EAAcK,GAChB,OAAOA,EAHkF,IAKnFvI,EAAsBuI,EAAtBvI,KAAMyI,EAAgBF,EAAhBE,YACd,GAAoB,aAAhBA,EACF,MAAO,CAAEvL,MAAO,wBAPyE,MAS3F,SAA4BizB,GAC1B,IAAMrtB,EAAOqtB,EAAQ7zB,IAAI,QACnBsJ,EAAOuqB,EAAQ7zB,IAAI,QACzB,MAAO,CACLwG,KAAMA,EAAOkvB,GAAeP,MAAM3uB,QAAQtH,EAC1CoK,KAAMA,EAAOqqB,EAASrqB,QAAQpK,GAGXy2B,CAAmB,IAAIf,EAAQtvB,IACtD,MAAO,CAAE5B,OAAM8C,KAlB4E,EAiBnFA,KACa2F,cAAa7C,KAlByD,EAiB7EA,MAIT,SAASiY,EAAW7d,GACzB,OAAOkwB,EAASnB,EAAW/uB,GAGtB,SAAS8nB,EAAkBriB,GAChC,GAA4B,iBAAxBA,EAAQgD,YACV,OAAOynB,EAASjB,EAAexpB,EAAQzF,MAEzC,IAAMmwB,EAAmB,IAAIe,EAI7B,OAHIzrB,EAAQgD,aACV0nB,EAAQ9yB,KAAK,MAAOu0B,EAAahB,MAAMnrB,EAAQgD,cAE1CynB,EAASnB,EAAWtpB,EAAQzF,KAAMmwB,GAGpC,SAASxI,EAAmBliB,GACjC,IAAM0qB,EAAmB,IAAIe,EAQ7B,OAPAf,EAAQ9yB,KAAK,MAAOu0B,EAAahB,MAAM,aACnCnrB,EAAQ3C,MACVqtB,EAAQ9yB,KAAK,OAAQ20B,GAAepB,MAAMnrB,EAAQ3C,OAEhD2C,EAAQG,MACVuqB,EAAQ9yB,KAAK,OAAQ,GAAKoI,EAAQG,MAE7BsqB,EAASnB,EAAWtpB,EAAQzF,KAAMmwB,GAOpC,SAAS/nB,EAAQxG,GACtB,IACM9D,EADW,IAAI+yB,EAASjvB,GACakwB,SAAS5C,GACpD,OAAOpxB,GAAgB4zB,EAGlB,SAAS3H,EAAYjsB,GAC1B,OAAOoyB,EAAShB,EAAYpxB,GAS9B,IAAMo0B,EAAW,IAAIzB,EAAwB,CAC3C,CAAC,UAAW,WACZ,CAAC,OAAQ,UASJ,SAASpnB,EAAczH,GAC5B,IAAMgM,EAAW,IAAIijB,EAASjvB,GAC9B,IAAKgM,EAASikB,QAAQtC,GACpB,OAAOmC,EAET,IAAM5uB,EAAO8K,EAASmkB,SAAS,QACzBnsB,EAAOgI,EAASmkB,SAAS,QAC/B,MAAO,CACLjvB,KAAMA,EAAOovB,EAAST,MAAM3uB,QAAQtH,EACpC6K,SAAU,GACVT,KAAMA,EAAOqqB,EAASrqB,QAAQpK,GAI3B,SAAS4N,EAAUxH,GAExB,OADiB,IAAIivB,EAASjvB,GACdiwB,QAAQvC,GAGnB,SAASlG,EAAkBuI,GAChC,IAAMlsB,EAAoB,2BAAQksB,GAAR,IAAgBtrB,SAAU,KAC9C8pB,EAAmB,IAAIe,EAQ7B,OAPIzrB,EAAQ3C,MACVqtB,EAAQ9yB,KAAK,OAAQ60B,EAAStB,MAAMnrB,EAAQ3C,OAE1C2C,EAAQG,MACVuqB,EAAQ9yB,KAAK,OAAQ,GAAKoI,EAAQG,MAEpCuqB,EAAQ9yB,KAAK,WAAY,GAAKoI,EAAQY,UAC/BmqB,EAAQjB,EAAWY,GAOrB,SAAS5C,IACd,OAAOiD,EAAQlB,GAEV,SAAS6C,IACd,OAAO3B,EAAQjB,GAEV,SAAS7R,EAAUniB,GACxB,OAAO62B,GAAwB72B,GAG1B,SAAS4hB,GAAc5hB,GAC5B,OAAO20B,EAAST,EAAcl0B,GAEzB,SAAS8hB,GAAc9hB,GAC5B,OAAO20B,EAASR,EAAcn0B,GAEzB,SAASiyB,GAAajyB,GAC3B,OAAO20B,EAASP,EAAap0B,GAGxB,SAAS62B,GAAwB72B,GACtC,OAAO20B,EAASV,EAAwBj0B,GAOnC,SAASguB,GAAU3nB,GACxB,IACMvF,EADqB,IAAIw0B,EAASjvB,GACnBkwB,SAASrC,GAC9B,OAAOpzB,GAAYq1B,EAGd,SAASlI,GAAU5nB,GACxB,IACMvF,EADqB,IAAIw0B,EAASjvB,GACnBkwB,SAASpC,GAC9B,OAAOrzB,GAAYq1B,EAGd,SAASpoB,GAAS1H,GACvB,IACMvF,EADqB,IAAIw0B,EAASjvB,GACnBkwB,SAASnC,GAC9B,OAAOtzB,GAAYq1B,EAUrB,IAAMW,GAAkB,IAAI5B,EAA+B,CACzD,CAAC,SAAU,UACX,CAAC,SAAU,YAGP6B,GAAY,IAAI7B,EAAwB,CAC5C,CAAC,GAAI,MACL,CAAC,GAAI,MACL,CAAC,GAAI,QAUA,SAAS5nB,GAAqBjH,GACnC,IAAMgM,EAAW,IAAIijB,EAASjvB,GACxBvF,EAAMuR,EAASkkB,SAAStC,GACxB+C,EAA+B,MAAtB3wB,EAAS+kB,SACxB,IAAKtqB,IAAQuR,EAASikB,QAAQ1C,KAAsBoD,EAClD,OAAOb,EAET,IAAM5uB,EAAO8K,EAASmkB,SAAS,QACzB1rB,EAAWuH,EAASmkB,SAAS,YAC7BnsB,EAAOgI,EAASmkB,SAAS,QAC/B,MAAO,CACLjvB,KAAMA,EAAOuvB,GAAgBZ,MAAM3uB,QAAQtH,EAC3C6K,SAAUA,EAAWisB,GAAUb,MAAMprB,QAAY7K,EACjDoK,KAAMA,EAAOqqB,EAASrqB,QAAQpK,EAC9BD,IAAKc,GAIF,SAASmhB,GAAyB/X,GACvC,IAAM0qB,EAAmB,IAAIe,EAU7B,OATIzrB,EAAQ3C,MACVqtB,EAAQ9yB,KAAK,OAAQg1B,GAAgBzB,MAAMnrB,EAAQ3C,OAEjD2C,EAAQY,UACV8pB,EAAQ9yB,KAAK,WAAY,GAAKoI,EAAQY,UAEpCZ,EAAQG,MACVuqB,EAAQ9yB,KAAK,OAAQ,GAAKoI,EAAQG,MAE5BH,EAAQlK,IAA2C20B,EAASV,EAAwB/pB,EAAQlK,IAAK40B,GAAnFK,EAAQrB,EAAkBgB,GASlD,IAAM6B,GAAiB,IAAIvB,EAA8B,CACvD,CAAC,SAAU,UACX,CAAC,SAAU,YASN,SAAStnB,GAAoBvH,GAClC,IAAMgM,EAAW,IAAIijB,EAASjvB,GACxBW,EAAiCqL,EAASkkB,SAAS1C,GACzD,IAAK7sB,EACH,OAAOmvB,EAGT,IAAM5uB,EAAO8K,EAASmkB,SAAS,QACzBnsB,EAAOgI,EAASmkB,SAAS,QAC/B,MAAO,CACLxvB,aACAO,KAAMA,EAAOkvB,GAAeP,MAAM3uB,QAAQtH,EAC1CoK,KAAMA,EAAOqqB,EAASrqB,QAAQpK,GAI3B,SAAS4jB,GAAiB7c,GAC/B,OAAO2tB,EAASd,EAAiB7sB,GAG5B,SAASqmB,GAAwBnjB,GACtC,IAAM0qB,EAAU,IAAIe,EAOpB,OANIzrB,EAAQ3C,MACVqtB,EAAQ9yB,KAAK,OAAQ20B,GAAepB,MAAMnrB,EAAQ3C,OAEhD2C,EAAQG,MACVuqB,EAAQ9yB,KAAK,OAAQ,GAAKoI,EAAQG,MAE7BsqB,EAASd,EAAiB3pB,EAAQlD,WAAY4tB,GAOhD,SAAStD,KACd,OAAO2D,EAAQnB,GAWV,SAAS5B,KACd,OAAOnQ,GAAM6D,MAGR,SAASwM,KACd,OAAOrQ,GAAMC,cAGR,SAASmQ,GAAiBzvB,GAC/B,OAAOiyB,EAASJ,EAAgB,CAAEh0B,GAAImC,IAGjC,SAAS2vB,GAAuBxuB,GACrC,OAAO8wB,EAASH,EAAsB,CAAEj0B,GAAIsD,IAGvC,SAASyuB,GAAmBtyB,GACjC,OAAO20B,EAASR,EAAc,CAAErzB,IAAKd,IAGhC,SAASi3B,GAAQ5wB,GAEtB,OAD2B,IAAIivB,EAASjvB,GACxBiwB,QAAQjC,GAGnB,SAAShmB,GAAgBhI,GAE9B,OAD2B,IAAIivB,EAASjvB,GACxBiwB,QAAQhC,GAGnB,SAASlmB,GAAY/H,GAC1B,IACMZ,EADqB,IAAI6vB,EAASjvB,GACjBkwB,SAAShC,GAChC,OAAO9uB,EAAQA,EAAMlF,QAAKN,EAGrB,SAASsO,GAAkBlI,GAChC,IACMZ,EADqB,IAAI6vB,EAASjvB,GACjBkwB,SAAS/B,GAChC,OAAO/uB,EAAQA,EAAMlF,QAAKN,EAGrB,SAASuO,GAAcnI,GAC5B,IACMZ,EADqB,IAAI6vB,EAASjvB,GACjBkwB,SAASpC,GAChC,OAAO1uB,EAAQA,EAAM3E,SAAMb,EAOtB,IAAM8hB,GAAQ,CACnB6D,MAAOqP,EAAQZ,GACfpE,QAASgF,EAAQnB,GACjB/qB,YAAaksB,EAAQrB,GACrB1D,kBAAmB+E,EApvBkB,CACrCz0B,aAAc,aACd2C,KAAM,WAmvBN2F,MAAOmsB,EAAQ1B,GACf7yB,OAAQu0B,EAtwBiB,CAAEz0B,aAAc,UAuwBzCwhB,cAAeiT,EAAQX,GACvBpuB,KAAM+uB,EAAQjB,K,uKC5xBhB,kCAiBO,IAAM5J,EAAmB,CAAEC,IAAK,GAAIhV,IAAK,O","file":"static/js/main.ccc6f947.chunk.js","sourcesContent":["// https://stackoverflow.com/questions/42728140/is-it-possible-to-export-as-foo-in-typescript\r\n// https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#export-star-as-namespace-syntax\r\n\r\nexport * from \"./data\";\r\nimport * as Data from \"./data\";\r\nexport { Data };\r\n\r\nimport * as Message from \"./messages\";\r\nexport { Message };\r\n\r\nimport * as Post from \"./messages/post\";\r\nexport { Post };\r\n\r\nimport * as Wire from \"./messages/wire\";\r\nexport { Wire };\r\n\r\nimport * as Url from \"./urls\";\r\nexport { Url };\r\nexport { config } from \"./config\";\r\n\r\nexport { SearchInput } from \"./messages/searchInput\";\r\n\r\nimport { route as Route } from \"./urls\";\r\nexport { Route };\r\n\r\nexport { SimpleResponse } from \"./api\";\r\n","/*\r\n  These are interfaces are used between the client API and the server but not seen by the UI\r\n*/\r\n\r\nexport * from \"./post\";\r\nexport * from \"./push\";\r\nexport * from \"./wire\";\r\n","export const config = {\n  loginfails: false,\n  autologin: true,\n  appname: \"Prototype\",\n  mockdelay: 25,\n  exerptlength: 200,\n  strQuestions: \"Questions\", // could be \"Discussions or \"Questions\"\n  strTags: \"Tags\", // could be \"Tags or \"Topics\" or even \"Features\"\n  strNewQuestion: {\n    title: \"Ask a question\", // could be \"Start a discussion\" or \"New discussion\"\n    button: \"Ask Question\", // could be \"Start a discussion\" or \"New discussion\"\n    noun: \"question\",\n  },\n  tagValidation: {\n    minimum: true,\n    maximum: true,\n    canNewTag: false,\n  },\n  minLengths: {\n    title: 15,\n    body: 30,\n  },\n};\n","import { Data, Message, Url } from \"shared-lib\";\n\n/*\n  This defines 'bare' data formats i.e. the format in which data is stored on disk before it's loaded.\n\n  For any given data type (e.g. named `Data`) defined in `/src/data/Data`, there may also be:\n\n  - `WireData` (also defined in `/src/io/Wire`)\n  - `BareData` (defined in this `/src/server/bare`)\n\n  Only a \"data\" format is used in the `/src/react` code.\n\n  A \"wire\" format is used on the network connection between server and client.\n  It's easily converted to data, but reduces redundency i.e. duplication of --\n  for example all messages have a user, a user may have several messages, so instead of transporting multiple\n  instances of user data, the data for each user is sent once, and messages include a user ID.\n\n  A \"bare\" format is intended for the server's storing of data on disk.\n*/\n\n// This is \"bare\" because it defines persistent tag data but not the associated usage count\nexport interface BareTopic {\n  title: string;\n  summary?: string;\n  markdown?: string;\n  userId: number;\n  dateTime: string;\n}\n\nexport type BareTag = BareTopic & Data.Key;\n\n// this isn't persisted on disk but is used like database might creates an index for a table\nexport interface BareTagCount extends Data.Key {\n  count: number;\n}\n\n// When TagId is a Key then it identifies a Tag,\n// otherwise it identifies e.g. an Image (or possibly some other type of content)\n// TagId is used instead of Key in BareDiscussion, so discussions can be associated with tags or, e.g. with images.\nexport type Tag = { tag: string };\nexport type TagId = Tag | { resourceType: Url.ResourceType; id: number };\n\nexport function isTag(tag: TagId): tag is Tag {\n  return (tag as Tag).tag !== undefined;\n}\n\n// if data for each user is stored in a separate (numbered) directory\n// then this defines the data which would be stored in each directory\nexport interface StoredUser {\n  name: string;\n  email: string;\n  dateTime: string;\n  // TODO: add some authentication or credential data somewhere e.g. here\n  profile: Data.UserProfile;\n  favourites: TagId[];\n}\n\nexport interface BareUser extends StoredUser {\n  gravatarHash: string;\n}\n\nexport type BareMessage = Message.WireMessage;\n\nexport interface BareDiscussion extends Data.IdName {\n  tags: TagId[];\n  first: BareMessage;\n  messages: BareMessage[];\n}\n\nexport function getTagText(title: string) {\n  // preserve only alphanumeric and whitespace and hyphen, then convert all whitespace, then toLower\n  return Url.slugify(title);\n}\n","import { BareTag, BareTagCount, getTagText, isTag, TagId } from \"server-types\";\nimport { IdName, Image, Key, SiteTagCount, TagCount, Url } from \"shared-lib\";\n\n// export function getTagText(title: string) {\n//   // preserve only alphanumeric and whitespace and hyphen, then convert all whitespace, then toLower\n//   return slugify(title);\n// }\n\nfunction getMapKey(tagId: TagId): string {\n  return isTag(tagId) ? tagId.tag : `${tagId.id} ${tagId.resourceType}`;\n}\n\nfunction getTagKey(key: string, images: IdName[]): string {\n  if (!key.includes(\" \")) {\n    return key;\n  }\n  // do the reverse of what `add(tagId: TagId)` did, above\n  const split = key.split(\" \");\n  const id: number = +split[0];\n  if (!id) {\n    // shouldn't happen\n    console.error(`TagIdCounts.read -- unexpected key \"${key}\"`);\n  } else {\n    const resourceType: Url.ResourceType = split[1] as Url.ResourceType;\n    switch (resourceType) {\n      case \"Image\":\n        const foundImage = images.find((idName) => idName.id === id);\n        if (!foundImage) {\n          // shouldn't happen -- was the image deleted or something?\n          console.error(`TagIdCounts.read -- image not found \"${key}\"`);\n          break;\n        }\n        key = getTagText(foundImage.name);\n        break;\n      default:\n        // shouldn't happen -- are we meant to be implementing support for using another resourceType as a TagId?\n        console.error(`TagIdCounts.read -- unexpected resourceType \"${key}\"`);\n        break;\n    }\n  }\n  return key;\n}\n\n// this class mimics a Map<TagId, TValue>\nclass TagIdMap<TValue> {\n  private readonly images: IdName[];\n  private readonly map: Map<string, TValue> = new Map<string, TValue>();\n  constructor(images: IdName[]) {\n    this.images = images;\n  }\n\n  protected get(key: string): TValue | undefined {\n    return this.map.get(key);\n  }\n  protected set(key: string, value: TValue): void {\n    this.map.set(key, value);\n  }\n  protected has(key: string): boolean {\n    return this.map.has(key);\n  }\n\n  protected getKeyPairs(): (Key & { value: TValue })[] {\n    const rc: (Key & { value: TValue })[] = [];\n    this.map.forEach((value, key) => {\n      key = getTagKey(key, this.images);\n      rc.push({ key, value });\n    });\n    return rc;\n  }\n}\n\nexport class TagIdCounts extends TagIdMap<number> {\n  add(tagId: TagId): void {\n    // if this has a resource type then convert it to a string with an internal space (which a key can't have)\n    const key = getMapKey(tagId);\n    const count = super.get(key);\n    super.set(key, count ? count + 1 : 1);\n  }\n  read(): BareTagCount[] {\n    const rc: (Key & { value: number })[] = super.getKeyPairs();\n    return rc.map((o) => {\n      return { key: o.key, count: o.value };\n    });\n  }\n}\n\nexport class TagIdDiscussions extends TagIdMap<number[]> {\n  private readonly allTags: BareTag[];\n  private readonly allImages: Image[];\n  private readonly imageKeys: Map<number, string>;\n  private readonly imageKeyIds: Map<string, number>;\n  constructor(allImages: Image[], allTags: BareTag[]) {\n    super(allImages);\n    this.allTags = allTags;\n    this.allImages = allImages;\n    this.imageKeys = new Map<number, string>();\n    this.imageKeyIds = new Map<string, number>();\n    // if images are pre-loaded then pre-load the corresponding tagId\n    for (const image of allImages) {\n      const tagId: TagId = { id: image.id, resourceType: \"Image\" };\n      if (!this.addTagId(tagId)) {\n        throw new Error(\"duplicate image\");\n      }\n      const key = getTagText(image.name);\n      this.imageKeys.set(image.id, key);\n      this.imageKeyIds.set(key, image.id);\n    }\n  }\n  private addTagId(tagId: TagId): boolean {\n    const key = getMapKey(tagId);\n    if (super.has(key)) {\n      return false;\n    }\n    super.set(key, []);\n    return true;\n  }\n  addTag(tag: string): boolean {\n    const tagId: TagId = { tag };\n    return this.addTagId(tagId);\n  }\n  find(tag: string): TagId | undefined {\n    const id = this.imageKeyIds.get(tag);\n    const tagId: TagId = id ? { id, resourceType: \"Image\" } : { tag };\n    const key = getMapKey(tagId);\n    if (!super.has(key)) {\n      return undefined;\n    }\n    return tagId;\n  }\n  // called from postNewDiscussion which has already verified that this TagId can be found\n  addDiscussionId(tagId: TagId, discussionId: number) {\n    const key = getMapKey(tagId);\n    super.get(key)!.push(discussionId);\n  }\n  // called from getSiteMap which only wants tags (it sends images separately)\n  siteTagCounts(): SiteTagCount[] {\n    return this.allTags.map((tag: BareTag) => {\n      const { title, key, summary } = tag;\n      const count = super.get(getMapKey({ tag: key }))!.length;\n      return { title, key, summary, count };\n    });\n  }\n  // called from getAllTags which wants tags and images\n  tagCounts(): TagCount[] {\n    // same as siteTagCounts() except no title\n    return this.allTags\n      .map((tag: BareTag) => {\n        const { key, summary } = tag;\n        const count = super.get(getMapKey({ tag: key }))!.length;\n        return { key, summary, count };\n      })\n      .concat(\n        this.allImages.map((image) => {\n          const { summary, id } = image;\n          const tagId: TagId = { id, resourceType: \"Image\" };\n          const count = super.get(getMapKey(tagId))!.length;\n          const key = this.getKey(tagId).key;\n          return { key, summary, count };\n        })\n      );\n  }\n  // called from various places\n  // assumes the images exist but doesn't assume a tag exists\n  // assumes that any TagId is valid i.e. that corresponding image exists\n  getKey(tagId: TagId): Key {\n    const key = isTag(tagId) ? tagId.tag : this.imageKeys.get(tagId.id)!;\n    return { key };\n  }\n}\n\n// https://titlecaseconverter.com/rules/\nconst titleCase: string[] = [\n  \"at\",\n  \"by\",\n  \"in\",\n  \"of\",\n  \"on\",\n  \"up\",\n  \"to\",\n  \"but\",\n  \"for\",\n  \"off\",\n  \"out\",\n  \"via\",\n  \"for\",\n  \"and\",\n  \"nor\",\n  \"but\",\n  \"or\",\n  \"yet\",\n  \"so\",\n];\n\n// used when auto-adding a tag\nexport function simulateTitle(tag: string) {\n  const words: string[] = tag.split(\"-\");\n  for (let i = 0; i < words.length; ++i) {\n    const word = words[i];\n    if (!titleCase.includes(word)) {\n      words[i] = word.substring(0, 1).toLocaleUpperCase() + word.substring(1);\n    }\n  }\n  return words.join(\" \");\n}\n","import * as crypto from \"crypto\";\nimport { BareMessage, BareTag, BareTopic, BareUser, getTagText, StoredUser } from \"server-types\";\nimport { IdName, Post } from \"shared-lib\";\nimport { simulateTitle } from \"./tagIds\";\n\n/*\n  These are the types of data posted by users which may be stored on disk.\n  They're a \"discriminated union\" of types so they can be easily reloaded.\n\n  See also:\n  \n  - \"../shared/post\" which defines these types on the wire between client and server.\n  - \"./bare\" which defines the data on disk after it's aggregated into a collection.\n\n  They're constructed by adding server-side data to data that's posted by the client.\n*/\n\n// this defines the basic data that's contained in every action\n// most data types also have a server-side ID added\ninterface ActionT<TType extends string, TPosted> {\n  // the type of action (so this is a discriminated union)\n  type: TType;\n  // received from the client\n  posted: TPosted;\n  // added at the server\n  dateTime: string;\n  userId: number;\n}\n\n/*\n  NewTopic\n*/\n\nexport type NewTopic = ActionT<\"NewTopic\", Post.NewTopic>;\n\nexport function createNewTopic(posted: Post.NewTopic, dateTime: string, userId: number): NewTopic {\n  return { type: \"NewTopic\", posted, dateTime, userId };\n}\n\nexport function createStoredTopic(stored: BareTopic): NewTopic {\n  const summary = stored.summary ? stored.summary : \"\";\n  const markdown = stored.markdown ? stored.markdown : \"\";\n  const posted: Post.NewTopic = { title: stored.title, summary, markdown };\n  return {\n    type: \"NewTopic\",\n    posted,\n    dateTime: stored.dateTime,\n    userId: stored.userId,\n  };\n}\n\nexport function createNewTag(tag: string, dateTime: string, userId: number): NewTopic {\n  const posted: Post.NewTopic = {\n    title: simulateTitle(tag),\n    summary: \"\",\n    markdown: \"\",\n  };\n  return { type: \"NewTopic\", posted, dateTime, userId };\n}\n\nexport function extractNewTopic(action: NewTopic): BareTag {\n  const { dateTime, userId } = action;\n  const key = getTagText(action.posted.title);\n  return { ...action.posted, dateTime, userId, key };\n}\n\n/*\n  NewUser\n*/\n\nexport type NewUser = ActionT<\"NewUser\", Post.NewUser>;\n\nexport function createNewUser(posted: Post.NewUser, dateTime: string, userId: number): NewUser {\n  return { type: \"NewUser\", posted, dateTime, userId };\n}\n\nfunction md5(email: string): string {\n  return crypto.createHash(\"md5\").update(email).digest(\"hex\");\n}\n\nexport function extractNewUser(action: NewUser): { userId: number; user: BareUser } {\n  const { dateTime, userId } = action;\n  const { name, email } = action.posted;\n  // https://en.gravatar.com/site/implement/hash/\n  // https://stackoverflow.com/questions/5878682/node-js-hash-string\n  const gravatarHash = md5(email.trim().toLocaleLowerCase());\n  const user: BareUser = {\n    name,\n    email,\n    dateTime,\n    gravatarHash,\n    profile: {},\n    favourites: [],\n  };\n  return { userId, user };\n}\n\n/*\n  EditUserProfile\n*/\n\nexport type EditUserProfile = ActionT<\"EditUserProfile\", Post.EditUserProfile>;\n\nexport function createEditUserProfile(posted: Post.EditUserProfile, dateTime: string, userId: number): EditUserProfile {\n  return { type: \"EditUserProfile\", posted, dateTime, userId };\n}\n\nexport function createStoredUserProfile(stored: StoredUser, userId: number): EditUserProfile {\n  const location = stored.profile.location ? stored.profile.location : \"\";\n  const aboutMe = stored.profile.aboutMe ? stored.profile.aboutMe : \"\";\n  const posted: Post.EditUserProfile = {\n    name: stored.name,\n    email: stored.email,\n    location,\n    aboutMe,\n  };\n  return { type: \"EditUserProfile\", posted, dateTime: stored.dateTime, userId };\n}\n\nexport function extractEditUserProfile(action: EditUserProfile): { userId: number; posted: Post.EditUserProfile } {\n  const { userId, posted } = action;\n  return { userId, posted };\n}\n\n/*\n  NewDiscussion\n*/\n\nexport type NewDiscussion = ActionT<\"NewDiscussion\", Post.NewDiscussion> & {\n  discussionId: number;\n  messageId: number;\n};\n\nexport function createNewDiscussion(\n  posted: Post.NewDiscussion,\n  dateTime: string,\n  userId: number,\n  // created by the server database\n  discussionId: number,\n  // created by the server database\n  messageId: number\n): NewDiscussion {\n  return {\n    type: \"NewDiscussion\",\n    posted,\n    dateTime,\n    userId,\n    discussionId,\n    messageId,\n  };\n}\n\nexport function extractNewDiscussion(action: NewDiscussion): { idName: IdName; tags: string[]; first: BareMessage } {\n  const { dateTime, userId, discussionId, messageId } = action;\n  const { title, markdown, tags } = action.posted;\n  const first: BareMessage = { dateTime, userId, messageId, markdown };\n  const idName: IdName = { id: discussionId, name: title };\n  return { idName, tags, first };\n}\n\n/*\n  NewMessage\n*/\n\nexport type NewMessage = ActionT<\"NewMessage\", Post.NewMessage> & {\n  messageId: number;\n  discussionId: number;\n};\n\nexport function createNewMessage(\n  posted: Post.NewMessage,\n  dateTime: string,\n  userId: number,\n  // carried in the URL\n  discussionId: number,\n  // created by the server database\n  messageId: number\n): NewMessage {\n  return {\n    type: \"NewMessage\",\n    posted,\n    dateTime,\n    userId,\n    messageId,\n    discussionId,\n  };\n}\n\nexport function extractNewMessage(action: NewMessage): { discussionId: number; message: BareMessage } {\n  const { dateTime, userId, discussionId, messageId } = action;\n  const { markdown } = action.posted;\n  const message: BareMessage = { dateTime, userId, messageId, markdown };\n  return { discussionId, message };\n}\n\n/*\n  EditTagInfo\n*/\n\nexport type EditTagInfo = ActionT<\"EditTagInfo\", Post.EditTagInfo> & {\n  tag: string;\n};\n\nexport function createEditTagInfo(\n  posted: Post.EditTagInfo,\n  dateTime: string,\n  userId: number,\n  // carried in the URL\n  tag: string\n): EditTagInfo {\n  return { type: \"EditTagInfo\", posted, dateTime, userId, tag };\n}\n\nexport function extractEditTagInfo(action: EditTagInfo): { tag: string; posted: Post.EditTagInfo } {\n  const { tag, posted } = action;\n  return { tag, posted };\n}\n\n/*\n  Any\n*/\n\nexport type Any = NewTopic | NewUser | EditUserProfile | NewMessage | NewDiscussion | EditTagInfo;\n\nexport function getLoadPriority(action: Any): number {\n  switch (action.type) {\n    case \"NewUser\":\n      return 1;\n    case \"EditUserProfile\":\n      return 2;\n    case \"NewTopic\":\n      return 3;\n    case \"NewDiscussion\":\n      return 4;\n    case \"NewMessage\":\n      return 5;\n    case \"EditTagInfo\":\n      return 6;\n    default:\n      throw new Error(`Unhandled type`);\n  }\n}\n","export const configServer = {\n  autoAddTag: false,\n};\n","/*\n  This class tracks which is the next ID value to be assigned a new resource.\n  Beware that it's difficult to do this if there are two server instances,\n  then again the current implementation keeps the whole database in local cache.\n*/\n\nclass Current {\n  private value: number;\n  constructor() {\n    this.value = 0;\n  }\n  next() {\n    return ++this.value;\n  }\n}\n\nexport class CurrentIds {\n  userId: Current;\n  discussionId: Current;\n  messageId: Current;\n  constructor() {\n    this.userId = new Current();\n    this.discussionId = new Current();\n    this.messageId = new Current();\n  }\n}\n","import { config } from \"shared-lib\";\n\nexport function getExerpt(markdown: string): string {\n  const words: string[] = markdown.split(\" \");\n  let rc: string | undefined;\n  for (const word of words) {\n    if (!word.length) {\n      continue;\n    }\n    if (rc && rc.length + word.length > config.exerptlength) {\n      rc += \" ...\";\n      break;\n    }\n    rc = rc ? rc + \" \" + word : word;\n  }\n  return rc ? rc : \"(no message)\";\n}\n","import { BareDiscussion, BareMessage, BareTopic, StoredUser, TagId } from \"server-types\";\nimport { Key, Post } from \"shared-lib\";\nimport * as Action from \"./actions\";\n\n/*\n  This module loads data from modules in the server-data package.\n  It cannot use the \"path\" and \"fs\" (these aren't supported in the browser)\n  and must instead use \"import\" to import modules using string-literal names.\n*/\n\n/*\n  private helper function to load data from json\n*/\n\ntype Alternate = (wanted: any, found: any) => boolean;\n\nfunction assertTypeT<T>(loaded: any, wanted: T, optional?: Set<string>, alternate?: Alternate): T {\n  function assertType(found: any, wanted: any, keyNames?: string): void {\n    if (typeof wanted !== typeof found) {\n      throw new Error(`assertType expected ${typeof wanted} but found ${typeof found}`);\n    }\n    switch (typeof wanted) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        return; // primitive value type -- done checking\n      case \"object\":\n        break; // more to check\n      case \"undefined\":\n      case \"symbol\":\n      case \"function\":\n      default:\n        throw new Error(`assertType does not support ${typeof wanted}`);\n    }\n    if (Array.isArray(wanted)) {\n      if (!Array.isArray(found)) {\n        throw new Error(`assertType expected an array but found ${found}`);\n      }\n      if (wanted.length === 0) {\n        // throw new Error(`assertType can't deduce the expected type from a zero-length array`);\n      } else if (wanted.length === 1) {\n        // assume we want a homogenous array with all elements the same type\n        for (const element of found) {\n          assertType(element, wanted[0]);\n        }\n      } else {\n        // assume we want a tuple\n        if (found.length !== wanted.length) {\n          throw new Error(`assertType expected tuple length ${wanted.length} found ${found.length}`);\n        }\n        for (let i = 0; i < wanted.length; ++i) {\n          assertType(found[i], wanted[i]);\n        }\n      }\n      return;\n    }\n    if (alternate && alternate(wanted, found)) {\n      // matches the alternate version\n      return;\n    }\n    for (const key in wanted) {\n      const expected = keyNames ? keyNames + \".\" + key : key;\n      if (typeof found[key] === \"undefined\") {\n        if (!optional || !optional.has(expected)) {\n          throw new Error(`assertType expected ${expected} in ${JSON.stringify(wanted)} is ${JSON.stringify(found)}`);\n        }\n      } else {\n        assertType(found[key], wanted[key], expected);\n      }\n    }\n  }\n\n  assertType(loaded, wanted);\n  return loaded as T;\n}\n\n/*\n  `loadXxx(): Xxx` functions\n*/\n\nfunction loadUsers(): Map<number, StoredUser> {\n  const found = require(\"server-data/json/users.json\");\n  const sample: [number, StoredUser] = [\n    1,\n    {\n      name: \"ChrisW\",\n      email: \"cwellsx@gmail.com\",\n      dateTime: \"Thu, 03 Jan 2019 22:35:05 GMT\",\n      profile: {\n        location: \"Normandy\",\n        aboutMe: \"I wrote this!\\n\\nFurther details are to be supplied ...\",\n      },\n      favourites: [],\n    },\n  ];\n  const optional: Set<string> = new Set<string>([\"profile.aboutMe\", \"profile.location\"]);\n  const loaded: [number, StoredUser][] = assertTypeT(found, [sample], optional);\n  return new Map<number, StoredUser>(loaded);\n}\n\nexport { loadImages } from \"server-data\";\n\nfunction loadTags(): BareTopic[] {\n  const found = require(\"server-data/json/tags.json\");\n  const sample: BareTopic = {\n    title: \"foo\",\n    userId: 0,\n    dateTime: \"Thu, 03 Jan 2019 22:35:05 GMT\",\n  };\n  const loaded: BareTopic[] = assertTypeT(found, [sample]);\n  return loaded;\n}\n\nfunction loadDiscussions(): Map<number, BareDiscussion> {\n  const found = require(\"server-data/json/discussions.json\");\n  const sampleMessage: BareMessage = {\n    userId: 7,\n    markdown: \"Maecenas dignissim et ante sit amet fermentum.\",\n    dateTime: \"Thu, 03 Jan 2019 22:35:05 GMT\",\n    messageId: 1,\n  };\n  const sample: BareDiscussion = {\n    id: 1,\n    name: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit?\",\n    tags: [{ tag: \"foo\" }],\n    first: sampleMessage,\n    messages: [sampleMessage],\n  };\n  const alternate: Alternate = (wanted: any, found: any) => {\n    if (wanted.tag === undefined) {\n      // not the wanted we're trying to match\n      return false;\n    }\n    return found.id !== undefined && found.resourceType !== undefined;\n  };\n  const loaded: BareDiscussion[] = assertTypeT(found, [sample], undefined, alternate);\n  return new Map<number, BareDiscussion>(loaded.map((x) => [x.id, x]));\n}\n\nexport type KeyFromTagId = (tagId: TagId) => Key;\n\nexport function loadActions(getKeyFromTagId: KeyFromTagId): Action.Any[] {\n  const rc: Action.Any[] = [];\n\n  const tags: BareTopic[] = loadTags();\n  rc.push(...tags.map(Action.createStoredTopic));\n\n  const users: Map<number, StoredUser> = loadUsers();\n  function userToNewUser(userId: number, user: StoredUser): Action.NewUser {\n    const { name, email, dateTime } = user;\n    const posted: Post.NewUser = { name, email };\n    return Action.createNewUser(posted, dateTime, userId);\n  }\n  function userToNewUserProfile(userId: number, user: StoredUser): Action.EditUserProfile {\n    return Action.createStoredUserProfile(user, userId);\n  }\n  users.forEach((user: StoredUser, userId: number) => {\n    rc.push(userToNewUser(userId, user));\n    rc.push(userToNewUserProfile(userId, user));\n  });\n\n  const discussions: Map<number, BareDiscussion> = loadDiscussions();\n  function discussionToNewDiscussion(\n    discussionId: number,\n    discussion: BareDiscussion,\n    first: BareMessage\n  ): Action.NewDiscussion {\n    const title: string = discussion.name;\n    const tags: Key[] = discussion.tags.map(getKeyFromTagId);\n    const { markdown, messageId, dateTime, userId } = first;\n    const posted: Post.NewDiscussion = {\n      title,\n      tags: tags.map((tag) => tag.key),\n      markdown,\n    };\n    return Action.createNewDiscussion(posted, dateTime, userId, discussionId, messageId);\n  }\n  function messageToNewMessage(discussionId: number, message: BareMessage): Action.NewMessage {\n    const { markdown, messageId, dateTime, userId } = message;\n    const posted: Post.NewMessage = { markdown };\n    return Action.createNewMessage(posted, dateTime, userId, discussionId, messageId);\n  }\n  discussions.forEach((discussion: BareDiscussion, discussionId: number) => {\n    const { first, messages } = discussion;\n    rc.push(discussionToNewDiscussion(discussionId, discussion, first));\n    rc.push(...messages.map((message) => messageToNewMessage(discussionId, message)));\n  });\n\n  const sorted: [Action.Any, number][] = rc.map((action) => [action, new Date(action.dateTime).getTime()]);\n  sorted.sort((x, y) => {\n    if (x[1] !== y[1]) {\n      return x[1] - y[1];\n    }\n    return Action.getLoadPriority(x[0]) - Action.getLoadPriority(y[0]);\n  });\n\n  return sorted.map((pair) => pair[0]);\n}\n","import { BareDiscussion, BareMessage, BareTag, BareTagCount, BareUser, isTag, TagId } from \"server-types\";\nimport { Data, Url, Wire } from \"shared-lib\";\nimport * as Action from \"./actions\";\nimport { configServer } from \"./configServer\";\nimport { CurrentIds } from \"./currentIds\";\nimport { getExerpt } from \"./exerpt\";\nimport { KeyFromTagId, loadActions, loadImages } from \"./loader\";\nimport { TagIdCounts, TagIdDiscussions } from \"./tagIds\";\n\n/*\n  This is an in-RAM database\n  or its API wraps an external database.\n*/\n\n/*\n  Data -- not exported\n*/\n\nconst allImages: Data.Image[] = loadImages();\n\nconst allUsers: Map<number, BareUser> = new Map<number, BareUser>();\n\nconst allTags: BareTag[] = [];\n\nconst allDiscussions: Map<number, BareDiscussion> = new Map<number, BareDiscussion>();\n\n// these are both an array of [discussionId, time]\nconst sortedDiscussionsNewest: [number, number][] = [];\nconst sortedDiscussionsActive: [number, number][] = [];\n\n// map userId to sorted array of messages\nconst userMessages: Map<number, BareMessage[]> = new Map<number, BareMessage[]>();\n// map messageId to discussionId\nconst messageDiscussions: Map<number, number> = new Map<number, number>();\n\nconst userTags: Map<number, TagIdCounts> = new Map<number, TagIdCounts>();\n\n// map key to array of discussionId\nconst tagDiscussions: TagIdDiscussions = new TagIdDiscussions(allImages, allTags);\n\nconst currentIds: CurrentIds = new CurrentIds();\n\n/*\n  helper functions\n*/\n\nconst getKeyFromTagId: KeyFromTagId = (tagId: TagId) => tagDiscussions.getKey(tagId);\n\nexport function messageIdNext(): number {\n  return currentIds.messageId.next();\n}\nexport function discussionIdNext(): number {\n  return currentIds.discussionId.next();\n}\n\nfunction getMessageTime(message: BareMessage): number {\n  return new Date(message.dateTime).getTime();\n}\n\nfunction getUserSummaryFrom(userId: number, data: BareUser): Data.UserSummary {\n  return {\n    id: userId,\n    name: data.name,\n    gravatarHash: data.gravatarHash,\n    location: data.profile.location,\n  };\n}\n\nfunction getUserSummary(userId: number): Data.UserSummary {\n  return getUserSummaryFrom(userId, allUsers.get(userId)!);\n}\n\nfunction getMessageStarted(discussion: BareDiscussion): BareMessage {\n  return discussion.first;\n}\n\nfunction getMessageEnded(discussion: BareDiscussion): BareMessage {\n  return discussion.messages.length ? discussion.messages[discussion.messages.length - 1] : discussion.first;\n}\n\ntype GetMessage = (x: BareDiscussion) => BareMessage;\n\nfunction getDiscussionTime(discussion: BareDiscussion, getMessage: GetMessage): [number, number] {\n  return [discussion.id, getMessageTime(getMessage(discussion))];\n}\n\nfunction wireSummaries(discussionMessages: [BareDiscussion, BareMessage][]): Wire.WireSummaries {\n  const rc: Wire.WireSummaries = {\n    users: [],\n    discussions: [],\n  };\n  const userIds: Set<number> = new Set<number>();\n  discussionMessages.forEach((discussionMessage) => {\n    const [discussion, message] = discussionMessage;\n    const { id, name, tags } = discussion;\n    userIds.add(message.userId);\n    rc.discussions.push({\n      id,\n      name,\n      tags: tags.map(getKeyFromTagId),\n      userId: message.userId,\n      messageExerpt: getExerpt(message.markdown),\n      dateTime: message.dateTime,\n      nAnswers: discussion.messages.length,\n    });\n  });\n  userIds.forEach((userId) => rc.users.push(getUserSummary(userId)));\n  return rc;\n}\n\nfunction wireDiscussion(\n  discussion: BareDiscussion,\n  messages: BareMessage[],\n  range: Data.DiscussionRange\n): Wire.WireDiscussion {\n  const { id, name, tags, first } = discussion;\n  const rc: Wire.WireDiscussion = {\n    users: [],\n    id,\n    name,\n    tags: tags.map(getKeyFromTagId),\n    first,\n    range,\n    messages,\n  };\n  const userIds: Set<number> = new Set<number>();\n  userIds.add(discussion.first.userId);\n  messages.forEach((message) => userIds.add(message.userId));\n  userIds.add(rc.first.userId);\n  userIds.forEach((userId) => rc.users.push(getUserSummary(userId)));\n  return rc;\n}\n\nfunction getRange<TSort, TElement>(\n  nTotal: number,\n  sort: TSort,\n  pageSize: number,\n  pageNumber: number,\n  array: TElement[]\n): {\n  range: { nTotal: number; sort: TSort; pageSize: number; pageNumber: number };\n  selected: TElement[];\n} {\n  const length = pageSize;\n  const start = (pageNumber - 1) * pageSize;\n  const selected = array.slice(start, start + length);\n  return { range: { nTotal, sort, pageSize, pageNumber }, selected };\n}\n\n/*\n  GET functions\n*/\n\nexport function getSiteMap(): Data.SiteMap {\n  return {\n    images: allImages,\n    tags: tagDiscussions.siteTagCounts(),\n  };\n}\n\nexport function getImage(id: number): Data.Image | undefined {\n  return allImages.find((image) => image.id === id);\n}\n\nexport function getUserSummaries(): Data.UserSummary[] {\n  const rc: Data.UserSummary[] = [];\n  allUsers.forEach((data, userId) => rc.push(getUserSummaryFrom(userId, data)));\n  return rc.sort((x, y) => x.name.localeCompare(y.name));\n}\n\nexport function getUser(userId: number, userIdLogin?: number): Data.User | undefined {\n  const data: BareUser | undefined = allUsers.get(userId);\n  if (!data) {\n    return undefined;\n  }\n  const preferences: Data.UserPreferences | undefined =\n    userId !== userIdLogin\n      ? undefined\n      : {\n          email: data.email,\n        };\n  const { id, name, gravatarHash, location } = getUserSummaryFrom(userId, data);\n  return {\n    id,\n    name,\n    location,\n    gravatarHash,\n    aboutMe: data.profile.aboutMe,\n    preferences: preferences,\n  };\n}\n\nexport function getUserActivity(options: Url.UserActivityOptions): Wire.WireUserActivity | undefined {\n  // same kind of processing as some combination of getDiscussions and getDiscussion\n  // like getDiscussion, we don't have two pre-sorted arrays to choose from, so may have to select from a reversed copy\n  const userId = options.user.id;\n  const messages: BareMessage[] = userMessages.get(userId)!;\n  const sort: Url.ActivitySort = options.sort ? options.sort : \"Oldest\";\n  const sortedMessages = sort === \"Oldest\" ? messages : messages.slice().reverse();\n  // like getDiscussions\n  const { range, selected } = getRange(messages.length, sort, 30, options.page ? options.page : 1, sortedMessages);\n  const discussionMessages: [BareDiscussion, BareMessage][] = selected.map((message) => {\n    const discussionId: number = messageDiscussions.get(message.messageId)!;\n    const discussion: BareDiscussion = allDiscussions.get(discussionId)!;\n    return [discussion, message];\n  });\n  const { users, discussions } = wireSummaries(discussionMessages);\n  const tagCounts: BareTagCount[] = userTags.get(userId)!.read();\n  return { users, discussions, range, tagCounts };\n}\n\nexport function getDiscussions(options: Url.DiscussionsOptions): Wire.WireDiscussions {\n  const sort: Url.DiscussionsSort = options.sort ? options.sort : \"Active\";\n  const active = sort === \"Active\";\n  // two collections of pre-sorted discussions (using different sort-orders) to choose from\n  const sortedDiscussions: [number, number][] = active ? sortedDiscussionsActive : sortedDiscussionsNewest;\n  const tag = options.tag;\n  const filteredDiscussions = !tag\n    ? sortedDiscussions\n    : sortedDiscussions.filter((pair) => {\n        const discussionId = pair[0];\n        const discussion = allDiscussions.get(discussionId)!;\n        for (const tagId of discussion.tags) {\n          const found: Data.Key = getKeyFromTagId(tagId);\n          if (found.key === tag.key) {\n            return true;\n          }\n        }\n        return false;\n      });\n  const getMessage: GetMessage = active ? getMessageEnded : getMessageStarted;\n  const { range, selected } = getRange(\n    filteredDiscussions.length,\n    sort,\n    options.pagesize ? options.pagesize : 50,\n    options.page ? options.page : 1,\n    filteredDiscussions\n  );\n  const discussionRange = { ...range, tag };\n  const selectedDiscussions: BareDiscussion[] = selected.map((pair) => allDiscussions.get(pair[0])!);\n  const discussionMessages: [BareDiscussion, BareMessage][] = selectedDiscussions.map((discussion) => [\n    discussion,\n    getMessage(discussion),\n  ]);\n  const { users, discussions } = wireSummaries(discussionMessages);\n  return { users, discussions, range: discussionRange };\n}\n\nexport function getDiscussion(options: Url.DiscussionOptions): Wire.WireDiscussion | undefined {\n  const discussion = allDiscussions.get(options.discussion.id);\n  if (!discussion) {\n    return undefined;\n  }\n  const sort: Url.DiscussionSort = options.sort ? options.sort : \"Oldest\";\n  const sortedMessages = sort === \"Oldest\" ? discussion.messages : discussion.messages.slice().reverse();\n  const { range, selected } = getRange(\n    discussion.messages.length,\n    sort,\n    30,\n    options.page ? options.page : 1,\n    sortedMessages\n  );\n  return wireDiscussion(discussion, selected, range);\n}\n\nexport function getAllTags(): Data.TagCount[] {\n  return tagDiscussions.tagCounts();\n}\n\nexport function getTags(options: Url.TagsOptions, searchInput?: string): Data.Tags {\n  const tags: Data.TagCount[] = getAllTags().filter((tagCount) =>\n    !searchInput ? true : tagCount.key.includes(searchInput)\n  );\n  const sort: Url.TagsSort = options.sort ? options.sort : \"Popular\";\n  if (options.sort === \"Name\") {\n    tags.sort((x, y) => x.key.localeCompare(y.key));\n  } else {\n    tags.sort((x, y) => {\n      return x.count === y.count ? x.key.localeCompare(y.key) : y.count - x.count;\n    });\n  }\n  const { range, selected } = getRange(tags.length, sort, options.pagesize, options.page ? options.page : 1, tags);\n  return { range, tagCounts: selected };\n}\n\nexport function getTag(tag: Data.Key): Data.TagInfo | undefined {\n  const tagId: TagId | undefined = tagDiscussions.find(tag.key);\n  if (!tagId) {\n    // should return 404 Not Found\n    return undefined;\n  }\n  if (isTag(tagId)) {\n    // ideally allags would be a map instead of an array, but in practice we don't have so many tags that it matters\n    // also we're targetting down-level JS so it's inconvenient to iterate map values\n    const found: BareTag = allTags.find((x) => x.key === tagId.tag)!;\n    const { title, summary, markdown } = found;\n    return { title, summary, markdown, key: tag.key };\n  } else {\n    if (tagId.resourceType !== \"Image\") {\n      // should return 500 Internal Server Error\n      return undefined;\n    }\n    const image: Data.Image = allImages.find((x) => x.id === tagId.id)!;\n    const { name, summary, markdown } = image;\n    return { title: name, summary, markdown, key: tag.key };\n  }\n}\n\n/*\n  POST functions\n*/\n\nfunction postNewUser(action: Action.NewUser): Data.IdName {\n  const { userId, user } = Action.extractNewUser(action);\n  allUsers.set(userId, user);\n  userMessages.set(userId, []);\n  userTags.set(userId, new TagIdCounts(allImages));\n  return { id: userId, name: user.name };\n}\n\nfunction postEditUserProfile(action: Action.EditUserProfile): Data.IdName {\n  const { userId, posted } = Action.extractEditUserProfile(action);\n  const user = allUsers.get(userId)!;\n  user.name = posted.name;\n  user.email = posted.email;\n  user.profile.location = posted.location;\n  user.profile.aboutMe = posted.aboutMe;\n  return { id: userId, name: user.name };\n}\n\nfunction postNewTopic(action: Action.NewTopic): Data.Key {\n  const tag: BareTag = Action.extractNewTopic(action);\n  if (!tagDiscussions.addTag(tag.key)) {\n    // FIXME\n    console.error(\"!postNewTopic\");\n  }\n  allTags.push(tag);\n  return { key: tag.key };\n}\n\nfunction postNewDiscussion(action: Action.NewDiscussion): Data.IdName {\n  const { idName, tags, first: message } = Action.extractNewDiscussion(action);\n  const discussionId = idName.id;\n  // ensure that the tags exist and/or can be created\n  const tagIds: TagId[] = [];\n  for (const tag of tags) {\n    let tagId = tagDiscussions.find(tag);\n    if (!tagId) {\n      if (!configServer.autoAddTag) {\n        // FIXME\n\n        console.error(`postNewDiscussion can't auto-add ${tag}`);\n        continue;\n      }\n      // auto-create it now\n      const newTopic: Action.NewTopic = Action.createNewTag(tag, action.dateTime, action.userId);\n      handleAction(newTopic);\n      // try again to find it\n      tagId = tagDiscussions.find(tag);\n      if (!tagId) {\n        // FIXME\n\n        continue;\n      }\n    }\n    tagIds.push(tagId);\n  }\n  // the discussion is associated with tags\n  tagIds.forEach((tagId) => tagDiscussions.addDiscussionId(tagId, discussionId));\n  // new discussion\n  const discussion: BareDiscussion = {\n    id: idName.id,\n    name: idName.name,\n    tags: tagIds,\n    first: message,\n    messages: [],\n  };\n  allDiscussions.set(discussionId, discussion);\n  const active = getDiscussionTime(discussion, getMessageStarted);\n  sortedDiscussionsNewest.unshift(active);\n  sortedDiscussionsActive.unshift(active);\n  // the user owns this message\n  userMessages.get(message.userId)!.push(message);\n  // the message is associated with this discussion\n  messageDiscussions.set(message.messageId, discussionId);\n  return idName;\n}\n\nfunction postNewMessage(action: Action.NewMessage): Data.Message {\n  const { discussionId, message } = Action.extractNewMessage(action);\n  const discussion: BareDiscussion = allDiscussions.get(discussionId)!;\n  // add to the discussion\n  discussion.messages.push(message);\n  // this discussion is now the most active\n  function activate(active: [number, number]) {\n    // search backwards because it's likely to be more towards the end\n    for (let i = sortedDiscussionsActive.length - 1; i >= 0; --i) {\n      if (sortedDiscussionsActive[i][0] === active[0]) {\n        sortedDiscussionsActive.splice(i, 1);\n        sortedDiscussionsActive.unshift(active);\n        return;\n      }\n    }\n    console.log(\"error active discussion not found\");\n  }\n  activate(getDiscussionTime(discussion, getMessageEnded));\n  // the user owns this message\n  userMessages.get(message.userId)!.push(message);\n  discussion.tags.forEach((tagId) => userTags.get(message.userId)!.add(tagId));\n  // the message is associated with this discussion\n  messageDiscussions.set(message.messageId, discussionId);\n  return {\n    userSummary: getUserSummary(message.userId),\n    markdown: message.markdown,\n    dateTime: message.dateTime,\n  };\n}\n\nfunction postEditTagInfo(action: Action.EditTagInfo): Data.Key | undefined {\n  // this logic is similar to getTag()\n  const { tag, posted } = Action.extractEditTagInfo(action);\n  const { summary, markdown } = posted;\n  const tagId: TagId | undefined = tagDiscussions.find(tag);\n  if (!tagId) {\n    // should return 404 Not Found\n    return undefined;\n  }\n  if (isTag(tagId)) {\n    // ideally allags would be a map instead of an array, but in practice we don't have so many tags that it matters\n    // also we're targetting down-level JS so it's inconvenient to iterate map values\n    const found: BareTag = allTags.find((x) => x.key === tagId.tag)!;\n    found.summary = summary.length ? summary : undefined;\n    found.markdown = markdown.length ? markdown : undefined;\n  } else {\n    if (tagId.resourceType !== \"Image\") {\n      // should return 500 Internal Server Error\n      return undefined;\n    }\n    const image: Data.Image = allImages.find((x) => x.id === tagId.id)!;\n    image.summary = summary;\n    image.markdown = markdown.length ? markdown : undefined;\n  }\n  return { key: tag };\n}\n\nexport function handleAction(action: Action.Any) {\n  switch (action.type) {\n    case \"NewUser\":\n      return postNewUser(action);\n    case \"EditUserProfile\":\n      return postEditUserProfile(action);\n    case \"NewTopic\":\n      return postNewTopic(action);\n    case \"NewDiscussion\":\n      return postNewDiscussion(action);\n    case \"NewMessage\":\n      return postNewMessage(action);\n    case \"EditTagInfo\":\n      return postEditTagInfo(action);\n    default:\n      return { error: \"Unexpected post type\" };\n  }\n}\n\n/*\n  Loader\n*/\n\nfunction onLoad(): void {\n  // images are pre-loaded separately; add the corresponding tagIds\n  const actions: Action.Any[] = loadActions(getKeyFromTagId);\n  function assertId(what: string, actual: number, expected: number, action: Action.Any) {\n    if (actual !== expected) {\n      const first: string = JSON.stringify({ actual, expected }, null, 2);\n      const second: string = JSON.stringify(action, null, 2);\n      console.error(`onLoad assert ${what}Id ${first} ${second}`);\n    }\n  }\n  actions.forEach((action) => {\n    // assert that the embedded IDs are in the expected sequence\n    switch (action.type) {\n      case \"NewUser\":\n        assertId(\"user\", action.userId, currentIds.userId.next(), action);\n        break;\n      case \"NewDiscussion\":\n        assertId(\"discussion\", action.discussionId, currentIds.discussionId.next(), action);\n        assertId(\"message\", action.messageId, currentIds.messageId.next(), action);\n        break;\n      case \"NewMessage\":\n        assertId(\"message\", action.messageId, currentIds.messageId.next(), action);\n        break;\n      default:\n        break;\n    }\n    // delegate to the action handler (to replay what happened when the action originally occured)\n    handleAction(action);\n  });\n}\nonLoad();\n","/* Do not edit -- this source fle is created programmatically by /prebuild-data/src/readImages.ts */\nimport { Data } from \"shared-lib\";\nexport function loadImages(): Data.Image[] {\n  return [];\n}","import { Url } from \"shared-lib\";\n\n/*\n  In future, add code to load old state from disk and to save new state to disk.\n\n  For now, when the server is runnning inside the browser as a demo, the session state is volatile --\n  i.e. it's written here, but lost if the React application is reloaded.\n*/\n\ninterface SessionState {\n  discussions?: {\n    sort?: Url.DiscussionsSort;\n    pagesize?: Url.PageSize;\n  };\n  discussion?: {\n    sort?: Url.DiscussionSort;\n  };\n}\n\nconst sessionData: Map<number, SessionState> = new Map<number, SessionState>();\n\nfunction getOrSet(userId: number): SessionState {\n  let sessionState = sessionData.get(userId);\n  if (!sessionState) {\n    sessionState = {};\n    sessionData.set(userId, sessionState);\n  }\n  return sessionState;\n}\n\nexport function getSetDiscussionsOptions(userId: number, options: Url.DiscussionsOptions) {\n  const sessionState = getOrSet(userId);\n  // write any new explicitly-set options to the session state\n  if (options.sort || options.pagesize) {\n    let stored = sessionState.discussions;\n    if (!stored) {\n      stored = {};\n      sessionState.discussions = stored;\n    }\n    if (options.sort) {\n      stored.sort = options.sort;\n    }\n    if (options.pagesize) {\n      stored.pagesize = options.pagesize;\n    }\n  }\n  // get any old options from the session state\n  const old = sessionState.discussions;\n  if (old) {\n    if (old.sort) {\n      options.sort = old.sort;\n    }\n    if (old.pagesize) {\n      options.pagesize = old.pagesize;\n    }\n  }\n}\n\nexport function getSetDiscussionOptions(userId: number, options: Url.DiscussionOptions) {\n  const sessionState = getOrSet(userId);\n  // write any new explicitly-set options to the session state\n  if (options.sort) {\n    let stored = sessionState.discussion;\n    if (!stored) {\n      stored = {};\n      sessionState.discussion = stored;\n    }\n    if (options.sort) {\n      stored.sort = options.sort;\n    }\n  }\n  // get any old options from the session state\n  const old = sessionState.discussion;\n  if (old) {\n    if (old.sort) {\n      options.sort = old.sort;\n    }\n  }\n}\n","import { Post, SearchInput, Url, UserSummary } from \"shared-lib\";\nimport * as Action from \"./actions\";\nimport * as DB from \"./database\";\nimport * as Session from \"./session\";\n\n/*\n  This unwraps and dispatches data received from the client.\n\n  It should do this more carefully than it does currently,\n  using typeguards which assert the existence of every element of the received data,\n  and/or it should be wrapped in try/catch handlers,\n  e.g. in case malformed data is received from a corrupt client.\n*/\n\n// you could temporarily change this to enable logging, for debugging\nconst isLogging = true;\n\nexport function routeOnGet(url: string, userIdLogin: number): object | undefined {\n  if (isLogging) {\n    console.log(`server routeOnGet ${url}`);\n  }\n  // parse the URL\n  const location: Url.Location = Url.getLocation(url);\n  const resourceType = Url.getResourceType(location);\n  if (Url.isParserError(resourceType)) {\n    // should return 400 Bad Request\n    return undefined;\n  }\n\n  switch (resourceType) {\n    case \"SiteMap\":\n      return DB.getSiteMap();\n\n    // case \"Login\":\n    //   return DB.getSiteMap();\n\n    case \"Image\": {\n      const image = Url.isImage(location);\n      if (Url.isParserError(image)) {\n        // should return 400 Bad Request\n        return undefined;\n      }\n      return DB.getImage(image.id);\n    }\n\n    case \"User\": {\n      if (Url.isUsers(location)) {\n        return DB.getUserSummaries();\n      }\n\n      const userOptions = Url.isUserOptions(location);\n      if (Url.isParserError(userOptions)) {\n        // should return 404 Not Found\n        return undefined;\n      }\n      const { user, userTabType } = userOptions;\n      switch (userTabType) {\n        case \"Profile\":\n        case \"EditSettings\":\n        case undefined:\n          return DB.getUser(user.id, userIdLogin);\n        case \"Activity\":\n          // the UserActivityOptions also carries DiscussionsOptions\n          const userActivity = Url.isUserActivityOptions(location);\n          if (Url.isParserError(userActivity)) {\n            // should return 400 Bad Request\n            return undefined;\n          }\n          return DB.getUserActivity(userActivity);\n        default:\n          // should return 500 Internal Server Error\n          return undefined;\n      }\n    }\n\n    case \"Discussion\": {\n      {\n        const options = Url.isDiscussionsOptions(location);\n        if (!Url.isParserError(options)) {\n          Session.getSetDiscussionsOptions(userIdLogin, options);\n          return DB.getDiscussions(options);\n        }\n        // else maybe a specific discussion\n      }\n\n      {\n        const options = Url.isDiscussionOptions(location);\n        if (!Url.isParserError(options)) {\n          Session.getSetDiscussionOptions(userIdLogin, options);\n          const discussion = DB.getDiscussion(options);\n          if (!discussion) {\n            // should return 404 Not Found\n            return undefined;\n          }\n          return discussion;\n        }\n      }\n\n      // should return 400 Bad Request\n      return undefined;\n    }\n\n    case \"Tag\": {\n      if (Url.isAllTags(location)) {\n        return DB.getAllTags();\n      }\n      const options = Url.isTagsOptions(location);\n      if (!Url.isParserError(options)) {\n        return DB.getTags(options);\n      }\n      const key = Url.isTagKey(location);\n      if (!Url.isParserError(key)) {\n        return DB.getTag(key);\n      }\n      // should return 400 Bad Request\n      return undefined;\n    }\n\n    default:\n      return undefined;\n  }\n}\n\n// this is a mock function to be improved\nexport function loginUser(): UserSummary {\n  const { id, name, gravatarHash, location } = DB.getUser(1, 1)!;\n  return { id, name, gravatarHash, location };\n}\n\nexport function routeOnPost(url: string, userId: number, json: any): object | undefined {\n  if (isLogging) {\n    console.log(`server routeOnPost ${url} -- ${JSON.stringify(json, undefined, 2)}`);\n  }\n  // parse the URL\n  const location: Url.Location = Url.getLocation(url);\n  const resourceType = Url.getResourceType(location);\n  if (Url.isParserError(resourceType)) {\n    // should return 400 Bad Request\n    return undefined;\n  }\n\n  const dateTime: string = new Date().toUTCString();\n\n  // convert from resource: Resource plus json: any to Action.Any\n  function getAction(resourceType: Url.ResourceType): Action.Any | Url.ParserError {\n    switch (resourceType) {\n      case \"Discussion\": {\n        // new answer\n        {\n          // get the discussionId from the URL\n          const discussionId = Url.isNewAnswer(location);\n          if (discussionId) {\n            // and other input data\n            const posted = json as Post.NewMessage;\n            const messageId = DB.messageIdNext();\n            // construct the action\n            return Action.createNewMessage(posted, dateTime, userId, discussionId, messageId);\n          }\n        }\n\n        // new discussion\n        if (Url.isNewDiscussion(location)) {\n          const posted = json as Post.NewDiscussion;\n          const discussionId = DB.discussionIdNext();\n          const messageId = DB.messageIdNext();\n          return Action.createNewDiscussion(posted, dateTime, userId, discussionId, messageId);\n        }\n\n        return { error: \"Unexpected Discussion post\" };\n      }\n\n      case \"User\": {\n        // edit settings\n        {\n          // get the userId from the URL\n          const urlUserId = Url.isEditUserProfile(location);\n          if (urlUserId) {\n            if (userId !== urlUserId) {\n              // should return 403 Forbidden\n              return { error: \"Expected user to edit their own settings only\" };\n            }\n            const posted = json as Post.EditUserProfile;\n            return Action.createEditUserProfile(posted, dateTime, userId);\n          }\n        }\n\n        return { error: \"Unexpected User post\" };\n      }\n\n      case \"Tag\": {\n        const tag = Url.isEditTagInfo(location);\n        if (tag) {\n          const posted = json as Post.EditTagInfo;\n          return Action.createEditTagInfo(posted, dateTime, userId, tag);\n        }\n        return { error: \"Unexpected Tag post\" };\n      }\n\n      default:\n        return { error: \"Unexpected resource type\" };\n    }\n  }\n\n  // handle things which are implemented as a POST because they include JSON body data\n  // but which aren't a type of action which updates the database data\n  switch (resourceType) {\n    case \"Login\":\n      return loginUser();\n    case \"Tag\":\n      const options = Url.isTagsOptions(location);\n      if (!Url.isParserError(options)) {\n        return DB.getTags(options, (json as SearchInput).searchInput);\n      }\n      break;\n    default:\n      break;\n  }\n\n  const action = getAction(resourceType);\n  if (Url.isParserError(action)) {\n    // should return 400 Bad Request\n    console.log(action.error);\n    return undefined;\n  }\n\n  return DB.handleAction(action);\n}\n","// https://github.com/mmillican/pagedown/blob/master/README.md\n\n// it's JavaScript with no TypeScript declarations\nvar pagedown: any = require(\"pagedown\");\nvar converter = new pagedown.getSanitizingConverter(); // instead of just new pagedown.Converter();\n\n// return type matches what can be passed as a parameter to React elements' dangerouslySetInnerHTML property.\nexport function toHtml(markdown: string): { __html: string } {\n  const __html = converter.makeHtml(markdown);\n  return { __html };\n}\n","import { Api, config, Data, loginUser } from 'client/src';\nimport React from 'react';\n\ntype Me = Data.UserSummary | undefined;\n\ntype AppContextProps = {\n  me?: Data.UserSummary;\n  setMe(me: Me): void;\n  api?: Api;\n};\n\n// https://fettblog.eu/typescript-react/context/\nexport const AppContext = React.createContext<AppContextProps>({\n  me: undefined,\n  setMe: (me: Me) => {},\n  api: undefined,\n});\n\nexport function useMe(): Me {\n  const appContext: AppContextProps = React.useContext(AppContext);\n  return appContext.me;\n}\n\nexport function useApi(): Api {\n  const appContext: AppContextProps = React.useContext(AppContext);\n  return appContext.api!;\n}\n\nexport function useSetMe(): (me: Me) => void {\n  const appContext: AppContextProps = React.useContext(AppContext);\n  return appContext.setMe;\n}\nexport function useCreateMe(): [Me, React.Dispatch<React.SetStateAction<Me>>] {\n  // https://fettblog.eu/typescript-react/context/ and\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\n  const autologin = config.autologin ? loginUser() : undefined;\n  return React.useState<Me>(autologin);\n}\n","import React from \"react\";\n\n/*\n  This is a \"high-order component\", a \"custom hook\" -- it separates \"getting\" the data from \"presenting\" the data.\n\n  - https://reactjs.org/docs/higher-order-components.html\n  - https://reactjs.org/docs/hooks-custom.html\n\n  The sequence of events is:\n\n  1. Called for the first time\n  2. Returns `undefined` as the data value\n  3. useEffect fires and:\n     - Call getData to fetch data from the server\n     - Call setData to write the fetched data into the state\n     - Returns the fetched data value\n\n  Fetching data is as described at:\n\n  - https://reactjs.org/docs/hooks-faq.html#how-can-i-do-data-fetching-with-hooks\n  - https://overreacted.io/a-complete-guide-to-useeffect/\n  - https://www.robinwieruch.de/react-hooks-fetch-data\n\n  And using a hook with TypeScript:\n\n  - https://www.carlrippon.com/typed-usestate-with-typescript/\n\n  The template supports a parameter of type TParam (which is optional and may be void/undefined).\n  If specified then the parameter is passed to the getData function.\n\n  ---\n\n  Also, as described here ...\n\n  https://stackoverflow.com/questions/56096560/avoid-old-data-when-using-useeffect-to-fetch-data\n\n  ... if the parameter value changes then there's a brief wndow before the useEffect hook is run.\n  Therefore the param value is stored in state whenever the data value is stored,\n  and the data value is discarded when it's associated param value doesn't match the current param value.\n\n  The solution described here ...\n\n  https://overreacted.io/a-complete-guide-to-useeffect/#but-i-cant-put-this-function-inside-an-effect\n\n  ... i.e. to \"wrap it into the useCallback Hook\" was insufficient because it leaves a brief\n  timing hole before the useEffect fires and the data is refetched.\n*/\n\nexport interface FetchingT<TData, TParam2> {\n  // type of data returned by the client API\n  data: TData | undefined;\n  error: Error | undefined;\n  reload: () => void;\n  newData: (param2: TParam2) => Promise<void>;\n}\n\n// this gets data from the server\ntype IoGetDataT<TData, TParam, TParam2 = void> = (param: TParam, param2?: TParam2) => Promise<TData>;\n\n// this value is passed as param to useGetLayout when TParam is void\n// or I could have implemented a copy-and-paste of useGetLayout without the TParam\nconst isVoid: void = (() => {})();\n\nexport function useFetchApi<TData>(getData: IoGetDataT<TData, void, void>): FetchingT<TData, void> {\n  return useFetchApi2(getData, isVoid);\n}\n\nexport function useFetchApi2<TData, TParam, TParam2 = void>(\n  // client API function\n  getData: IoGetDataT<TData, TParam, TParam2>,\n  // parameter passed to the getData function\n  param: TParam\n): FetchingT<TData, TParam2> {\n  const [prev, setParam] = React.useState<TParam | undefined>(undefined);\n  const [data, setData] = React.useState<TData | undefined>(undefined);\n  const [error, setError] = React.useState<Error | undefined>(undefined);\n\n  // we pass the reload function to the getLayout function so that it can force a reload e.g. after\n  // posting a new message to the server. We force a reload because nothing has changed on the client --\n  // not even the URL -- but we want to fetch/refresh the data from the server.\n  // https://stackoverflow.com/questions/46240647/can-i-call-forceupdate-in-stateless-component\n  const [toggle, setToggle] = React.useState<boolean>(true);\n  function reload() {\n    setToggle(!toggle); // toggle the state to force render\n  }\n\n  // we pass a newData function to the getLayout function so that it can invoke the network I/O function again\n  // with a new parameter (see the ThrottledInput function) and store the new data and the new parameter back here\n  const newData = React.useMemo(() => {\n    const getDataAgain: (param2: TParam2) => Promise<void> = (param2: TParam2) => {\n      const promise = getData(param, param2);\n      const rc: Promise<void> = new Promise<void>((resolve, reject) => {\n        promise.then((fetched: TData) => {\n          // the layout function has fetched new data with a new parameter\n          // so redo now what was originally done at the end of useEffect\n          setData(fetched);\n          // setParam(param);\n          resolve();\n        });\n        promise.catch((error) => {\n          reject(error);\n        });\n      });\n      return rc;\n    };\n    return getDataAgain;\n  }, [getData, param]);\n\n  // add the reload function to the extra data which we pass as a parameter to the layout function\n  // so that the layout function can call reload() if it wants to\n  //const extra2: TExtra & Extra<TParam2> = { ...extra, reload, newData };\n\n  React.useEffect(() => {\n    getData(param)\n      .then((fetched) => {\n        setData(fetched);\n        setParam(param);\n      })\n      .catch((reason) => {\n        console.log(`useEffect failed ${reason}`);\n        setError(reason);\n      });\n  }, [getData, param, toggle]);\n\n  // TODO https://www.robinwieruch.de/react-hooks-fetch-data/#react-hooks-abort-data-fetching\n\n  return { data: prev === param ? data : undefined, error, reload, newData };\n}\n","import { Data } from \"client/src\";\r\n\r\n// you could temporarily change this to enable logging, for debugging\r\nconst isLogging = false;\r\n\r\n/*\r\n  Type definitions\r\n*/\r\n\r\ntype TagCount = Data.TagCount;\r\n\r\n// these are properties to configurare the validation of tags\r\nexport interface Validation {\r\n  // whether a minimum number of tags must be defined, e.g. 1\r\n  minimum: boolean;\r\n  // whether a maximum number of tags must be defined, e.g. 5\r\n  maximum: boolean;\r\n  // whether the user can create new tags, or whether tags must match what's already in the dictionary\r\n  canNewTag: boolean;\r\n  // whether to show validation error messages -- they're hidden until the user first presses the form's submit button\r\n  showValidationError: boolean;\r\n  // the href used for the link to \"popular tags\" in the validation error message -- i.e. \"/tags\"\r\n  hrefAllTags: string;\r\n}\r\n\r\n// the results are pushed back to the parent via this callback\r\nexport interface OutputTags {\r\n  tags: string[];\r\n  isValid: boolean;\r\n}\r\nexport type ParentCallback = (outputTags: OutputTags) => void;\r\n\r\nexport type Assert = (assertion: boolean, message: string, extra?: () => object) => void;\r\n\r\n// this is extra data which event handlers pass (as part of the action) from the function component to the reducer\r\ninterface Context {\r\n  inputElement: InputElement;\r\n  assert: Assert;\r\n  result: ParentCallback;\r\n  tagDictionary?: TagDictionary;\r\n  validation: Validation;\r\n}\r\n\r\n// this is like the input data from which the RenderedState is calculated\r\n// these and other state elements are readonly so that event handlers must mutate MutableState instead\r\ninterface State {\r\n  // the selection range within the buffer\r\n  // this may even span multiple words, in which case all the selected words are in the <input> element\r\n  readonly selection: { readonly start: number; readonly end: number };\r\n  // the words (i.e. the tags when this is split on whitespace)\r\n  readonly buffer: string;\r\n}\r\n\r\n// this interface identifies the array of <input> and <Tag> elements to be rendered, and the word associated with each\r\nexport interface RenderedElement {\r\n  // the string value of this word\r\n  readonly word: string;\r\n  // whether this word is rendered by a Tag element or by the one input element\r\n  readonly type: \"tag\" | \"input\";\r\n  // whether this word matches an existing tag in the dictionary\r\n  readonly isValid: boolean;\r\n}\r\n\r\n// this interface combines the two states, and is what's stored using useReducer\r\nexport interface RenderedState {\r\n  // the buffer which contains the tag-words, and the selection within the buffer\r\n  readonly state: State;\r\n  // how that's rendered i.e. the <input> element plus <Tag> elements\r\n  readonly elements: ReadonlyArray<RenderedElement>;\r\n  // the current (\"semi-controlled\") value of the <input> element\r\n  readonly inputValue: string;\r\n  // the hints associated with the inputValue, taken from the TagDictionary\r\n  hints: TagCount[];\r\n  // the validation error message (zero length if there isn't one)\r\n  validationError: string;\r\n}\r\n\r\n// this wraps the current state of the <input> control\r\nexport class InputElement {\r\n  readonly selectionStart: number;\r\n  readonly selectionEnd: number;\r\n  readonly isDirectionBackward: boolean;\r\n  readonly value: string;\r\n  readonly isLeftTrimmed: boolean;\r\n  private readonly inputElement: HTMLInputElement;\r\n\r\n  constructor(inputElement: HTMLInputElement, assert: Assert, stateValue?: string) {\r\n    let { selectionStart, selectionEnd, selectionDirection, value } = inputElement;\r\n    log(\"getInput\", {\r\n      selectionStart,\r\n      selectionEnd,\r\n      selectionDirection,\r\n      value,\r\n    });\r\n\r\n    assert(!stateValue || stateValue === value, \"stateValue !== value\");\r\n\r\n    // TypeScript declaration says these may be null, though I haven't seen that in practice?\r\n    if (selectionStart === null) {\r\n      assert(false, \"unexpected null selectionStart\");\r\n      selectionStart = 0;\r\n    }\r\n    if (selectionEnd === null) {\r\n      assert(false, \"unexpected null selectionEnd\");\r\n      selectionEnd = 0;\r\n    }\r\n    if (selectionStart > selectionEnd) {\r\n      assert(false, \"unexpected selectionStart > selectionEnd\");\r\n      selectionStart = 0;\r\n    }\r\n    // left trim if the user entered leading spaces\r\n    let isLeftTrimmed = false;\r\n    while (value.length && value[0] === \" \") {\r\n      value = value.substring(1);\r\n      --selectionStart;\r\n      --selectionEnd;\r\n      isLeftTrimmed = true;\r\n    }\r\n\r\n    this.selectionStart = selectionStart;\r\n    this.selectionEnd = selectionEnd;\r\n    this.isDirectionBackward = selectionDirection === \"backward\";\r\n    this.value = value;\r\n    this.isLeftTrimmed = isLeftTrimmed;\r\n    this.inputElement = inputElement;\r\n  }\r\n\r\n  focus(): void {\r\n    this.inputElement.focus();\r\n  }\r\n\r\n  setContent(value: string, start: number, end: number): void {\r\n    // set the value before the selection, otherwise the selection might be invalid\r\n    this.inputElement.value = value;\r\n    this.inputElement.setSelectionRange(start, end);\r\n    // dynammically readjust the width of the input element to match its content\r\n    const width = getTextWidth(value + \"0\");\r\n    this.inputElement.style.width = `${width}px`;\r\n  }\r\n\r\n  toJSON(): string {\r\n    // JSON.stringify cannot handle `inputElement: HTMLInputElement` so the purpose of this is to exclude that\r\n    const printable: string[] = [\r\n      `start: ${this.selectionEnd}`,\r\n      `end: ${this.selectionEnd}`,\r\n      `backward: ${this.isDirectionBackward}`,\r\n      `value: ${this.value}`,\r\n    ];\r\n    return printable.join(\", \");\r\n  }\r\n}\r\n\r\n// this combines the state of the <input> control with the position of the <input> within the RenderedState\r\n// it exists only to help the KeyDown event handlers determine whether keys like ArrowLeft will change the selected word\r\n// beware that, when this runs, the <input> control's value may not yet have been written to the elements[editing].word\r\nclass InputState {\r\n  readonly canMoveLeft: boolean;\r\n  readonly canMoveRight: boolean;\r\n  readonly currentStart: number;\r\n  readonly currentEnd: number;\r\n  get nextLeft(): number {\r\n    return this.currentStart - 1;\r\n  }\r\n  get nextRight(): number {\r\n    return this.currentEnd + 1;\r\n  }\r\n\r\n  constructor(state: RenderedState, inputElement: InputElement, assert: Assert) {\r\n    const { elements } = state;\r\n    const { inputIndex, isFirst, isLast } = getInputIndex(elements, assert);\r\n    const elementStart = getElementStart(elements, inputIndex, assert);\r\n\r\n    const { selectionStart, selectionEnd, isDirectionBackward, value } = inputElement;\r\n\r\n    // if a range is selected then which end of the range is moving?\r\n    const isLeftMoving = selectionStart === selectionEnd || isDirectionBackward;\r\n    const isRightMoving = selectionStart === selectionEnd || !isDirectionBackward;\r\n\r\n    // can move left if at the start of the <input> and if there are other <Tag> elements before the <input> element\r\n    this.canMoveLeft = selectionStart === 0 && !isFirst && isLeftMoving;\r\n    // can move right if at the end of the <input> and if there are other <Tag> elements after the <input> element\r\n    this.canMoveRight = selectionEnd === value.length && !isLast && isRightMoving;\r\n\r\n    this.currentStart = elementStart + selectionStart;\r\n    this.currentEnd = elementStart + selectionEnd;\r\n  }\r\n\r\n  removeSelected(mutableState: MutableState): void {\r\n    mutableState.remove(this.currentStart, this.currentEnd);\r\n  }\r\n}\r\n\r\n// this is a class which event-handlers use to mutate the current state\r\n// its methods are whatever primitive methods are required by the event handlers which use it\r\n// it's contructed from the previous RenderedState, then mutated, and then eventually returns the new RenderedState\r\nclass MutableState {\r\n  private selection: { start: number; end: number };\r\n  private buffer: string;\r\n  // store the elements as word because until the mutation stops we don't know which will be the input element\r\n  // e.g. what's currently current input element may be deleted and/or the input may be moved to a different word\r\n  private words: string[];\r\n  private context: Context;\r\n\r\n  constructor(renderedState: RenderedState, context: Context) {\r\n    // load the data from the previous state into non-readonly elements\r\n    const { state, elements } = renderedState;\r\n    this.selection = state.selection;\r\n    this.buffer = state.buffer;\r\n    this.words = elements.map((x) => x.word); // use concat with no parameters to convert from ReadonlyArray to []\r\n    this.context = context;\r\n\r\n    // stash the input -- i.e. update the buffered data to reflect whatever is currently in the <input> element\r\n    const { inputIndex } = getInputIndex(elements, context.assert);\r\n    const { value, selectionStart, selectionEnd } = context.inputElement;\r\n    this.replaceElement(inputIndex, value, {\r\n      start: selectionStart,\r\n      end: selectionEnd,\r\n    });\r\n    log(\"MutableState\", {\r\n      selection: this.selection,\r\n      buffer: this.buffer,\r\n      words: this.words,\r\n    });\r\n  }\r\n\r\n  // called when the event handler has finished mutating this MutableState\r\n  getState(): RenderedState {\r\n    const state: State = { buffer: this.buffer, selection: this.selection };\r\n    const { assert, inputElement, tagDictionary, validation } = this.context;\r\n    const renderedState: RenderedState = renderState(state, assert, validation, inputElement, tagDictionary);\r\n    logRenderedState(\"MutableState.getState returning\", renderedState);\r\n    // do a callback to the parent to say what the current tags are (excluding the empty <input> word if there is one)\r\n    const tags: string[] = renderedState.elements.map((element) => element.word).filter((word) => !!word.length);\r\n    const isValid = !renderedState.validationError.length;\r\n    this.context.result({ tags, isValid });\r\n    return renderedState;\r\n  }\r\n\r\n  replaceElement(index: number, newValue: string, selection?: { start: number; end: number }): void {\r\n    this.invariant();\r\n\r\n    const editingWord: string = this.words[index];\r\n    // a special case is when the input element is empty and the last word -- then it's beyond the end of the buffer\r\n    const nWords = this.words.length - (this.words[this.words.length - 1] === \"\" ? 1 : 0);\r\n\r\n    // if the new word matches the existing word then the replace will do nothing\r\n    if (editingWord === newValue) {\r\n      return;\r\n    }\r\n    const wordStart = getWordStart(this.words, index, this.context.assert);\r\n\r\n    // possibly insert or delete whitespace before or after the word being added or deleted\r\n\r\n    // if we delete the whole word and this isn't the last word then also delete the space after this word\r\n    const deleteSpaceAfter = newValue === \"\" && index < nWords - 1;\r\n    if (deleteSpaceAfter) {\r\n      this.assertSpaceAt(wordStart + editingWord.length);\r\n    }\r\n    // if we delete the last word then delete the space before it\r\n    const deleteSpaceBefore = newValue === \"\" && index === nWords - 1 && index !== 0;\r\n    if (deleteSpaceBefore) {\r\n      this.assertSpaceAt(wordStart - 1);\r\n    }\r\n    // if we add another word beyond a previous word (i.e. beyond the end of the buffer) then insert the space before it\r\n    const addSpaceBefore = wordStart === this.atBufferEnd() && index;\r\n    if (addSpaceBefore) {\r\n      // assert this word was previously empty and is being changed to non-empty\r\n      this.context.assert(!editingWord.length && !!newValue.length, \"unexpected at end of buffer\");\r\n    }\r\n\r\n    log(\"replaceElement\", {\r\n      deleteSpaceAfter,\r\n      deleteSpaceBefore,\r\n      addSpaceBefore,\r\n    });\r\n    // calculate the deleteCount, and adjust deleteCount and/or wordStart and/or newValue, to insert or delete spaces\r\n\r\n    const deleteCount: number = editingWord.length + (deleteSpaceAfter || deleteSpaceBefore ? 1 : 0);\r\n    const spliceStart: number = deleteSpaceBefore || addSpaceBefore ? wordStart - 1 : wordStart;\r\n    const spliceValue: string = !addSpaceBefore ? newValue : \" \" + newValue;\r\n\r\n    // mutate the buffer\r\n    this.buffer = stringSplice(this.buffer, spliceStart, deleteCount, spliceValue);\r\n    // mutate the word in the elements array\r\n    if (newValue.length) {\r\n      this.words[index] = newValue;\r\n    } else {\r\n      this.words.splice(index, 1);\r\n    }\r\n\r\n    // adjust the selected range after mutating the text\r\n    if (selection) {\r\n      // called from constructor where new selection is taken from the <input> element\r\n      const wordStart = getWordStart(this.words, index, this.context.assert);\r\n      this.selection.start = selection.start + wordStart;\r\n      this.selection.end = selection.end + wordStart;\r\n    } else {\r\n      // called from onDeleteTag where existing selection must be adjusted to account for the deleted element\r\n      if (this.selection.start > wordStart) {\r\n        this.selection.start -= deleteCount;\r\n      }\r\n      if (this.selection.end > wordStart) {\r\n        this.selection.end -= deleteCount;\r\n      }\r\n    }\r\n    this.invariant();\r\n  }\r\n\r\n  private invariant() {\r\n    // we mutate the state but because we make several mutations this asserts that the state remains sane or predictable\r\n    assertWords(this.words, this.buffer, this.context.assert);\r\n  }\r\n  private assertSpaceAt(index: number) {\r\n    this.context.assert(this.buffer.substring(index, index + 1) === \" \", \"expected a space at this location\");\r\n  }\r\n\r\n  remove(start: number, deleteCount: number): void {\r\n    this.buffer = stringSplice(this.buffer, start, deleteCount, \"\");\r\n  }\r\n\r\n  // the start and end of the selection range are usually the same\r\n  setSelectionBoth(where: number): void {\r\n    this.selection.start = where;\r\n    this.selection.end = where;\r\n  }\r\n  setSelectionStart(where: number): void {\r\n    this.selection.start = where;\r\n  }\r\n  setSelectionEnd(where: number): void {\r\n    this.selection.end = where;\r\n  }\r\n  // the location of the selection index beyond the end of the buffer (starting the empty, to-be-defined next tag)\r\n  atBufferEnd(): number {\r\n    return this.buffer.length ? this.buffer.length + 1 : 0;\r\n  }\r\n\r\n  selectEndOf(index: number) {\r\n    const wordStart = getWordStart(this.words, index, this.context.assert);\r\n    this.setSelectionBoth(wordStart + this.words[index].length);\r\n  }\r\n  focus() {\r\n    this.context.inputElement.focus();\r\n  }\r\n}\r\n\r\n// we want to display a maximum of 6 hints\r\nconst maxHints = 6;\r\n\r\n// this is a class to lookup hints for existing tags which match the current input value\r\nexport class TagDictionary {\r\n  // the current implementation repeatedly iterates the whole dictionary\r\n  // if that's slow (because the dictionary is large) in future we could partition the dictionary by letter\r\n  private readonly tags: TagCount[];\r\n  constructor(tags: TagCount[]) {\r\n    this.tags = tags;\r\n  }\r\n  getHints(inputValue: string, elements: RenderedElement[]): TagCount[] {\r\n    if (!inputValue.length) {\r\n      return [];\r\n    }\r\n    // don't want what we already have i.e. what matches other tags\r\n    const unwanted: string[] = elements.filter((x) => x.type === \"tag\").map((x) => x.word);\r\n    // we'll select tags in the following priority:\r\n    // 1. Tags where the inputValue matches the beginning of the tag\r\n    // 2. If #1 returns too many tags, then prefer tags with a higher count because they're the more popular/more likely\r\n    // 3. If #1 doesn't return enough tags, then find tags where the inputValue matches within the tag\r\n    // 4. If #3 returns too many tags, then prefer tags with a higher count\r\n    const findTags = (start: boolean, max: number): TagCount[] => {\r\n      const found = this.tags\r\n        .filter((tag) => (start ? tag.key.startsWith(inputValue) : tag.key.substring(1).includes(inputValue)))\r\n        .filter((x) => !unwanted.includes(x.key));\r\n      // higher counts first, else alphabetic\r\n      found.sort((x, y) => (x.count === y.count ? x.key.localeCompare(y.key) : y.count - x.count));\r\n      return found.slice(0, max);\r\n    };\r\n    const found = findTags(true, maxHints);\r\n    return found.length === maxHints ? found : found.concat(findTags(false, maxHints - found.length));\r\n  }\r\n  exists(inputValue: string): boolean {\r\n    return this.tags.some((tag) => tag.key === inputValue);\r\n  }\r\n  toJSON(): string {\r\n    // not worth logging all the elements\r\n    return `${this.tags.length} elements`;\r\n  }\r\n}\r\n\r\n/*\r\n  The reducer\r\n*/\r\n\r\ninterface ActionEditorClick {\r\n  type: \"EditorClick\";\r\n  context: Context;\r\n}\r\ninterface ActionHintResult {\r\n  type: \"HintResult\";\r\n  context: Context;\r\n  hint: string;\r\n  inputIndex: number;\r\n}\r\ninterface ActionDeleteTag {\r\n  type: \"DeleteTag\";\r\n  context: Context;\r\n  index: number;\r\n}\r\ninterface ActionTagClick {\r\n  type: \"TagClick\";\r\n  context: Context;\r\n  index: number;\r\n}\r\ninterface ActionKeyDown {\r\n  type: \"KeyDown\";\r\n  context: Context;\r\n  key: string;\r\n  shiftKey: boolean;\r\n}\r\ninterface ActionChange {\r\n  type: \"Change\";\r\n  context: Context;\r\n}\r\n\r\nexport type Action =\r\n  | ActionEditorClick\r\n  | ActionHintResult\r\n  | ActionDeleteTag\r\n  | ActionTagClick\r\n  | ActionKeyDown\r\n  | ActionChange;\r\n\r\nfunction isEditorClick(action: Action): action is ActionEditorClick {\r\n  return action.type === \"EditorClick\";\r\n}\r\nfunction isHintResult(action: Action): action is ActionHintResult {\r\n  return action.type === \"HintResult\";\r\n}\r\nfunction isDeleteTag(action: Action): action is ActionDeleteTag {\r\n  return action.type === \"DeleteTag\";\r\n}\r\nfunction isTagClick(action: Action): action is ActionTagClick {\r\n  return action.type === \"TagClick\";\r\n}\r\nfunction isKeyDown(action: Action): action is ActionKeyDown {\r\n  return action.type === \"KeyDown\";\r\n}\r\nfunction isChange(action: Action): action is ActionChange {\r\n  return action.type === \"Change\";\r\n}\r\n\r\nexport function reducer(state: RenderedState, action: Action): RenderedState {\r\n  log(\"reducer\", action);\r\n  const inputElement = action.context.inputElement;\r\n\r\n  // this function returns a MutableState instance, which is based on the previous state plus the passed-in context\r\n  // the passed-in context includes the new content of the <input> element\r\n  function getMutableState(): MutableState {\r\n    logRenderedState(\"getMutableState\", state);\r\n    return new MutableState(state, action.context);\r\n  }\r\n  // this function returns a InputState instance\r\n  function getInputState(): InputState {\r\n    return new InputState(state, inputElement, action.context.assert);\r\n  }\r\n\r\n  if (isChange(action)) {\r\n    const mutableState: MutableState = getMutableState();\r\n    return mutableState.getState();\r\n  }\r\n\r\n  if (isEditorClick(action)) {\r\n    // click on the <div> => set focus on the <input> within the <div>\r\n    inputElement.focus();\r\n    const mutableState: MutableState = getMutableState();\r\n    mutableState.setSelectionBoth(mutableState.atBufferEnd());\r\n    return mutableState.getState();\r\n  }\r\n\r\n  if (isHintResult(action)) {\r\n    // click on a hint => set focus on the <input>\r\n    inputElement.focus();\r\n    const mutableState: MutableState = getMutableState();\r\n    mutableState.replaceElement(action.inputIndex, action.hint);\r\n    mutableState.setSelectionBoth(mutableState.atBufferEnd());\r\n    return mutableState.getState();\r\n  }\r\n\r\n  if (isDeleteTag(action)) {\r\n    const mutableState: MutableState = getMutableState();\r\n    mutableState.replaceElement(action.index, \"\");\r\n    return mutableState.getState();\r\n  }\r\n\r\n  if (isTagClick(action)) {\r\n    const mutableState: MutableState = getMutableState();\r\n    // want to position the cursor at the end of the selected word\r\n    mutableState.selectEndOf(action.index);\r\n    // clicking on the tag made the input lose the focus\r\n    mutableState.focus();\r\n    return mutableState.getState();\r\n  }\r\n\r\n  if (isKeyDown(action)) {\r\n    const { key, shiftKey } = action;\r\n    switch (key) {\r\n      case \"Home\":\r\n      case \"ArrowUp\": {\r\n        // move selection to start of first tag\r\n        const mutableState: MutableState = getMutableState();\r\n        mutableState.setSelectionBoth(0);\r\n        return mutableState.getState();\r\n      }\r\n\r\n      case \"End\":\r\n      case \"ArrowDown\": {\r\n        // move selection to end of last tag\r\n        const mutableState: MutableState = getMutableState();\r\n        mutableState.setSelectionBoth(mutableState.atBufferEnd());\r\n        return mutableState.getState();\r\n      }\r\n\r\n      case \"ArrowLeft\": {\r\n        const inputState: InputState = getInputState();\r\n        // we're at the left of the input so traverse into the previous tag\r\n        const mutableState: MutableState = getMutableState();\r\n        const wanted = inputState.nextLeft;\r\n        if (shiftKey) {\r\n          mutableState.setSelectionStart(wanted);\r\n        } else {\r\n          mutableState.setSelectionBoth(wanted);\r\n        }\r\n        return mutableState.getState();\r\n      }\r\n      case \"ArrowRight\": {\r\n        const inputState: InputState = getInputState();\r\n        // we're at the right of the input so traverse into the next tag\r\n        const mutableState: MutableState = getMutableState();\r\n        const wanted = inputState.nextRight;\r\n        if (shiftKey) {\r\n          mutableState.setSelectionEnd(wanted);\r\n        } else {\r\n          mutableState.setSelectionBoth(wanted);\r\n        }\r\n        return mutableState.getState();\r\n      }\r\n      case \"Backspace\": {\r\n        // same as ArrowLeft except also delete the space between the two tags\r\n        const inputState: InputState = getInputState();\r\n        const mutableState: MutableState = getMutableState();\r\n        if (shiftKey) {\r\n          // also delete whatever is selected\r\n          inputState.removeSelected(mutableState);\r\n        }\r\n        const wanted = inputState.nextLeft;\r\n        mutableState.remove(wanted, 1);\r\n        mutableState.setSelectionBoth(wanted);\r\n        return mutableState.getState();\r\n      }\r\n      case \"Delete\": {\r\n        // same as ArrowRight except also delete the space between the two tags\r\n        const inputState: InputState = getInputState();\r\n        const mutableState: MutableState = getMutableState();\r\n        if (shiftKey) {\r\n          // also delete whatever is selected\r\n          inputState.removeSelected(mutableState);\r\n        }\r\n        const wanted = inputState.currentStart;\r\n        mutableState.remove(wanted, 1);\r\n        mutableState.setSelectionBoth(wanted);\r\n        return mutableState.getState();\r\n      }\r\n      default:\r\n        break;\r\n    } // switch\r\n  } // if isKeyDown\r\n\r\n  logRenderedState(\"reducer returning old state\", state);\r\n  return state;\r\n} // reducer\r\n\r\n/*\r\n  Various helper functions\r\n*/\r\n\r\n// Helper function analogous to Array.splice -- string has built-in slice but no splice\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\nfunction stringSplice(text: string, start: number, deleteCount: number, insert: string): string {\r\n  // up to but not including start\r\n  const textStart = text.substring(0, start);\r\n  const textEnd = text.substring(start + deleteCount);\r\n  const after = textStart + insert + textEnd;\r\n  log(\"stringSplice\", { text, start, deleteCount, insert, after });\r\n  return after;\r\n}\r\n\r\nexport function log(title: string, o: object, force?: boolean): void {\r\n  if (!isLogging && !force) {\r\n    return;\r\n  }\r\n  const json = JSON.stringify(o, null, 2);\r\n  console.log(`${title} -- ${json}`);\r\n}\r\n\r\nfunction logRenderedState(title: string, renderedState: RenderedState): void {\r\n  log(title, renderedState);\r\n}\r\n\r\n// this identifies the index of the one-and-only <input> element within the array of RenderedElement\r\nfunction getInputIndex(\r\n  elements: ReadonlyArray<RenderedElement>,\r\n  assert: Assert\r\n): { inputIndex: number; isFirst: boolean; isLast: boolean } {\r\n  let inputIndex: number = 0;\r\n  let counted = 0;\r\n  for (let i = 0; i < elements.length; ++i) {\r\n    if (elements[i].type === \"input\") {\r\n      ++counted;\r\n      inputIndex = i;\r\n    }\r\n  }\r\n  assert(counted === 1, \"expected exactly one input element\");\r\n  return {\r\n    inputIndex,\r\n    isFirst: inputIndex === 0,\r\n    isLast: inputIndex === elements.length - 1,\r\n  };\r\n}\r\n\r\n// the getElementStart and assertElements functions have two versions\r\n// i.e. they work with ReadonlyArray<RenderedElement> or ReadonlyArray<string>\r\n// that's because the MutableState class works with ReadonlyArray<string> instead of ReadonlyArray<RenderedElement>\r\n// because it doesn't yet know the type associated with each word\r\n\r\n// Helper function to determine the offset into the buffer associated with a given RenderedElement\r\nfunction getElementStart(elements: ReadonlyArray<RenderedElement>, index: number, assert: Assert): number {\r\n  return getWordStart(\r\n    elements.map((x) => x.word),\r\n    index,\r\n    assert\r\n  );\r\n}\r\nfunction getWordStart(words: ReadonlyArray<string>, index: number, assert: Assert): number {\r\n  let wordStart = 0;\r\n  for (let i = 0; i < index; ++i) {\r\n    const word = words[i];\r\n    // +1 because there's a whitespace between i.e. after each word\r\n    wordStart += word.length + 1;\r\n    // assert all words are significant (and visible)\r\n    // it's OK if the last word is empty i.e. if the <input> element is beyond the end of the buffer\r\n    // that wouldn't trigger this assertion because we're only testing for all i < index\r\n    assert(!!word.length, \"getWordStart unexpected zero-length word\");\r\n  }\r\n  return wordStart;\r\n}\r\n\r\n// assert that the state is as predicted\r\nfunction assertElements(elements: ReadonlyArray<RenderedElement>, buffer: string, assert: Assert): void {\r\n  assertWords(\r\n    elements.map((x) => x.word),\r\n    buffer,\r\n    assert\r\n  );\r\n  getInputIndex(elements, assert);\r\n  elements.forEach((element, index) =>\r\n    assert(\r\n      !!element.word.length || (element.type === \"input\" && index === elements.length - 1),\r\n      \"unexpected zero-length word\"\r\n    )\r\n  );\r\n}\r\nfunction assertWords(words: ReadonlyArray<string>, buffer: string, assert: Assert): void {\r\n  for (let i = 0; i < words.length; ++i) {\r\n    const word = words[i];\r\n    const wordStart = getWordStart(words, i, assert);\r\n    const fragment = buffer.substring(wordStart, wordStart + word.length);\r\n    assert(\r\n      word === fragment,\r\n      \"assertElements\",\r\n      // don't bother to call JSON.stringify unless the assertion has actually failed\r\n      () => {\r\n        return {\r\n          word,\r\n          fragment,\r\n          wordStart,\r\n          length: word.length,\r\n          buffer,\r\n          words,\r\n        };\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nfunction getTextWidth(text: string) {\r\n  // https://stackoverflow.com/a/21015393/49942\r\n  const getContext = (): CanvasRenderingContext2D | undefined => {\r\n    if (!(getTextWidth as any).canvas) {\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n      if (!context) {\r\n        return undefined;\r\n      }\r\n      // matches the font famly and size defined in App.css\r\n      context.font = '14px Arial, \"Helvetica Neue\", Helvetica, sans-serif';\r\n      (getTextWidth as any).canvas = canvas;\r\n      (getTextWidth as any).context = context;\r\n    }\r\n    return (getTextWidth as any).context as CanvasRenderingContext2D;\r\n  };\r\n  const context = getContext();\r\n  if (!context) {\r\n    return 20;\r\n  }\r\n  return context.measureText(text).width;\r\n}\r\n\r\n/*\r\n  Functions which construct the RenderedState\r\n*/\r\n\r\n// this function calculates a new RenderedState and sets the InputElement content and selection, for a given State value\r\n// it's called from initialState and from MutableState\r\nfunction renderState(\r\n  state: State,\r\n  assert: Assert,\r\n  validation: Validation,\r\n  inputElement?: InputElement,\r\n  tagDictionary?: TagDictionary\r\n): RenderedState {\r\n  const elements: RenderedElement[] = [];\r\n  let editing: number | undefined = undefined;\r\n  let inputValue: string = \"\";\r\n\r\n  function setInput(text: string, start: number, end: number, inputElement: InputElement): void {\r\n    log(\"setInput\", { text, start, end });\r\n    inputElement.setContent(text, start, end);\r\n    inputValue = text;\r\n    assert(start >= 0 && end <= text.length, `setInput invalid range: ${text} ${start} ${end}`);\r\n  }\r\n\r\n  function addElement(type: \"tag\" | \"input\", word: string): void {\r\n    const isValid: boolean = !word.length || validation.canNewTag || (!!tagDictionary && tagDictionary.exists(word));\r\n    elements.push({ type, word, isValid });\r\n  }\r\n\r\n  // split the buffer\r\n  const words: string[] = state.buffer.split(\" \").filter((word) => word.length);\r\n  const selection = state.selection;\r\n\r\n  // this is where each word starts, an index into the buffer\r\n  let wordStart = 0;\r\n  // this accumulates previous words within the selection, when selection is a range which spans more than one word\r\n  let accumulated: { wordStart: number; start: number; text: string } | undefined = undefined;\r\n\r\n  for (let wordIndex = 0; wordIndex < words.length; ++wordIndex) {\r\n    const word = words[wordIndex];\r\n    // e.g. if a word's length is 1, then the positions within this word are 0 (start) and 1 (end)\r\n    const wordEnd = wordStart + word.length;\r\n    if (selection.start > wordEnd || selection.end < wordStart) {\r\n      // selection is not in this word\r\n      // - selection starts beyond the end of the word\r\n      // - or selection ends before the start of the word\r\n      addElement(\"tag\", word);\r\n    } else {\r\n      if (!inputElement) {\r\n        // the initialState function should set the selection at the end of the buffer\r\n        // i.e. beyond any words (if there are any words)\r\n        // or at the start of the buffer if there are no words,\r\n        // so that it isn't necessary to set the selection inside the input element\r\n        // given that the input element hasn't been created in the DOM yet\r\n        assert(false, \"invalid initial state\");\r\n        continue;\r\n      }\r\n      // selection includes some of this word\r\n      // - selection starts on or before the end of the word\r\n      // - or selection ends on or after the start of the word\r\n      if (selection.start >= wordStart) {\r\n        // selection starts in this word\r\n        if (selection.end <= wordEnd) {\r\n          // selection starts and ends in this word\r\n          setInput(word, selection.start - wordStart, selection.end - wordStart, inputElement);\r\n          editing = elements.length;\r\n          addElement(\"input\", word);\r\n        } else {\r\n          // starts in this word but ends in a future word\r\n          assert(!accumulated, \"shouldn't accumulate anything previously\");\r\n          accumulated = {\r\n            wordStart,\r\n            start: selection.start - wordStart,\r\n            text: word,\r\n          };\r\n        }\r\n      } else {\r\n        // selection started before this word\r\n        if (!accumulated) {\r\n          assert(false, \"should have accumulated something previously\");\r\n          continue; // this is bad but better than referencing accumulated when it's undefined\r\n        }\r\n        // add to what's already accumulated, including inter-word whitespace\r\n        accumulated.text += \" \" + word;\r\n        if (selection.end <= wordEnd) {\r\n          // selection ends in this word\r\n          setInput(accumulated.text, accumulated.start, selection.end - accumulated.wordStart, inputElement);\r\n          editing = elements.length;\r\n          addElement(\"input\", accumulated.text);\r\n          accumulated = undefined;\r\n        } else {\r\n          // selection ends in a future word (and we already added this word to the accumulator)\r\n        }\r\n      }\r\n    }\r\n    wordStart += word.length + 1;\r\n  }\r\n\r\n  if (typeof editing === \"undefined\") {\r\n    // we haven't pushed the <input> element yet, so push it now\r\n    editing = elements.length;\r\n    // if (initializing) then the `input` and `inputRef` values haven't yet been created because the state is created\r\n    // before they are, via the call to initialState -- but when it is created it's initially empty so that's alright\r\n    if (inputElement) {\r\n      // the <input> element is already part of the DOM; reset it now\r\n      setInput(\"\", 0, 0, inputElement);\r\n    }\r\n    addElement(\"input\", \"\");\r\n  }\r\n\r\n  assertElements(elements, state.buffer, assert);\r\n\r\n  const hints: TagCount[] = !tagDictionary ? [] : tagDictionary.getHints(inputValue, elements);\r\n  // if logging only log the keyword of each hint, otherwise logging the tags' summaries makes it long and hard to read\r\n  (hints as any).toJSON = () => \"[\" + hints.map((hint) => hint.key).join(\",\") + \"]\";\r\n\r\n  function getValidationError(): string {\r\n    const nWords: number = elements.filter((element) => !!element.word.length).length;\r\n    const invalid: string[] = elements.filter((element) => !element.isValid).map((element) => element.word);\r\n    if (nWords < 1 && validation.minimum) {\r\n      return \"Please enter at least one tag;\";\r\n    }\r\n    if (nWords > 5 && validation.maximum) {\r\n      return \"Please enter a maximum of five tags.\";\r\n    }\r\n    if (!!invalid.length) {\r\n      return invalid.length === 1\r\n        ? `Tag '${invalid[0]}' does not match an existing topic.`\r\n        : `Tags ${invalid.map((word) => \"'\" + word + \"'\").join(\" and \")} do not match existing topics.`;\r\n    }\r\n    return \"\";\r\n  }\r\n  const validationError = getValidationError();\r\n\r\n  const renderedState: RenderedState = {\r\n    state,\r\n    elements,\r\n    inputValue,\r\n    hints,\r\n    validationError,\r\n  };\r\n  return renderedState;\r\n}\r\n\r\n// this function calculates the initial state, calculated from props and used to initialize useState\r\nexport function initialState(assert: Assert, inputTags: string[], validation: Validation): RenderedState {\r\n  assert(!inputTags.some((found) => found !== found.trim()), \"input tags not trimmed\", () => {\r\n    return { inputTags };\r\n  });\r\n  const buffer = inputTags.join(\" \");\r\n  const start = buffer.length + 1;\r\n  const state: State = { buffer, selection: { start, end: start } };\r\n\r\n  log(\"initialState starting\", { inputTags });\r\n  const renderedState: RenderedState = renderState(state, assert, validation);\r\n  logRenderedState(\"initialState returning\", renderedState);\r\n  return renderedState;\r\n}\r\n\r\nexport function getOnSelectTags(\r\n  assert: Assert,\r\n  validation: Validation,\r\n  result: ParentCallback,\r\n  dispatch: (action: Action) => void,\r\n  state: RenderedState,\r\n  tagDictionary?: TagDictionary\r\n) {\r\n  function getContext(inputElement: HTMLInputElement): Context {\r\n    return {\r\n      inputElement: new InputElement(inputElement, assert),\r\n      assert,\r\n      result,\r\n      tagDictionary,\r\n      validation,\r\n    };\r\n  }\r\n\r\n  function onEditorClick(inputElement: HTMLInputElement) {\r\n    dispatch({ type: \"EditorClick\", context: getContext(inputElement) });\r\n  }\r\n  function onDeleteTag(index: number, inputElement: HTMLInputElement) {\r\n    dispatch({ type: \"DeleteTag\", context: getContext(inputElement), index });\r\n  }\r\n  function onTagClick(index: number, inputElement: HTMLInputElement) {\r\n    dispatch({ type: \"TagClick\", context: getContext(inputElement), index });\r\n  }\r\n  function onChange(inputElement: HTMLInputElement) {\r\n    dispatch({ type: \"Change\", context: getContext(inputElement) });\r\n  }\r\n  function onKeyDown(inputElement: HTMLInputElement, key: string, shiftKey: boolean): boolean {\r\n    if (key === \"Enter\") {\r\n      // do nothing and prevent form submission\r\n      return true;\r\n    }\r\n    // apparently dispatch calls the reducer asynchonously, i.e. after this event handler returns, which will be too\r\n    // late to call e.preventDefault(), and so we need two-stage processing, i.e. some here and some inside the reducer:\r\n    // - here we need to test whether the action will or should be handled within the reducer\r\n    // - later in the reducer we need to actually perform the action\r\n    function newinputState() {\r\n      return new InputState(state, new InputElement(inputElement, assert), assert);\r\n    }\r\n    function isHandled(): boolean {\r\n      switch (key) {\r\n        case \"Home\":\r\n        case \"ArrowUp\":\r\n          // move selection to start of first tag\r\n          return !getInputIndex(state.elements, assert).isFirst;\r\n        case \"End\":\r\n        case \"ArrowDown\":\r\n          // move selection to end of last tag\r\n          return !getInputIndex(state.elements, assert).isLast;\r\n        case \"ArrowLeft\":\r\n        case \"Backspace\": {\r\n          const inputState: InputState = newinputState();\r\n          return inputState.canMoveLeft;\r\n        }\r\n        case \"ArrowRight\":\r\n        case \"Delete\": {\r\n          const inputState: InputState = newinputState();\r\n          return inputState.canMoveRight;\r\n        }\r\n        default:\r\n          break;\r\n      } // switch\r\n      return false;\r\n    }\r\n    if (isHandled()) {\r\n      const context: Context = getContext(inputElement);\r\n      dispatch({ type: \"KeyDown\", context, key, shiftKey });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  function onHintResult(inputElement: HTMLInputElement, outputTag: string) {\r\n    const { inputIndex } = getInputIndex(state.elements, assert);\r\n    dispatch({\r\n      type: \"HintResult\",\r\n      context: getContext(inputElement),\r\n      hint: outputTag,\r\n      inputIndex,\r\n    });\r\n  }\r\n\r\n  return { onEditorClick, onDeleteTag, onTagClick, onChange, onKeyDown, onHintResult };\r\n}\r\n","import { Data } from \"client/src\";\r\nimport React from \"react\";\r\nimport {\r\n  Action,\r\n  Assert,\r\n  initialState,\r\n  reducer,\r\n  RenderedState,\r\n  TagDictionary,\r\n  Validation,\r\n} from \"../components/SelectTagsState\";\r\n\r\ntype TagCount = Data.TagCount;\r\n\r\nexport function useSelectTags(\r\n  inputTags: string[],\r\n  getAllTags: () => Promise<TagCount[]>,\r\n  validation: Validation\r\n): {\r\n  state: RenderedState;\r\n  dispatch: React.Dispatch<Action>;\r\n  tagDictionary: TagDictionary | undefined;\r\n  assert: Assert;\r\n  errorMessage: string | undefined;\r\n} {\r\n  // this is an optional error message\r\n  const [errorMessage, setErrorMessage] = React.useState<string | undefined>(undefined);\r\n\r\n  function assert(assertion: boolean, message: string, extra?: () => object): void {\r\n    if (!assertion) {\r\n      if (extra) {\r\n        const o: object = extra();\r\n        const json = JSON.stringify(o, null, 2);\r\n        message = `${message} -- ${json}`;\r\n      }\r\n      // write to errorMessage state means it's displayed by the `<ErrorMessage errorMessage={errorMessage} />` element\r\n      setTimeout(() => {\r\n        // do it after a timeout because otherwise if we do this during a render then React will complain with:\r\n        //   \"Too many re-renders. React limits the number of renders to prevent an infinite loop.\"\r\n        setErrorMessage(message);\r\n      }, 0);\r\n      console.error(message);\r\n    }\r\n  }\r\n\r\n  // see ./EDITOR.md and the definition of the RenderedState interface for a description of this state\r\n  // also https://fettblog.eu/typescript-react/hooks/#usereducer says that type is infered from signature of reducer\r\n  const [state, dispatch] = React.useReducer(reducer, inputTags, (inputTags) =>\r\n    initialState(assert, inputTags, validation)\r\n  );\r\n\r\n  // this is a dictionary of existing tags\r\n  const [tagDictionary, setTagDictionary] = React.useState<TagDictionary | undefined>(undefined);\r\n\r\n  // useEffect to fetch all the tags from the server exactly once\r\n  // React's elint rules demand that getAllTags be specified in the deps array, but the value of getAllTags\r\n  // (which we're being passed as a parameter) is utimately a function at module scope, so it won't vary\r\n  React.useEffect(() => {\r\n    // get tags from server\r\n    getAllTags()\r\n      .then((tags) => {\r\n        // use them to contruct a dictionary\r\n        const tagDictionary: TagDictionary = new TagDictionary(tags);\r\n        // save the dictionary in state\r\n        setTagDictionary(tagDictionary);\r\n      })\r\n      .catch((reason) => {\r\n        // alarm the user\r\n        setErrorMessage(`getAllTags() failed -- ${reason}`);\r\n      });\r\n  }, [getAllTags]);\r\n\r\n  /*\r\n    Event handlers\r\n  */\r\n\r\n  return { state, dispatch, tagDictionary, assert, errorMessage };\r\n}\r\n","import React from \"react\";\r\nimport \"ui-assets/css/ErrorMessage.css\";\r\n\r\n/*\r\n  Simple component to show an error message (or not if there isn't one)\r\n*/\r\n\r\nexport interface ErrorMessageProps {\r\n  errorMessage?: string;\r\n  bold?: boolean;\r\n}\r\n\r\nexport const ErrorMessage: React.FunctionComponent<ErrorMessageProps> = (props: ErrorMessageProps) => {\r\n  const className: string = (props.errorMessage ? \"error\" : \"hidden\") + (props.bold ? \" bold\" : \"\");\r\n  return <p className={className}>{props.errorMessage}</p>;\r\n};\r\n","import React from \"react\";\r\nimport \"ui-assets/css/ErrorMessage.css\";\r\nimport { CreateAny, createChild } from \"../components/createChild\";\r\nimport { getSubmitButton } from \"../components/getSubmitButton\";\r\nimport { createLabel } from \"../components/Label\";\r\n\r\n/*\r\n  Component to display an <input> or <taxarea> element with a validation error message\r\n*/\r\n\r\ninterface ValidationOptions {\r\n  optional?: boolean;\r\n  minLength?: number;\r\n}\r\n\r\nexport interface Input {\r\n  label: string;\r\n  hideLabel?: boolean;\r\n  options: ValidationOptions;\r\n  create: CreateAny;\r\n}\r\n\r\nexport function useValidatedInput<T extends object>(\r\n  inputs: Map<keyof T, Input>,\r\n  initialState: T,\r\n  buttonText: { label: string; noun: string }\r\n): {\r\n  currentState: T;\r\n  isError: boolean;\r\n  isAfterSubmit: boolean;\r\n  button: React.ReactElement;\r\n  mapInputs: Map<keyof T, React.ReactElement>;\r\n  onSubmitError: (error: Error) => void;\r\n} {\r\n  // ideally TypeScript could deduce the type arguments of React.useReducer from the parameters passed to it\r\n  // but it gets confused if we don't specify those arguments, perhaps because the parameters are themselves generic,\r\n  const [state, dispatch] = React.useReducer<React.Reducer<ValidatedState<T>, Action<T>>>(\r\n    reducer,\r\n    createInitialState(inputs, initialState)\r\n  );\r\n  const { mapInputs, button } = createValidated<T>(state, dispatch, buttonText);\r\n  const onSubmitError = (error: Error) => dispatch({ key: \"onSubmitError\", newValue: error.message });\r\n  return {\r\n    currentState: state.posted,\r\n    isError: state.errorMessages.size !== 0,\r\n    isAfterSubmit: state.isAfterSubmit,\r\n    button,\r\n    mapInputs,\r\n    onSubmitError,\r\n  };\r\n}\r\n\r\n/*\r\n  State to contain the data for validated elements\r\n\r\n  Assume that input/initial data values of type T will to be posted to the server in an object of type T.\r\n*/\r\n\r\ninterface ValidatedState<T extends object> {\r\n  // initial state defines the initial defaultValue for each input element\r\n  defaultValues: T;\r\n  // edited state to be posted\r\n  posted: T;\r\n  // validation errors\r\n  errorMessages: Map<keyof T, string>;\r\n  // could define input elsewhere, but it's convenient to define it here in state where it's accessible to dispatcher\r\n  inputs: Map<keyof T, Input>;\r\n  // don't display validation errors until after first submit attempt\r\n  isAfterSubmit: boolean;\r\n  // summary of other validation errors, displayed next to the submit button\r\n  onSubmitError: string | undefined;\r\n}\r\n\r\nfunction createInitialState<T extends object>(inputs: Map<keyof T, Input>, state: T): ValidatedState<T> {\r\n  const errorMessages = new Map<keyof T, string>();\r\n  // test the initial validity of each value (which will be recalculated onChange)\r\n  inputs.forEach((input, key) => {\r\n    const value = state[key];\r\n    if (typeof value === \"string\") {\r\n      const errorMessage = validate(value, input.options, input.label);\r\n      if (errorMessage) {\r\n        errorMessages.set(key, errorMessage);\r\n      }\r\n    } else {\r\n      throw new Error(\"This type of input validation can only be used for string-type elements\");\r\n    }\r\n  });\r\n  return {\r\n    posted: state,\r\n    defaultValues: state,\r\n    errorMessages,\r\n    inputs,\r\n    isAfterSubmit: false,\r\n    onSubmitError: undefined,\r\n  };\r\n}\r\n\r\n/*\r\n  A reducer for the above state\r\n*/\r\n\r\ntype Action<T extends object> = {\r\n  key: keyof T | \"onSubmit\" | \"onSubmitError\";\r\n  newValue: string;\r\n};\r\n\r\nfunction reducer<T extends object>(old: ValidatedState<T>, action: Action<T>): ValidatedState<T> {\r\n  const { key, newValue } = action;\r\n  let { posted, errorMessages, isAfterSubmit: onSubmit, onSubmitError, defaultValues } = old;\r\n  if (key === \"onSubmit\") {\r\n    onSubmit = true;\r\n  } else if (key === \"onSubmitError\") {\r\n    onSubmitError = newValue;\r\n  } else {\r\n    onSubmitError = undefined;\r\n    // new state from old state\r\n    posted = { ...posted };\r\n    // cast to any because this template doesn't know that every element is of type string\r\n    // alternative would be to add an\r\n    (posted as any)[key] = newValue;\r\n    // input data for this key\r\n    const input = old.inputs.get(key)!;\r\n    // errorMessage for this value\r\n    const errorMessage = validate(newValue, input.options, input.label);\r\n    // clone from the old state\r\n    errorMessages = new Map<keyof T, string>(errorMessages);\r\n    // insert new error message\r\n    if (!errorMessage) {\r\n      errorMessages.delete(key);\r\n    } else {\r\n      errorMessages.set(key, errorMessage);\r\n    }\r\n  }\r\n  // return new state (including unaltered copy of input)\r\n  return {\r\n    posted,\r\n    errorMessages,\r\n    inputs: old.inputs,\r\n    isAfterSubmit: onSubmit,\r\n    onSubmitError,\r\n    defaultValues,\r\n  };\r\n}\r\n\r\n/*\r\n  A factory which creates Validated elements (and a Validated submit button) from the above input\r\n*/\r\n\r\nfunction createValidated<T extends object>(\r\n  state: ValidatedState<T>,\r\n  dispatch: React.Dispatch<Action<T>>,\r\n  buttonText: { label: string; noun: string }\r\n): {\r\n  mapInputs: Map<keyof T, React.ReactElement>;\r\n  button: React.ReactElement;\r\n} {\r\n  // created a Validated element for each key\r\n  const mapInputs: Map<keyof T, React.ReactElement> = new Map<keyof T, React.ReactElement>();\r\n  state.inputs.forEach((input, key) => {\r\n    // the child's onChange handler goes into the dispatcher with an added key\r\n    const handleChange: (newValue: string) => void = (newValue: string) => dispatch({ key, newValue });\r\n    // create the label\r\n    const label = createLabel(input.label, input.hideLabel);\r\n    // and other input parameters\r\n    const errorMessage: string | undefined = !state.isAfterSubmit ? undefined : state.errorMessages.get(key);\r\n    const { create } = input;\r\n    const defaultValue = \"\" + state.defaultValues[key];\r\n    // created the Validated and its child\r\n    const validated = createChild(create, defaultValue, handleChange, label, errorMessage);\r\n    mapInputs.set(key, validated);\r\n  });\r\n  // also create a button\r\n  function getButtonError(state: ValidatedState<T>): string | undefined {\r\n    const countErrors = state.errorMessages.size;\r\n    const error = countErrors === 1 ? \"error\" : \"errors\";\r\n    const rc: string | undefined = state.onSubmitError\r\n      ? state.onSubmitError\r\n      : !state.isAfterSubmit || !countErrors\r\n      ? undefined\r\n      : `Your ${buttonText.noun} couldn't be submitted. Please see the ${error} above.`;\r\n    return rc;\r\n  }\r\n  const button = getSubmitButton(\r\n    buttonText.label,\r\n    () => dispatch({ key: \"onSubmit\", newValue: \"\" }),\r\n    getButtonError(state)\r\n  );\r\n  return { mapInputs, button };\r\n}\r\n\r\n/*\r\n  Function to define standard validation options, called from createInitialState and from reducer\r\n*/\r\n\r\nfunction validate(value: string, options: ValidationOptions, label: string): string | undefined {\r\n  const isOptional = !!options.optional;\r\n  if (!isOptional && (!value || value === \"\")) {\r\n    return `${label} is missing.`;\r\n  }\r\n  const length = !value ? 0 : value.length;\r\n  if (options.minLength && length < options.minLength) {\r\n    return options.minLength <= 15\r\n      ? `${label} must be at least ${options.minLength} characters.`\r\n      : `${label} must be at least ${options.minLength} characters; you entered ${length}.`;\r\n  }\r\n  return undefined;\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface Label {\r\n  element?: React.ReactElement;\r\n  name?: string;\r\n}\r\n\r\nexport function createLabel(label: string, hideLabel?: boolean): Label {\r\n  if (hideLabel) {\r\n    return { name: undefined, element: undefined };\r\n  }\r\n  const name = label\r\n    .replace(/[^A-Za-z0-9 ]/, \"\")\r\n    .replace(/ /g, \"-\")\r\n    .toLocaleLowerCase();\r\n  const element = <label htmlFor={name}>{label}</label>;\r\n  return { name, element };\r\n}\r\n","import React from \"react\";\r\nimport { Label } from \"../components\";\r\nimport { Editor } from \"./Editor\";\r\nimport { Validated } from \"./Validated\";\r\n\r\ntype CreateInput = {\r\n  type: \"input\";\r\n  placeholder: string;\r\n  attributes: React.InputHTMLAttributes<HTMLInputElement>;\r\n};\r\ntype CreateTextArea = {\r\n  type: \"textarea\";\r\n  placeholder: string;\r\n  attributes: React.TextareaHTMLAttributes<HTMLTextAreaElement>;\r\n};\r\ntype CreateEditor = {\r\n  type: \"editor\";\r\n};\r\nexport type CreateAny = CreateInput | CreateTextArea | CreateEditor;\r\n\r\nexport function createChild(\r\n  create: CreateAny,\r\n  defaultValue: string | undefined,\r\n  handleChange: (newValue: string) => void,\r\n  label: Label,\r\n  errorMessage: string | undefined\r\n): React.ReactElement {\r\n  if (create.type === \"editor\") {\r\n    return Editor({\r\n      label,\r\n      handleChange,\r\n      defaultValue,\r\n      errorMessage,\r\n    });\r\n  }\r\n  function created(): React.ReactElement {\r\n    switch (create.type) {\r\n      case \"input\": {\r\n        const attributes = create.attributes;\r\n        const type = attributes.type ? attributes.type : \"text\";\r\n        return (\r\n          <input\r\n            type={type}\r\n            {...attributes}\r\n            name={label.name}\r\n            placeholder={create.placeholder}\r\n            defaultValue={defaultValue}\r\n            onChange={(e) => handleChange(e.target.value)}\r\n          />\r\n        );\r\n      }\r\n      case \"textarea\": {\r\n        const attributes = create.attributes;\r\n        return (\r\n          <textarea\r\n            {...attributes}\r\n            name={label.name}\r\n            placeholder={create.placeholder}\r\n            defaultValue={defaultValue}\r\n            onChange={(e) => handleChange(e.target.value)}\r\n          />\r\n        );\r\n      }\r\n      default:\r\n        throw new Error(\"Unexpected type\");\r\n    }\r\n  }\r\n  const child = created();\r\n  return (\r\n    <React.Fragment>\r\n      {label.element}\r\n      <Validated errorMessage={errorMessage}>{child}</Validated>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import \"pagedown-editor/pagedown.css\";\r\nimport \"pagedown-editor/sample-bundle\";\r\nimport React from \"react\";\r\nimport \"ui-assets/css/Editor.css\";\r\nimport { Label, Validated } from \"../components\";\r\nimport { usePagedownEditor } from \"../hooks\";\r\n\r\nexport interface ValidatedEditorProps {\r\n  label: Label;\r\n  defaultValue?: string;\r\n  errorMessage?: string;\r\n  handleChange: (newValue: string) => void;\r\n}\r\n\r\n/*\r\n  There's no README in the https://github.com/StackExchange/pagedown repo\r\n  but there's one made for it at https://github.com/mmillican/pagedown which is\r\n  copied from https://code.google.com/archive/p/pagedown/wikis/PageDown.wiki\r\n*/\r\n\r\nexport const Editor = (props: ValidatedEditorProps) => {\r\n  const { label, handleChange, defaultValue, errorMessage } = props;\r\n\r\n  // calling reload() will force a re-render, but if getPagedownEditor().run() is called\r\n  // more than once then bad things happen e.g. there would be more than one editor toolbar\r\n\r\n  // the original code embedded a <script> tag to run getPagedownEditor().run()\r\n  // but if we do that then that will run before these React elements are rendered\r\n  // so use the effect hook to specify somethng to be run after it's rendered\r\n  usePagedownEditor();\r\n\r\n  const validated = (\r\n    <React.Fragment>\r\n      <Validated errorMessage={errorMessage}>\r\n        <textarea\r\n          // ref={textareaRef}\r\n          onChange={(e) => handleChange(e.target.value)}\r\n          id=\"wmd-input\"\r\n          className=\"wmd-input\"\r\n          name={label.name}\r\n          placeholder=\"Type markdown here\"\r\n          defaultValue={defaultValue}\r\n        ></textarea>\r\n      </Validated>\r\n    </React.Fragment>\r\n  );\r\n\r\n  // these elements are copied from those in the \"pagedown-editor/sample.html\"\r\n  return (\r\n    <React.Fragment>\r\n      {label.element}\r\n      <div className=\"container\">\r\n        <div className=\"wmd-panel\">\r\n          <div>\r\n            <div id=\"wmd-preview\" className=\"wmd-preview\"></div>\r\n          </div>\r\n          <div>\r\n            <div id=\"wmd-button-bar\"></div>\r\n          </div>\r\n          {validated}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport function usePagedownEditor() {\r\n  const [once, setOnce] = React.useState<boolean>(false);\r\n\r\n  // calling reload() will force a re-render, but if getPagedownEditor().run() is called\r\n  // more than once then bad things happen e.g. there would be more than one editor toolbar\r\n\r\n  // the original code embedded a <script> tag to run getPagedownEditor().run()\r\n  // but if we do that then that will run before these React elements are rendered\r\n  // so use the effect hook to specify somethng to be run after it's rendered\r\n  React.useEffect(() => {\r\n    // getPagedownEditor was added to the window object by the pagedown-editor/sample-bundle.js\r\n    if (!once) {\r\n      (window as any).getPagedownEditor().run();\r\n      setOnce(true);\r\n    }\r\n  }, [once]);\r\n}\r\n","import React from \"react\";\r\nimport { ErrorMessage } from \"./ErrorMessage\";\r\n\r\nexport function getSubmitButton(label: string, onClick: () => void, errorMessage?: string) {\r\n  function handleClick(e: React.MouseEvent): void {\r\n    onClick();\r\n  }\r\n  return (\r\n    <div>\r\n      <input type=\"submit\" value={label} onClick={handleClick} />\r\n      <ErrorMessage errorMessage={errorMessage} bold={true} />\r\n    </div>\r\n  );\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 5-8-5h16zm0 12H4V8l8 5 8-5v10z\"\n});\n\nvar SvgOutlineEmail24Px = function SvgOutlineEmail24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineEmail24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-email-24px.8f9caefb.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 4h16v12H5.17L4 17.17V4m0-2c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2H4zm2 10h8v2H6v-2zm0-3h12v2H6V9zm0-3h12v2H6V6z\"\n});\n\nvar SvgOutlineChat24Px = function SvgOutlineChat24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineChat24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-chat-24px.c6c43fee.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n});\n\nvar SvgOutlineSearch24Px = function SvgOutlineSearch24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineSearch24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-search-24px.63de706a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 9c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 10H6v-1.53c0-2.5 3.97-3.58 6-3.58s6 1.08 6 3.58V18zm-9.69-2h7.38c-.69-.56-2.38-1.12-3.69-1.12s-3.01.56-3.69 1.12z\"\n});\n\nvar SvgOutlineAccountBox24Px = function SvgOutlineAccountBox24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineAccountBox24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-account_box-24px.dc60d700.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zM7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 2.88-2.88 7.19-5 9.88C9.92 16.21 7 11.85 7 9z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 12,\n  cy: 9,\n  r: 2.5\n});\n\nvar SvgOutlineLocationOn24Px = function SvgOutlineLocationOn24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineLocationOn24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-location_on-24px.b6c7e994.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n});\n\nvar SvgOutlineClose24Px = function SvgOutlineClose24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineClose24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-close-24px.62e7709e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n});\n\nvar SvgOutlineInfo24Px = function SvgOutlineInfo24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineInfo24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-info-24px.59d1a698.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n});\n\nvar SvgOutlineError24Px = function SvgOutlineError24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineError24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-error-24px.fccb5b63.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z\"\n});\n\nvar SvgOutlineHome24Px = function SvgOutlineHome24Px(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOutlineHome24Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/outline-home-24px.5a70e98d.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport \"ui-assets/css/ErrorMessage.css\";\r\nimport { ErrorMessage, ErrorMessageProps } from \"../components\";\r\nimport * as Icon from \"../icons\";\r\n\r\ntype ValidatedProps = ErrorMessageProps & {\r\n  // https://fettblog.eu/typescript-react/children/\r\n  // https://github.com/donaldpipowitch/typed-react-children-with-typescript\r\n  children: React.ReactElement;\r\n};\r\n\r\nexport const Validated = (props: ValidatedProps) => {\r\n  const { errorMessage } = props;\r\n\r\n  // https://stackoverflow.com/questions/36750387/react-adding-props-to-an-existing-component\r\n  const className = !props.children.props.className ? \"invalid\" : \"invalid \" + props.children.props.className;\r\n  const child = !errorMessage ? props.children : React.cloneElement(props.children, { className });\r\n  const icon = !errorMessage ? undefined : <Icon.Error className=\"error\" fill=\"#dc3d4c\" />;\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"validated\">\r\n        {child}\r\n        {icon}\r\n      </div>\r\n      <ErrorMessage errorMessage={errorMessage} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Data } from \"client/src\";\nimport React from \"react\";\nimport \"ui-assets/css/EditorTags.css\";\nimport { useSelectTags } from \"../hooks\";\n// this is to display a little 'x' SVG -- a Close icon which is displayed on each tag -- clicking it will delete the tag\n// also to display a little '(!)' SVG -- an Error icon which is displayed in the element, if there's a validation error\nimport * as Icon from \"../icons\";\n// this simply displays red text if non-empty text is passed to its errorMessage property\nimport { ErrorMessage } from \"./ErrorMessage\";\nimport { getOnSelectTags, log, ParentCallback, RenderedElement, Validation } from \"./SelectTagsState\";\n\ntype TagCount = Data.TagCount;\n\n// this defines the properties which you pass to the EditorTags functional component\ninterface EditorTagsProps extends Validation {\n  // the input/original tags to be edited (or an empty array if there are none)\n  inputTags: string[];\n  // the results are pushed back to the parent via this callback\n  result: ParentCallback;\n  // a function to fetch all existing tags from the server (for tag dictionary lookup)\n  getAllTags: () => Promise<TagCount[]>;\n}\n\nexport const EditorTags: React.FunctionComponent<EditorTagsProps> = (props) => {\n  const { inputTags, result, getAllTags } = props;\n  // get the state\n  const { state, dispatch, tagDictionary, assert, errorMessage } = useSelectTags(inputTags, getAllTags, props);\n  // get the event handlers\n  const { onEditorClick, onDeleteTag, onTagClick, onChange, onKeyDown, onHintResult } = getOnSelectTags(\n    assert,\n    props,\n    result,\n    dispatch,\n    state,\n    tagDictionary\n  );\n\n  /*\n    inputRef (data which is used by some of the event handlers)\n  */\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  /*\n    Event handlers (which dispatch to the reducer)\n  */\n\n  function handleEditorClick(e: React.MouseEvent) {\n    const isDiv = (e.target as HTMLElement).tagName === \"DIV\";\n    if (!isDiv) {\n      // this wasn't a click on the <div> itself, presumably instead a click on something inside the div\n      return;\n    }\n    onEditorClick(inputRef.current!);\n  }\n\n  function handleDeleteTag(index: number, e: React.MouseEvent) {\n    onDeleteTag(index, inputRef.current!);\n    e.preventDefault();\n  }\n\n  function handleTagClick(index: number, e: React.MouseEvent) {\n    onTagClick(index, inputRef.current!);\n    e.preventDefault();\n  }\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange(e.target);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent) {\n    if (onKeyDown(e.target as HTMLInputElement, e.key, e.shiftKey)) {\n      e.preventDefault();\n    }\n  }\n\n  function handleHintResult(outputTag: string) {\n    onHintResult(inputRef.current!, outputTag);\n  }\n\n  /*\n    Tag is a FunctionComponent to render each tag\n  */\n\n  interface TagProps {\n    text: string;\n    index: number;\n    isValid: boolean;\n  }\n  const Tag: React.FunctionComponent<TagProps> = (props) => {\n    const { text, index, isValid } = props;\n    // https://reactjs.org/docs/handling-events.html#passing-arguments-to-event-handlers\n    // eslint-disable-next-line\n    const close = (\n      <a onClick={(e) => handleDeleteTag(index, e)} title=\"Remove tag\">\n        <Icon.Close height=\"12\" />\n      </a>\n    );\n    const className = isValid ? \"tag\" : \"tag invalid\";\n    return (\n      <span className={className} onClick={(e) => handleTagClick(index, e)}>\n        {text}\n        {close}\n      </span>\n    );\n  };\n\n  /*\n    The return statement which yields the JSX.Element from this function component\n  */\n\n  function showValidationResult() {\n    const showError = props.showValidationError && !!state.validationError.length;\n    if (!showError) {\n      return {\n        className: \"tag-editor\",\n        icon: undefined,\n        validationError: undefined,\n      };\n    }\n    const className = \"tag-editor invalid validated\";\n    const icon = <Icon.Error className=\"error\" />;\n    const validationErrorMessage = state.validationError;\n    // use <a href={}> instead of <Link to={}> -- https://github.com/ReactTraining/react-router/issues/6344\n    const suffix =\n      validationErrorMessage[validationErrorMessage.length - 1] !== \";\" ? undefined : (\n        <React.Fragment>\n          {\"see a list of \"}\n          <a href={props.hrefAllTags} target=\"_blank\" rel=\"noopener noreferrer\">\n            popular tags\n          </a>\n          {\".\"}\n        </React.Fragment>\n      );\n    const validationError = (\n      <p className=\"error\">\n        {validationErrorMessage} {suffix}\n      </p>\n    );\n    return { validationError, icon, className };\n  }\n  const { validationError, icon, className } = showValidationResult();\n\n  function getElement(element: RenderedElement, index: number): React.ReactElement {\n    const isValid = !props.showValidationError || element.isValid;\n    return element.type === \"tag\" ? (\n      <Tag text={element.word} index={index} key={index} isValid={isValid} />\n    ) : (\n      <input\n        type=\"text\"\n        key=\"input\"\n        ref={inputRef}\n        className={isValid ? undefined : \"invalid\"}\n        width={10}\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onFocus={(e) => handleFocus(e, true)}\n        onBlur={(e) => handleFocus(e, false)}\n      />\n    );\n  }\n\n  return (\n    <div id=\"tag-both\">\n      <div className={className} onClickCapture={handleEditorClick}>\n        {state.elements.map(getElement)}\n        {icon}\n      </div>\n      <ShowHints hints={state.hints} inputValue={state.inputValue} result={handleHintResult} />\n      <ErrorMessage errorMessage={errorMessage} />\n      {validationError}\n    </div>\n  );\n};\n\n/*\n\n  ShowHints\n\n*/\n\ninterface ShowHintsProps {\n  // hints (from dictionary)\n  hints: TagCount[];\n  // the current value of the tag in the editor\n  inputValue: string;\n  // callback of tag selected from list of hints if user clicks on it\n  result: (outputTag: string) => void;\n}\nconst ShowHints: React.FunctionComponent<ShowHintsProps> = (props) => {\n  const { hints, inputValue, result } = props;\n  if (!inputValue.length) {\n    return <div className=\"tag-hints hidden\"></div>;\n  }\n  return (\n    <div className=\"tag-hints\">\n      {!hints.length\n        ? \"No results found.\"\n        : hints.map((hint) => <ShowHint hint={hint} inputValue={inputValue} result={result} key={hint.key} />)}\n    </div>\n  );\n};\n\ninterface ShowHintProps {\n  // hints (from dictionary)\n  hint: TagCount;\n  // the current value of the tag in the editor\n  inputValue: string;\n  // callback of tag selected from list of hints if user clicks on it\n  result: (outputTag: string) => void;\n}\nconst ShowHint: React.FunctionComponent<ShowHintProps> = (props) => {\n  const { hint, inputValue, result } = props;\n\n  function getTag(key: string) {\n    const index = key.indexOf(inputValue);\n    return (\n      <span className=\"tag\">\n        {index === -1 ? (\n          key\n        ) : (\n          <React.Fragment>\n            {key.substring(0, index)}\n            <span className=\"match\">{inputValue}</span>\n            {key.substring(index + inputValue.length)}\n          </React.Fragment>\n        )}\n      </span>\n    );\n  }\n  // the key with the matched letters highlighted\n  const tag = getTag(hint.key);\n  // count the number of times this tag is used elsewhere, if any\n  const count = hint.count ? <span className=\"multiplier\">×&nbsp;{hint.count}</span> : undefined;\n  // the summary, if any\n  const summary = hint.summary ? <p>{hint.summary}</p> : undefined;\n  // a link to more info i.e. the page which defines this tag\n  function getMore(key: string) {\n    const icon = <Icon.Info width=\"16\" height=\"16\" />;\n    // we use <a> here instead of <Link> because this link will open a whole new tab, i.e. another instance of this SPA\n    // in future I think it would be better to reimplement this as a split screen (two-column) view\n    const anchor = (\n      <a href={`/tags/${key}/info`} target=\"_blank\" rel=\"noopener noreferrer\">\n        {icon}\n      </a>\n    );\n    return <p className=\"more-info\">{anchor}</p>;\n  }\n  const more = getMore(hint.key);\n  return (\n    <div\n      className=\"hint\"\n      tabIndex={0}\n      key={hint.key}\n      onClick={(e) => result(hint.key)}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") result(hint.key);\n        e.preventDefault();\n      }}\n      onFocus={(e) => handleFocus(e, true)}\n      onBlur={(e) => handleFocus(e, false)}\n    >\n      {tag}\n      {count}\n      {summary}\n      {more}\n    </div>\n  );\n};\n\n// see [Simulating `:focus-within`](./EDITORTAGS.md#simulating-focus-within)\nfunction handleFocus(e: React.FocusEvent<HTMLElement>, hasFocus: boolean) {\n  function isElement(related: EventTarget | HTMLElement): related is HTMLElement {\n    return (related as HTMLElement).tagName !== undefined;\n  }\n  // read it\n  const target = e.target;\n  const relatedTarget = e.relatedTarget;\n  // relatedTarget is of type EventTarget -- upcast from that to HTMLElement\n  const related: HTMLElement | undefined = relatedTarget && isElement(relatedTarget) ? relatedTarget : undefined;\n  // get the tagName and className of the element\n  const relatedName = !relatedTarget ? \"!target\" : !related ? \"!element\" : related.tagName;\n  const relatedClass = !related ? \"\" : related.className;\n  // log it\n  const activeElement = document.activeElement;\n  const targetName = target.tagName;\n  const activeElementName = activeElement ? activeElement.tagName : \"!activeElement\";\n  log(\"handleFocus\", {\n    hasFocus,\n    targetName,\n    activeElementName,\n    relatedName,\n    relatedClass,\n  });\n  // calculate it\n  hasFocus = hasFocus || relatedClass === \"hint\";\n  // write the result\n  const div = document.getElementById(\"tag-both\")!;\n  if (hasFocus) {\n    div.className = \"focussed\";\n  } else {\n    div.className = \"\";\n  }\n}\n","import { config, Data, Url } from \"client/src\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport function getDiscussionsSubtitle(\r\n  title: string,\r\n  left: string,\r\n  tag: Data.Key | undefined,\r\n  sort: Url.DiscussionsSort | \"info\"\r\n) {\r\n  const info = !tag ? undefined : <NavLink to={Url.getTagInfoUrl(tag)}>Info</NavLink>;\r\n  const links =\r\n    !tag || sort === \"info\" ? undefined : (\r\n      <div className=\"minigrid links\">\r\n        <ul>\r\n          <li>\r\n            <Link to={Url.getTagInfoUrl(tag)}>Learn more…</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={Url.getTagEditUrl(tag)}>Improve tag info</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"minigrid\">\r\n        <h1>{title}</h1>\r\n        <div className=\"link\">\r\n          <Link to={Url.route.newDiscussion} className=\"linkbutton\">\r\n            {config.strNewQuestion.button}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {links}\r\n      <div className=\"minigrid subtitle\">\r\n        <div className=\"count\">{left}</div>\r\n        <div className=\"sort\">\r\n          {info}\r\n          <NavLink\r\n            to={Url.getDiscussionsOptionsUrl({ sort: \"Newest\", tag })}\r\n            className={sort === \"Newest\" ? \"selected\" : undefined}\r\n          >\r\n            Newest\r\n          </NavLink>\r\n          <NavLink\r\n            to={Url.getDiscussionsOptionsUrl({ sort: \"Active\", tag })}\r\n            className={sort === \"Active\" ? \"selected\" : undefined}\r\n          >\r\n            Active\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Data, Url } from \"client/src\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function getTagLink(tag: Data.Key): React.ReactElement {\r\n  const href = Url.getTagUrl(tag);\r\n  return (\r\n    <Link className=\"tag\" to={href}>\r\n      {tag.key}\r\n    </Link>\r\n  );\r\n}\r\n","import { Data } from \"client/src\";\r\nimport React from \"react\";\r\nimport { getTagLink } from \"./getTagLink\";\r\n\r\n// called from getDiscussionSummary, and getMessage (for each message within discussion)\r\nexport function getTags(tags: Data.Key[]) {\r\n  return (\r\n    <div className=\"topic\">\r\n      {tags.map((tag) => {\r\n        const link = getTagLink(tag);\r\n        // want whitespace between each tag\r\n        return <React.Fragment key={tag.key}>{link}&#32;</React.Fragment>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import { Data, Url } from \"client/src\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport type GravatarSize = \"small\" | \"big\" | \"huge\";\r\n\r\nexport function getUserSummary(\r\n  summary: Data.UserSummary,\r\n  option: { title: boolean; size: GravatarSize }\r\n): { userName: React.ReactElement; gravatar: React.ReactElement; key: string } {\r\n  const href = Url.getUserUrl(summary);\r\n  const userName = <NavLink to={href}>{summary.name}</NavLink>;\r\n  const size = option.size === \"small\" ? 32 : option.size === \"big\" ? 48 : 164;\r\n  // https://en.gravatar.com/site/implement/images/\r\n  const src = `https://www.gravatar.com/avatar/${summary.gravatarHash}?s=${size * 2}&d=identicon&r=PG`;\r\n  const img = <img src={src} alt={summary.name} width={size} height={size} />;\r\n  const title = option.title ? summary.name : undefined;\r\n  const gravatar = (\r\n    <NavLink to={href} title={title} className=\"gravatar\">\r\n      {img}\r\n    </NavLink>\r\n  );\r\n  return { userName, gravatar, key: href };\r\n}\r\n","import React from \"react\";\r\n\r\nexport function getWhen(when: string) {\r\n  return <div className=\"when\">{when}</div>;\r\n}\r\n","import { Data } from \"client/src\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { getUserSummary, GravatarSize } from \"./getUserSummary\";\r\nimport { getWhen } from \"./getWhen\";\r\n\r\nexport function getUserInfo(summary: Data.UserSummary, size: GravatarSize, when?: string): ReactElement {\r\n  const { userName, gravatar, key } = getUserSummary(summary, {\r\n    title: false,\r\n    size,\r\n  });\r\n  const showWhen = !when ? undefined : getWhen(when);\r\n  return (\r\n    <div className=\"user-info\" key={key}>\r\n      {showWhen}\r\n      {gravatar}\r\n      <div className=\"details\">\r\n        {userName}\r\n        {summary.location ? <span className=\"user-location\">{summary.location}</span> : undefined}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function toLocaleString(date: Date): string {\r\n  const month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"][date.getMonth()];\r\n  const year = new Date().getFullYear() === date.getFullYear() ? \"\" : ` '${(\"\" + date.getFullYear()).substring(2)}`;\r\n  const minutes = (\"\" + date.getMinutes()).padStart(2, \"0\");\r\n  return `${month} ${date.getDate()}${year} at ${date.getHours()}:${minutes}`;\r\n}\r\n","import { Data, Url } from \"client/src\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport type { KeyedItem } from \"../layouts\";\r\nimport { getTags } from \"./getTags\";\r\nimport { getUserInfo } from \"./getUserInfo\";\r\nimport { getWhen } from \"./getWhen\";\r\nimport { toLocaleString } from \"./toLocaleString\";\r\n\r\nexport function getDiscussionSummary(summary: Data.DiscussionSummary, short: boolean = false): KeyedItem {\r\n  const href = Url.getDiscussionUrl(summary);\r\n  const when = toLocaleString(new Date(summary.messageSummary.dateTime));\r\n  const stats = short ? undefined : (\r\n    <div className=\"stats\">\r\n      <div className=\"answers\">\r\n        <strong>{summary.nAnswers}</strong> {summary.nAnswers === 1 ? \"answer\" : \"answers\"}\r\n      </div>\r\n    </div>\r\n  );\r\n  const signature = short ? (\r\n    <div className=\"user-info\">{getWhen(when)}</div>\r\n  ) : (\r\n    getUserInfo(summary.messageSummary.userSummary, \"small\", when)\r\n  );\r\n  const element: React.ReactElement = (\r\n    <div className=\"discussion-summary\">\r\n      {stats}\r\n      <div className=\"summary\">\r\n        <h3>\r\n          <NavLink to={href}>{summary.name}</NavLink>\r\n        </h3>\r\n        <div className=\"excerpt\">{summary.messageSummary.messageExerpt}</div>\r\n        {getTags(summary.tags)}\r\n        {signature}\r\n      </div>\r\n    </div>\r\n  );\r\n  return { element, key: href };\r\n}\r\n","import { Data, toHtml } from \"client/src\";\r\nimport React from \"react\";\r\nimport type { KeyedItem } from \"../layouts\";\r\nimport { getTags } from \"./getTags\";\r\nimport { getUserInfo } from \"./getUserInfo\";\r\nimport { toLocaleString } from \"./toLocaleString\";\r\n\r\nfunction getMessage(message: Data.Message, index: number, tags?: Data.Key[]): KeyedItem {\r\n  const topic = tags ? getTags(tags) : undefined; // only the first message in a discussion has associated tags\r\n  const when = toLocaleString(new Date(message.dateTime));\r\n  const element = (\r\n    <React.Fragment>\r\n      <div className=\"message\">\r\n        <div dangerouslySetInnerHTML={toHtml(message.markdown)} />\r\n        {topic}\r\n        {getUserInfo(message.userSummary, \"small\", when)}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  return { key: \"\" + index, element };\r\n}\r\n\r\nexport function getFirstMessage(message: Data.Message, tags: Data.Key[]): KeyedItem {\r\n  return getMessage(message, 0, tags);\r\n}\r\n\r\nexport function getNextMessage(message: Data.Message, index: number): KeyedItem {\r\n  return getMessage(message, index + 1);\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function getNavLinks(\r\n  wanted: Array<{ text: string; n: number } | undefined>,\r\n  href: (page: number) => string,\r\n  title: (n: number) => string,\r\n  current: number,\r\n  spanifySelected: boolean\r\n): React.ReactElement[] {\r\n  return wanted.map((x, index) => {\r\n    if (!x) {\r\n      const before: number = (wanted[index - 1] as { text: string; n: number }).n;\r\n      return (\r\n        <span key={\"dots-\" + before} className=\"dots\">\r\n          …\r\n        </span>\r\n      );\r\n    }\r\n    const { text, n } = x;\r\n    if (spanifySelected && current === n) {\r\n      return (\r\n        <span className=\"selected\" key={text}>\r\n          {text}\r\n        </span>\r\n      );\r\n    }\r\n    const className = current === n ? \"selected\" : undefined;\r\n    return (\r\n      <NavLink to={href(n)} key={text} title={title(n)} className={className}>\r\n        {text}\r\n      </NavLink>\r\n    );\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { getNavLinks } from \"./getNavLinks\";\r\n\r\nfunction getPageNumbers(current: number, max: number): Array<{ text: string; n: number } | undefined> {\r\n  function numbers(first: number, last: number): Array<number | undefined> {\r\n    // https://stackoverflow.com/questions/3746725/how-to-create-an-array-containing-1-n\r\n    // says that convenient ways to do this are for higher versions of ES than supported in this project\r\n    const rc: number[] = [];\r\n    for (let i = first; i <= last; ++i) {\r\n      rc.push(i);\r\n    }\r\n    return rc;\r\n  }\r\n  const wanted: Array<number | undefined> =\r\n    max <= 6\r\n      ? numbers(1, max)\r\n      : current - 1 <= 3\r\n      ? numbers(1, 5).concat([undefined, max])\r\n      : max - current <= 3\r\n      ? [1, undefined].concat(numbers(max - 4, max))\r\n      : [1, undefined].concat(numbers(current - 2, current + 2)).concat(undefined, max);\r\n  const rc: Array<{ text: string; n: number } | undefined> = wanted.map((x) =>\r\n    x ? { text: \"\" + x, n: x } : undefined\r\n  );\r\n  if (current > 1) {\r\n    rc.unshift({ text: \"prev\", n: current - 1 });\r\n  }\r\n  if (current < max) {\r\n    rc.push({ text: \"next\", n: current + 1 });\r\n  }\r\n  return rc;\r\n}\r\n\r\nexport function getPageNavLinks(\r\n  current: number,\r\n  nTotal: number,\r\n  pageSize: number,\r\n  href: (page: number) => string\r\n): React.ReactElement[] {\r\n  const max = Math.floor(nTotal / pageSize) + (nTotal % pageSize ? 1 : 0);\r\n  const wanted = getPageNumbers(current, max);\r\n  return getNavLinks(wanted, href, (n) => \"go to page \" + n, current, true);\r\n}\r\n","import { Data } from \"client/src\";\r\nimport React from \"react\";\r\n\r\n// called from getActivityContent (nested in User)\r\nexport function getTagCount(tagCount: Data.TagCount) {\r\n  const { key, count } = tagCount;\r\n  const suffix = count && count !== 1 ? ` x ${count}` : undefined;\r\n  return (\r\n    <div className=\"topic\" key={key}>\r\n      <span className=\"tag\">{key}</span>\r\n      {suffix}\r\n    </div>\r\n  );\r\n}\r\n","import { SearchInput } from \"client/src\";\nimport React from \"react\";\nimport { ErrorMessage } from \"./ErrorMessage\";\nimport { useThrottledInput } from \"../hooks\";\n\ninterface ThrottledInputProps {\n  api: (input: SearchInput) => Promise<void>;\n  placeholder: string;\n}\n\nexport const ThrottledInput: React.FunctionComponent<ThrottledInputProps> = (props: ThrottledInputProps) => {\n  const { api, placeholder } = props;\n  const { value, setValue, errorMessage } = useThrottledInput(api);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => setValue(event.target.value);\n\n  return (\n    <React.Fragment>\n      <input type=\"text\" onChange={handleChange} value={value} placeholder={placeholder} />\n      <ErrorMessage errorMessage={errorMessage} />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\r\nimport { SearchInput } from \"client/src\";\r\n\r\n/*\r\n  This defines a throttled input control e.g. for a Search control.\r\n\r\n  - \"Throttled\" means \"no more than x per second\"\r\n  - \"Debounced\" means \"after silence of x msec\"\r\n\r\n  I prefer a \"throttled\" UI -- a debounced UI seems laggy because continuous input (without silence) causes no updates.\r\n\r\n  So the logic is:\r\n  \r\n  - When the user changes the input then the callback is invoked immediately\r\n  - The callback can't be invoked again until the previous callback completes and some time passes\r\n*/\r\n\r\n// delay at least 100 msec between API calls\r\nconst throttleDelay = 100;\r\n\r\nexport function useThrottledInput(api: (input: SearchInput) => Promise<void>) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [handled, setHandled] = React.useState(\"\");\r\n  const [errorMessage, setErrorMessage] = React.useState<string | undefined>(undefined);\r\n\r\n  const isRunning = React.useRef<boolean>(false);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => setValue(event.target.value);\r\n\r\n  function finished(handling: string): void {\r\n    isRunning.current = false;\r\n    setHandled(handling);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isRunning.current) {\r\n      // already running ... don't run now, run again when current run has completed\r\n      return;\r\n    }\r\n    // handle the current state\r\n    const handling = value;\r\n    if (handling === handled) {\r\n      // nothing new to do\r\n      return;\r\n    }\r\n    // remember we're running so this doesn't get reentered\r\n    isRunning.current = true;\r\n    // make the API call\r\n    api({ searchInput: handling })\r\n      .then(() => {\r\n        // do nothing here -- data from the API call was already handled in the implementation of the newData function\r\n      })\r\n      .catch((reason) => {\r\n        setErrorMessage(reason.message);\r\n      })\r\n      .finally(() => {\r\n        // wait a bit (in order to \"throttle\") before allowing the next API call\r\n        setTimeout(finished, throttleDelay, handling);\r\n      });\r\n  }, [value, handled, api]);\r\n\r\n  return { value, setValue, errorMessage };\r\n}\r\n","import { config, Route } from \"client/src\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"ui-assets/css/Topbar.css\";\nimport { getUserSummary } from \"../components\";\nimport { useMe } from \"../hooks\";\nimport * as Icon from \"../icons\";\n\nexport const Topbar: React.FunctionComponent = () => {\n  const me = useMe();\n  function showNotifications(e: React.MouseEvent) {\n    alert(\"To do: this can be the user's inbox where notifications are displayed\");\n    e.preventDefault();\n  }\n  return (\n    <div className=\"topbar\">\n      <div className=\"container\">\n        <ul className=\"icons\">\n          <li className=\"icon\">\n            <NavLink to=\"/home\" title=\"About\">\n              <Icon.Home width=\"24\" height=\"24\" />\n            </NavLink>\n          </li>\n          <li className=\"icon\">\n            <NavLink to={Route.tags} title={config.strTags}>\n              <Icon.Search width=\"24\" height=\"24\" />\n            </NavLink>\n          </li>\n          {me ? (\n            <React.Fragment>\n              <li className=\"icon\">\n                <NavLink to={Route.discussions} title={config.strQuestions}>\n                  <Icon.Message width=\"24\" height=\"24\" />\n                </NavLink>\n              </li>\n              <li className=\"icon\">\n                <NavLink to={Route.users} title=\"Users\">\n                  <Icon.UserProfile width=\"24\" height=\"24\" />\n                </NavLink>\n              </li>\n              <li className=\"icon\">\n                <NavLink to=\"/index\" title=\"Notifications\" onClick={showNotifications}>\n                  <Icon.Mail width=\"24\" height=\"24\" />\n                </NavLink>\n              </li>\n              <li className=\"icon\">{getUserSummary(me, { title: true, size: \"small\" }).gravatar}</li>\n            </React.Fragment>\n          ) : (\n            <li className=\"text\">\n              <NavLink to={Route.login} className=\"login\">\n                Join this community\n              </NavLink>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { config } from \"client/src\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"ui-assets/css/PageLayout.css\";\nimport * as Icon from \"../icons\";\nimport { Layout, RightContent, SubTabs, Tabs } from \"./Layout\";\nimport type { MainContent, Width } from \"./Layout\";\n\n/*\n  Implementation details\n*/\n\nfunction setTitle(title: string): void {\n  document.title = `${title} - ${config.appname}`;\n}\n\nfunction renderSubTabs(subTabs: SubTabs) {\n  return (\n    <div className=\"tab-head subtabs\" key=\"subMenu\">\n      <div className=\"tabs\">\n        <h2>{subTabs.text}</h2>\n        <div>\n          {subTabs.tabs.map((tab, index) => (\n            <NavLink to={tab.href} key={\"\" + index} className={index === subTabs.selected ? \"selected\" : undefined}>\n              {tab.text}\n            </NavLink>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction renderContent(content: MainContent, subTabs?: SubTabs, footer?: React.ReactElement) {\n  if (Array.isArray(content)) {\n    const elements = content.map((x, index) => {\n      const subMenu = index === 1 && subTabs ? renderSubTabs(subTabs) : undefined;\n      const className = index === 0 && subTabs ? \"element first\" : \"element\";\n      return (\n        <React.Fragment key={\"\" + index}>\n          {subMenu}\n          <div className={className} key={x.key}>\n            {x.element}\n          </div>\n        </React.Fragment>\n      );\n    });\n    return !footer ? (\n      elements\n    ) : (\n      <React.Fragment>\n        {elements}\n        <div className=\"element\" key=\"footer\">\n          {footer}\n        </div>\n      </React.Fragment>\n    );\n  }\n  return (\n    <React.Fragment>\n      {content}\n      {footer}\n    </React.Fragment>\n  );\n}\n\nfunction renderTabs(main: Tabs, isTop: boolean) {\n  const className = !isTop ? \"tab-head\" : \"tab-head profile\";\n  const slug = main.tabbed[main.selected].slug;\n  const slugDiv = !slug ? undefined : <div className=\"slug\">{slug}</div>;\n  return (\n    <React.Fragment>\n      <div className={className}>\n        <div className=\"tabs\">\n          {main.tabbed.map((tab, index) => (\n            <NavLink\n              to={tab.navlink.href}\n              key={\"\" + index}\n              className={index === main.selected ? \"selected\" : undefined}\n            >\n              {tab.navlink.text}\n            </NavLink>\n          ))}\n          {slugDiv}\n        </div>\n      </div>\n      <div className=\"tabbed\">\n        {main.tabbed.map((tab, index) => {\n          return (\n            <div className={index !== main.selected ? \"hidden\" : undefined} key={\"\" + index}>\n              {renderContent(tab.content, tab.subTabs)}\n            </div>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction renderRightColumn(right?: RightContent) {\n  if (!right) {\n    return { rightColumn: null, rightButton: null };\n  }\n\n  const refDiv = React.createRef<HTMLDivElement>();\n  const refButton = React.createRef<HTMLButtonElement>();\n\n  function hideOrShow(show: boolean) {\n    const boundDiv = refDiv.current;\n    const boundButton = refButton.current;\n    if (!boundDiv || !boundButton) {\n      return;\n    }\n    if (show) {\n      boundDiv.classList.remove(\"hidden\");\n      boundButton.classList.add(\"hidden\");\n    } else {\n      boundDiv.classList.add(\"hidden\");\n      boundButton.classList.remove(\"hidden\");\n    }\n  }\n  function handleShowDiv(event: React.MouseEvent<HTMLButtonElement>): void {\n    hideOrShow(true);\n    event.preventDefault();\n  }\n  function handleHideDiv(event: React.MouseEvent<HTMLButtonElement>): void {\n    hideOrShow(false);\n    event.preventDefault();\n  }\n\n  function className(name: string, visible: boolean) {\n    return visible ? name : name + \" hidden\";\n  }\n\n  const rightButton = (\n    <button\n      className={className(\"column-right-button\", !right.visible)}\n      type=\"button\"\n      onClick={handleShowDiv}\n      ref={refButton}\n    >\n      {right.showButtonLabel}\n    </button>\n  );\n\n  const closeButton = (\n    <button className=\"column-close-button\" type=\"button\" onClick={handleHideDiv} title=\"Close\">\n      <Icon.Close width=\"16\" height=\"16\" />\n    </button>\n  );\n\n  const rightColumn = (\n    <div className={className(\"column-right\", right.visible)} style={{ width: right.width }} ref={refDiv}>\n      {closeButton}\n      {right.element}\n    </div>\n  );\n\n  return { rightColumn, rightButton };\n}\n\nfunction isTabs(main: Tabs | any): main is Tabs {\n  return (main as Tabs).tabbed !== undefined;\n}\n\nfunction switchLayout(layout: Layout) {\n  const { rightColumn, rightButton } = renderRightColumn(layout.right);\n\n  function getClassName(width: Width): string {\n    switch (width) {\n      case \"Full\":\n        return \"column-wide\";\n      case \"Grid\":\n        return \"column-text grid\";\n      case \"Closed\":\n        return \"column-text closed\";\n      case \"Open\":\n        return \"column-text open\";\n      case \"None\":\n        return \"column-text none\";\n      default:\n        throw new Error(\"not implemented\");\n    }\n  }\n  const className = getClassName(layout.width);\n\n  if (isTabs(layout.main)) {\n    // tabs are located above the header and the header is inside the first tab\n    setTitle(layout.main.title);\n    return <div className={className}>{renderTabs(layout.main, true)}</div>;\n  }\n\n  const mainColumn = renderContent(layout.main.content, layout.main.subTabs, layout.main.footer);\n  setTitle(layout.main.title);\n\n  const title = layout.main.subtitle ? layout.main.subtitle : <h1>{layout.main.title}</h1>;\n\n  if (layout.width !== \"Full\") {\n    return (\n      <React.Fragment>\n        <div className={className}>\n          {rightButton}\n          <div className=\"header\">{title}</div>\n          <div className=\"content\">{mainColumn}</div>\n        </div>\n        {rightColumn}\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <div className={className}>\n          {rightButton}\n          {mainColumn}\n        </div>\n        {rightColumn}\n      </React.Fragment>\n    );\n  }\n}\n\nexport function renderLayout(layout: Layout): React.ReactElement {\n  const contents = switchLayout(layout);\n  return <div className=\"all-columns\">{contents}</div>;\n}\n","import React from \"react\";\r\nimport { FetchingT } from \"../hooks\";\r\nimport { Layout } from \"./Layout\";\r\nimport { renderLayout } from \"./renderLayout\";\r\n\r\nexport type { KeyedItem, Layout, MainContent, RightContent, SubTabs, Tab, Tabs, Width } from \"./Layout\";\r\nexport { renderLayout } from \"./renderLayout\";\r\n\r\nexport interface FetchedT<TData, TParam2> {\r\n  data: TData;\r\n  reload: () => void;\r\n  newData: (param2: TParam2) => Promise<void>;\r\n}\r\n\r\nexport type ShowDataT<TData, TParam2> = (fetched: FetchedT<TData, TParam2>) => Layout;\r\n\r\nexport function getPage<TData, TParam2>(\r\n  fetched: FetchingT<TData, TParam2>,\r\n  showData: ShowDataT<TData, TParam2>\r\n): React.ReactElement {\r\n  const { data, error, reload, newData } = fetched;\r\n\r\n  const layout: Layout = data\r\n    ? showData({ data, reload, newData }) // render the data\r\n    : error\r\n    ? loadingError(error) // else render error message\r\n    : loadingContents; // else no data yet to render\r\n\r\n  return renderLayout(layout);\r\n}\r\n\r\nconst loadingContents: Layout = {\r\n  main: { title: \"Loading...\", content: \"...\" },\r\n  width: \"Closed\",\r\n};\r\n\r\nfunction loadingError(error: Error): Layout {\r\n  const url = (error as any).url;\r\n  const what = url ? <p>URL: \"{url}\"</p> : { undefined };\r\n  const content = (\r\n    <React.Fragment>\r\n      {what}\r\n      <p>Error: {error.message}</p>\r\n    </React.Fragment>\r\n  );\r\n  return { main: { title: \"Error\", content }, width: \"Open\" };\r\n}\r\n","import { toHtml } from 'client/src';\r\nimport React from 'react';\r\n\r\nimport { htmlToReact } from '../components';\r\nimport { FetchingT, useApi, useFetchApi2 } from '../hooks';\r\nimport { FetchedT, getPage, Layout, ShowDataT } from '../layouts';\r\n\r\ntype FetchedIsHtml = { isHtml: boolean };\r\n\r\nexport const Home: React.FunctionComponent = () => {\r\n  const isHtml = false;\r\n  const filename = isHtml ? \"home.html\" : \"home.md\";\r\n  const api = useApi();\r\n  const fetching: FetchingT<string, void> = useFetchApi2(api.getPublic, filename);\r\n  const showData: ShowDataT<string, void> = (fetched: FetchedT<string, void>) => showHome(fetched, { isHtml });\r\n  return getPage(fetching, showData);\r\n};\r\n\r\nfunction showHome(fetched: FetchedT<string, void>, extra: { isHtml: boolean }): Layout {\r\n  const { data } = fetched;\r\n  const { isHtml } = extra;\r\n  function parse() {\r\n    const lines = data.split(/\\r?\\n/);\r\n    const found = lines.find((s) => s.startsWith(isHtml ? \"<h1>\" : \"# \"));\r\n    if (found) {\r\n      const title = isHtml ? found.substring(4, found.length - 5).trim() : found.substring(2).trim();\r\n      const sliced = lines.slice(1).join(\"\\r\\n\");\r\n\r\n      return { title, sliced };\r\n    } else {\r\n      return { title: \"Untitled?\", sliced: data };\r\n    }\r\n  }\r\n  const { title, sliced } = parse();\r\n  const html = isHtml ? sliced : toHtml(sliced).__html;\r\n  // htmlToReact(html) replaces `<a>` with `<Link>` instead of using `<div dangerouslySetInnerHTML={{ __html: html }} />`\r\n  const content = htmlToReact(html);\r\n  return { main: { title, content }, width: \"Open\" };\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// this uses the \"html-to-react\" package, to transform <a> in the HTML string to <Link> elements\n// if we didn't need that transformation we could just do <div dangerouslySetInnerHTML={html} />\n\n// [Whitespace text nodes cannot appear as a child of `<table>`](https://github.com/aknuds1/html-to-react/issues/79)\nfunction trimHtml(html: string): string {\n  // React expects no whitespace between table elements\n  html = html.replace(/<table>\\s*<thead>/g, \"<table><thead>\");\n  html = html.replace(/<table>\\s*<tbody>/g, \"<table><tbody>\");\n  html = html.replace(/<thead>\\s*<tr>/g, \"<thead><tr>\");\n  html = html.replace(/<tbody>\\s*<tr>/g, \"<tbody><tr>\");\n  html = html.replace(/<tr>\\s*<th>/g, \"<tr><th>\");\n  html = html.replace(/<tr>\\s*<td>/g, \"<tr><td>\");\n\n  html = html.replace(/<\\/thead>\\s*<tbody>/g, \"</thead><tbody>\");\n\n  html = html.replace(/<\\/thead>\\s*<\\/table>/g, \"</thead></table>\");\n  html = html.replace(/<\\/tbody>\\s*<\\/table>/g, \"</tbody></table>\");\n  html = html.replace(/<\\/tr>\\s*<\\/thead>/g, \"</tr></thead>\");\n  html = html.replace(/<\\/tr>\\s*<\\/tbody>/g, \"</tr></tbody>\");\n  html = html.replace(/<\\/th>\\s*<\\/tr>/g, \"</th></tr>\");\n  html = html.replace(/<\\/td>\\s*<\\/tr>/g, \"</td></tr>\");\n\n  html = html.replace(/<\\/tr>\\s*<tr>/g, \"</tr><tr>\");\n  html = html.replace(/<\\/th>\\s*<th>/g, \"</th><th>\");\n  html = html.replace(/<\\/td>\\s*<td>/g, \"</td><td>\");\n  return html;\n}\n\nexport function htmlToReact(html: string): React.ReactElement {\n  html = trimHtml(html);\n  // console.log(html);\n\n  var { Parser, ProcessNodeDefinitions } = require(\"html-to-react\");\n  var parser = new Parser();\n  var processNodeDefinitions = new ProcessNodeDefinitions(React);\n  var isValidNode = function () {\n    return true;\n  };\n  // these \"node\" values aren't DOM nodes, so I type them here as type \"any\"\n  // `html-to-react` uses `htmlparser2` as its parser, which uses `domhandler` for its DOM,\n  // which uses e.g. \"parent\" instead of \"parentElement\" as a property name.\n  var processingInstructions = [\n    {\n      // Custom <a> processing\n      shouldProcessNode: function (node: any) {\n        return node.name === \"a\";\n      },\n      processNode: function (node: any, children: any) {\n        var href = node.attribs[\"href\"];\n        return React.createElement(Link, { to: href }, children);\n      },\n    },\n    {\n      // Anything else\n      shouldProcessNode: function (node: Node) {\n        return true;\n      },\n      processNode: processNodeDefinitions.processDefaultNode,\n    },\n  ];\n  var reactElement = parser.parseWithInstructions(`<div>${html}</div>`, isValidNode, processingInstructions);\n  return reactElement;\n}\n","import { Data } from 'client/src';\r\nimport React from 'react';\r\n\r\nimport { getUserInfo } from '../components';\r\nimport { useApi, useFetchApi } from '../hooks';\r\nimport { FetchedT, getPage, Layout } from '../layouts';\r\n\r\nexport const Users: React.FunctionComponent = () => {\r\n  const api = useApi();\r\n  return getPage(useFetchApi(api.getUsers), showUsers);\r\n};\r\n\r\nfunction showUsers(fetched: FetchedT<Data.UserSummaryEx[], void>): Layout {\r\n  const { data } = fetched;\r\n  const users: React.ReactElement = (\r\n    <div className=\"all-users\">\r\n      {data.map((user) => {\r\n        return getUserInfo(user, \"big\");\r\n      })}\r\n    </div>\r\n  );\r\n  return {\r\n    main: { content: users, title: \"Users\" },\r\n    width: \"Grid\",\r\n  };\r\n}\r\n","import { config, Data, Post } from 'client/src';\r\nimport React from 'react';\r\n\r\nimport { Input, useApi, useValidatedInput } from '../hooks';\r\n\r\ninterface AnswerDiscussionProps {\r\n  discussionId: number;\r\n  reload: () => void;\r\n}\r\nexport const AnswerDiscussion: React.FunctionComponent<AnswerDiscussionProps> = (props) => {\r\n  type T = Post.NewMessage;\r\n  const api = useApi();\r\n\r\n  // created the validated elements and the submit button\r\n  const inputs: Map<keyof T, Input> = new Map<keyof T, Input>([\r\n    [\r\n      \"markdown\",\r\n      {\r\n        label: \"Body\",\r\n        hideLabel: true,\r\n        options: { minLength: config.minLengths.body },\r\n        create: { type: \"editor\" },\r\n      },\r\n    ],\r\n  ]);\r\n  const initialState: T = { markdown: \"\" };\r\n  const buttonText = { label: \"Post Your Answer\", noun: \"answer\" };\r\n  const { currentState, isError, button, mapInputs, onSubmitError } = useValidatedInput<T>(\r\n    inputs,\r\n    initialState,\r\n    buttonText\r\n  );\r\n\r\n  const { discussionId, reload } = props;\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n    if (isError) {\r\n      // error messages are already displayed\r\n      return;\r\n    }\r\n    api\r\n      .newMessage(discussionId, currentState)\r\n      .then((__message: Data.Message) => {\r\n        // could push the received message into the display\r\n        // but instead let's force a reload e.g. to see whether any other user has posted too\r\n        reload();\r\n      })\r\n      .catch(onSubmitError);\r\n  }\r\n\r\n  const form = (\r\n    <form className=\"editor\" onSubmit={handleSubmit}>\r\n      <h2>Your Answer</h2>\r\n      {mapInputs.get(\"markdown\")}\r\n      <div className=\"submit\">{button}</div>\r\n    </form>\r\n  );\r\n\r\n  return form;\r\n};\r\n","import { Data, Post, Url } from 'client/src';\r\nimport { History } from 'history';\r\nimport React from 'react';\r\n\r\nimport { Input, useApi, useValidatedInput } from '../hooks';\r\n\r\n/*\r\n  Edit Tag Info\r\n*/\r\n\r\ninterface EditTagInfoProps {\r\n  history: History;\r\n  tag: string;\r\n  summary?: string;\r\n  markdown?: string;\r\n}\r\nexport const EditTagInfo: React.FunctionComponent<EditTagInfoProps> = (props: EditTagInfoProps) => {\r\n  type T = Post.EditTagInfo;\r\n  const api = useApi();\r\n\r\n  const { min: minLength, max: maxLength } = Data.tagSummaryLength;\r\n\r\n  const inputs: Map<keyof T, Input> = new Map<keyof T, Input>([\r\n    [\r\n      \"summary\",\r\n      {\r\n        label: \"Summary\",\r\n        options: { minLength },\r\n        create: {\r\n          type: \"textarea\",\r\n          placeholder: \"\",\r\n          attributes: { rows: 7, maxLength },\r\n        },\r\n      },\r\n    ],\r\n    [\r\n      \"markdown\",\r\n      {\r\n        label: \"Description\",\r\n        options: { optional: true },\r\n        create: { type: \"editor\" },\r\n      },\r\n    ],\r\n  ]);\r\n  // reuse the default values for the initial state\r\n  const { summary, markdown } = props;\r\n  const initialState: T = {\r\n    summary: summary ? summary : \"\",\r\n    markdown: markdown ? markdown : \"\",\r\n  };\r\n\r\n  const buttonText = { label: \"Save Edits\", noun: \"post\" };\r\n  const { currentState, isError, button, mapInputs, onSubmitError } = useValidatedInput<T>(\r\n    inputs,\r\n    initialState,\r\n    buttonText\r\n  );\r\n\r\n  function getSummaryHint(): string {\r\n    const count: number = maxLength - currentState.summary.length;\r\n    return `${count} characters left`;\r\n  }\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n    if (isError) {\r\n      // error messages are already displayed\r\n      return;\r\n    }\r\n    // post edited profile to the server\r\n    api\r\n      .editTagInfo(props.tag, currentState)\r\n      .then((tag: Data.Key) => {\r\n        // construct the URL of the newly-edited user\r\n        const url = Url.getTagInfoUrl(tag);\r\n        // use history.push() to navigate programmatically\r\n        // https://reacttraining.com/react-router/web/api/history\r\n        // https://stackoverflow.com/questions/31079081/programmatically-navigate-using-react-router\r\n        props.history.push(url);\r\n      })\r\n      .catch(onSubmitError);\r\n  }\r\n\r\n  return (\r\n    <form className=\"editor tag-wiki\" onSubmit={handleSubmit}>\r\n      <div className=\"element\">\r\n        {mapInputs.get(\"summary\")}\r\n        <p className=\"hint\">(plain text only, no Markdown formatting)</p>\r\n        <p className=\"hint next\">{getSummaryHint()}</p>\r\n      </div>\r\n      <div className=\"element\">{mapInputs.get(\"markdown\")}</div>\r\n      <div className=\"element\">{button}</div>\r\n    </form>\r\n  );\r\n};\r\n","import { Data, Post, Url } from 'client/src';\r\nimport { History } from 'history';\r\nimport React from 'react';\r\n\r\nimport { Input, useApi, useValidatedInput } from '../hooks';\r\n\r\n// this is a separate function component instead of just being incide the getSettingsContent function\r\n// [because it contains hooks](https://reactjs.org/docs/hooks-rules.html#only-call-hooks-from-react-functions)\r\ninterface EditUserSettingsProps {\r\n  history: History;\r\n  name: string;\r\n  location?: string;\r\n  aboutMe?: string;\r\n  email: string;\r\n  userId: number;\r\n  gravatar: React.ReactElement;\r\n}\r\nexport const EditUserSettings: React.FunctionComponent<EditUserSettingsProps> = (props: EditUserSettingsProps) => {\r\n  type T = Post.EditUserProfile;\r\n  const api = useApi();\r\n\r\n  const inputs: Map<keyof T, Input> = new Map<keyof T, Input>([\r\n    [\r\n      \"name\",\r\n      {\r\n        label: \"Display name\",\r\n        options: {},\r\n        create: { type: \"input\", placeholder: \"required\", attributes: {} },\r\n      },\r\n    ],\r\n    [\r\n      \"location\",\r\n      {\r\n        label: \"Location (optional)\",\r\n        options: { optional: true },\r\n        create: { type: \"input\", placeholder: \"optional\", attributes: {} },\r\n      },\r\n    ],\r\n    [\r\n      \"email\",\r\n      {\r\n        label: \"Email\",\r\n        options: {},\r\n        create: { type: \"input\", placeholder: \"required\", attributes: {} },\r\n      },\r\n    ],\r\n    [\r\n      \"aboutMe\",\r\n      {\r\n        label: \"About me\",\r\n        options: { optional: true },\r\n        create: { type: \"editor\" },\r\n      },\r\n    ],\r\n  ]);\r\n  // reuse the default values for the initial state\r\n  const { name, location, email, aboutMe } = props;\r\n  const initialState: T = {\r\n    name,\r\n    location: location ? location : \"\",\r\n    email,\r\n    aboutMe: aboutMe ? aboutMe : \"\",\r\n  };\r\n  const buttonText = { label: \"Save Changes\", noun: \"changed settings\" };\r\n  const { currentState, isError, button, mapInputs, onSubmitError } = useValidatedInput<T>(\r\n    inputs,\r\n    initialState,\r\n    buttonText\r\n  );\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n    if (isError) {\r\n      // error messages are already displayed\r\n      return;\r\n    }\r\n    // post edited profile to the server\r\n    api\r\n      .editUserProfile(props.userId, currentState)\r\n      .then((idName: Data.IdName) => {\r\n        // construct the URL of the newly-edited user\r\n        const url = Url.getUserUrl(idName);\r\n        // use history.push() to navigate programmatically\r\n        // https://reacttraining.com/react-router/web/api/history\r\n        // https://stackoverflow.com/questions/31079081/programmatically-navigate-using-react-router\r\n        props.history.push(url);\r\n      })\r\n      .catch(onSubmitError);\r\n  }\r\n\r\n  return (\r\n    <form className=\"editor settings\" onSubmit={handleSubmit}>\r\n      <h1>Edit</h1>\r\n      <h2>Public information</h2>\r\n      <div className=\"public\">\r\n        {props.gravatar}\r\n        <div className=\"column\">\r\n          {mapInputs.get(\"name\")}\r\n          {mapInputs.get(\"location\")}\r\n        </div>\r\n      </div>\r\n      {mapInputs.get(\"aboutMe\")}\r\n      <h2>Private settings</h2>\r\n      {mapInputs.get(\"email\")}\r\n      <div className=\"submit\">{button}</div>\r\n    </form>\r\n  );\r\n};\r\n","import 'ui-assets/css/Login.css';\r\n\r\nimport { Data, Post } from 'client/src';\r\nimport React from 'react';\r\n\r\nimport { Input, useApi, useSetMe, useValidatedInput } from '../hooks';\r\n\r\nexport const Login: React.FunctionComponent = () => {\r\n  type T = Post.Login;\r\n  const api = useApi();\r\n\r\n  const inputs: Map<keyof T, Input> = new Map<keyof T, Input>([\r\n    [\r\n      \"userName\",\r\n      {\r\n        label: \"Username\",\r\n        hideLabel: true,\r\n        options: {},\r\n        create: { type: \"input\", placeholder: \"Username\", attributes: {} },\r\n      },\r\n    ],\r\n    [\r\n      \"password\",\r\n      {\r\n        label: \"Password\",\r\n        hideLabel: true,\r\n        options: {},\r\n        create: { type: \"input\", placeholder: \"Password\", attributes: {} },\r\n      },\r\n    ],\r\n  ]);\r\n  // reuse the default values for the initial state\r\n  const initialState: T = { userName: \"\", password: \"\" };\r\n  const buttonText = { label: \"Submit\", noun: \"login\" };\r\n  const { currentState, isError, button, mapInputs, onSubmitError } = useValidatedInput<T>(\r\n    inputs,\r\n    initialState,\r\n    buttonText\r\n  );\r\n\r\n  const setMe = useSetMe();\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n    if (isError) {\r\n      // error messages are already displayed\r\n      return;\r\n    }\r\n    api\r\n      .login(currentState)\r\n      .then((userSummary: Data.UserSummary) => setMe(userSummary))\r\n      .catch(onSubmitError);\r\n  }\r\n\r\n  const content = (\r\n    <React.Fragment>\r\n      <p>This will be a login page, with user name and password.</p>\r\n      <p>For this prototype, just press the button to simulate a login.</p>\r\n      <form className=\"login\" onSubmit={handleSubmit}>\r\n        <div className=\"p\">{mapInputs.get(\"userName\")}</div>\r\n        <div className=\"p\">{mapInputs.get(\"password\")}</div>\r\n        <div className=\"p\">{button}</div>\r\n      </form>\r\n      <h3>Only in this prototype</h3>\r\n      <p>The UI details for creating a new account are not defined yet.</p>\r\n      <p>If you refresh the page, then this application is reloaded and:</p>\r\n      <ul>\r\n        <li>The login is reset</li>\r\n        <li>Any other data you entered is reset</li>\r\n      </ul>\r\n      <p>This is a prototype of the UI, without a server: so any data you enter isn't permanently stored anywhere.</p>\r\n    </React.Fragment>\r\n  );\r\n  return content;\r\n};\r\n","import { config, Data, Post, Url } from 'client/src';\r\nimport { History } from 'history';\r\nimport React from 'react';\r\n\r\nimport { EditorTags, OutputTags } from '../components';\r\nimport { Input, useApi, useValidatedInput } from '../hooks';\r\n\r\ntype NewDiscussionProps = { history: History };\r\nexport const NewDiscussion: React.FunctionComponent<NewDiscussionProps> = (props: NewDiscussionProps) => {\r\n  type T = Post.NewDiscussion;\r\n  const api = useApi();\r\n\r\n  const inputs: Map<keyof T, Input> = new Map<keyof T, Input>([\r\n    [\r\n      \"title\",\r\n      {\r\n        label: \"Title\",\r\n        options: { minLength: config.minLengths.title },\r\n        create: { type: \"input\", placeholder: \"\", attributes: {} },\r\n      },\r\n    ],\r\n    [\r\n      \"markdown\",\r\n      {\r\n        label: \"Body\",\r\n        options: { minLength: config.minLengths.body },\r\n        create: { type: \"editor\" },\r\n      },\r\n    ],\r\n  ]);\r\n  // reuse the default values for the initial state\r\n  const initialState: T = { title: \"\", markdown: \"\", tags: [] };\r\n  const buttonText = {\r\n    label: config.strNewQuestion.button,\r\n    noun: config.strNewQuestion.noun,\r\n  };\r\n  const { currentState, isError, isAfterSubmit, button, mapInputs, onSubmitError } = useValidatedInput<T>(\r\n    inputs,\r\n    initialState,\r\n    buttonText\r\n  );\r\n\r\n  // tags are handle separately ... the validation etc. in ErrorMessage.tsx is only for string elements\r\n  // whereas tags are string[]\r\n  const [outputTags, setOutputTags] = React.useState<OutputTags>({\r\n    tags: [],\r\n    isValid: false,\r\n  });\r\n\r\n  const { history } = props;\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n    if (isError || !outputTags.isValid) {\r\n      // error messages are already displayed\r\n      return;\r\n    }\r\n    api\r\n      .newDiscussion({ ...currentState, tags: outputTags.tags })\r\n      .then((idName: Data.IdName) => {\r\n        // construct the URL of the newly-created discussion\r\n        const url = Url.getDiscussionUrl(idName);\r\n        history.push(url);\r\n      })\r\n      .catch(onSubmitError);\r\n  }\r\n\r\n  const emptyTags: string[] = [];\r\n  const { minimum, maximum, canNewTag } = config.tagValidation;\r\n  const form = (\r\n    <form className=\"editor\" onSubmit={handleSubmit}>\r\n      <div className=\"element\">{mapInputs.get(\"title\")}</div>\r\n      <div className=\"element\">{mapInputs.get(\"markdown\")}</div>\r\n      <div className=\"element\">\r\n        <label htmlFor=\"tags\">Tags</label>\r\n        <EditorTags\r\n          inputTags={emptyTags}\r\n          result={setOutputTags}\r\n          getAllTags={api.getAllTags}\r\n          minimum={minimum}\r\n          maximum={maximum}\r\n          canNewTag={canNewTag}\r\n          showValidationError={isAfterSubmit}\r\n          hrefAllTags={Url.route.tags}\r\n        />\r\n      </div>\r\n      <div className=\"element\">{button}</div>\r\n    </form>\r\n  );\r\n\r\n  return form;\r\n};\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { ErrorMessage } from \"../components\";\r\n\r\nexport const NotFound: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  return notFound(props);\r\n};\r\n\r\nexport function notFound(props: RouteComponentProps, error?: string) {\r\n  const pathname = props.location.pathname;\r\n  return (\r\n    <div>\r\n      <h3>Not Found</h3>\r\n      <p>\r\n        No page found for <code>{pathname}</code>\r\n      </p>\r\n      <ErrorMessage errorMessage={error} />\r\n    </div>\r\n  );\r\n}\r\n","import { config, Data, toHtml, Url } from 'client/src';\r\nimport { History } from 'history';\r\nimport React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { getDiscussionSummary, getTagCount, getUserSummary } from '../components';\r\nimport { EditUserSettings } from '../forms';\r\nimport { FetchingT, useApi, useFetchApi2, useMe } from '../hooks';\r\nimport * as Icon from '../icons';\r\nimport { FetchedT, getPage, KeyedItem, Layout, MainContent, ShowDataT, SubTabs, Tab, Tabs } from '../layouts';\r\nimport { notFound } from './NotFound';\r\n\r\nexport const User: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  const parsed = Url.isUserOptions(props.location);\r\n  const me = useMe();\r\n  if (Url.isParserError(parsed)) {\r\n    return notFound(props, parsed.error);\r\n  }\r\n  const { userTabType, user } = parsed;\r\n  const canEdit = !!me && user.id === me.id;\r\n  switch (userTabType) {\r\n    case \"Profile\":\r\n    case undefined:\r\n      return <UserProfile {...props} id={user.id} name={user.name} canEdit={canEdit} />;\r\n    case \"EditSettings\":\r\n      if (!canEdit) {\r\n        return notFound(props, \"You cannot edit another user's profile\");\r\n      }\r\n      return <UserEditSettings {...props} id={user.id} name={user.name} canEdit={canEdit} />;\r\n    case \"Activity\":\r\n      const options = Url.isUserActivityOptions(props.location);\r\n      if (Url.isParserError(options)) {\r\n        return notFound(props, options.error);\r\n      }\r\n      return <UserActivity {...props} options={options} canEdit={canEdit} />;\r\n    default:\r\n      return notFound(props, \"Unexpected userTabType\");\r\n  }\r\n};\r\n\r\n// these are used as TExtra types\r\ntype UserCanEdit = { canEdit: boolean };\r\ntype UserCanEditAndHistory = UserCanEdit & { history: History };\r\n\r\ntype UserProps = RouteComponentProps & Data.IdName & UserCanEdit;\r\nconst UserProfile: React.FunctionComponent<UserProps> = (props: UserProps) => {\r\n  const { id, name, canEdit } = props;\r\n  const idName = React.useMemo<Data.IdName>(() => {\r\n    return { id, name };\r\n  }, [id, name]);\r\n\r\n  const api = useApi();\r\n  const fetching: FetchingT<Data.User, void> = useFetchApi2(api.getUser, idName);\r\n  const showData: ShowDataT<Data.User, void> = (fetched: FetchedT<Data.User, void>) =>\r\n    showUserProfile(fetched, { canEdit });\r\n\r\n  return getPage(fetching, showData);\r\n};\r\n\r\nconst UserEditSettings: React.FunctionComponent<UserProps> = (props: UserProps) => {\r\n  const { id, name, canEdit, history } = props;\r\n  const idName = React.useMemo<Data.IdName>(() => {\r\n    return { id, name };\r\n  }, [id, name]);\r\n\r\n  const api = useApi();\r\n  const fetching: FetchingT<Data.User, void> = useFetchApi2(api.getUser, idName);\r\n  const showData: ShowDataT<Data.User, void> = (fetched: FetchedT<Data.User, void>) =>\r\n    showUserSettings(fetched, { canEdit, history });\r\n\r\n  return getPage(fetching, showData);\r\n};\r\n\r\ntype UserActivityProps = RouteComponentProps & {\r\n  options: Url.UserActivityOptions;\r\n} & UserCanEdit;\r\nconst UserActivity: React.FunctionComponent<UserActivityProps> = (props: UserActivityProps) => {\r\n  // UserActivity may have extra search options, same as for Discussions, which the profile tab doesn't have\r\n  const { user, userTabType, sort, page } = props.options;\r\n  const { canEdit } = props;\r\n  const { id, name } = user;\r\n  const options = React.useMemo<Url.UserActivityOptions>(() => {\r\n    return { user: { id, name }, userTabType, sort, page };\r\n  }, [id, name, userTabType, sort, page]);\r\n\r\n  const api = useApi();\r\n  const fetching: FetchingT<Data.UserActivity, void> = useFetchApi2(api.getUserActivity, options);\r\n  const showData: ShowDataT<Data.UserActivity, void> = (fetched: FetchedT<Data.UserActivity, void>) =>\r\n    showUserActivity(fetched, { canEdit });\r\n\r\n  return getPage(fetching, showData);\r\n};\r\n\r\nexport function showUserProfile(fetched: FetchedT<Data.User, void>, extra: { canEdit: boolean }): Layout {\r\n  const { data: user } = fetched;\r\n  const gravatar = getUserSummary(user, {\r\n    title: false,\r\n    size: \"huge\",\r\n  }).gravatar;\r\n  const { aboutMe, location } = user;\r\n  const aboutMeDiv = !aboutMe ? undefined : <div dangerouslySetInnerHTML={toHtml(aboutMe)} />;\r\n  const content = (\r\n    <div className=\"user-profile profile\">\r\n      {gravatar}\r\n      <div className=\"column\">\r\n        <h1>{user.name}</h1>\r\n        {location ? (\r\n          <p className=\"location\">\r\n            <Icon.Location width=\"24\" height=\"24\" /> {location}\r\n          </p>\r\n        ) : undefined}\r\n        <div className=\"about\">\r\n          <h3>About me</h3>\r\n          {aboutMeDiv}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return showCommonUserLayout(user, \"Profile\", content, extra.canEdit);\r\n}\r\n\r\nexport function showUserSettings(\r\n  fetched: FetchedT<Data.User, void>,\r\n  extra: { canEdit: boolean; history: History }\r\n): Layout {\r\n  const { data: user } = fetched;\r\n  const gravatar = getUserSummary(user, {\r\n    title: false,\r\n    size: \"huge\",\r\n  }).gravatar;\r\n  // EditUserSettings is a separate function component instead of just being incide the getSettingsContent function\r\n  // [because it contains hooks](https://reactjs.org/docs/hooks-rules.html#only-call-hooks-from-react-functions)\r\n  const content = (\r\n    <div className=\"user-profile settings\">\r\n      <EditUserSettings\r\n        history={extra.history}\r\n        name={user.name}\r\n        location={user.location}\r\n        aboutMe={user.aboutMe}\r\n        email={user.preferences!.email}\r\n        userId={user.id}\r\n        gravatar={gravatar}\r\n      />\r\n    </div>\r\n  );\r\n  return showCommonUserLayout(user, \"EditSettings\", content, extra.canEdit);\r\n}\r\n\r\nexport function showUserActivity(fetched: FetchedT<Data.UserActivity, void>, extra: { canEdit: boolean }): Layout {\r\n  const { data: activity } = fetched;\r\n  function getActivityContent(): ReadonlyArray<KeyedItem> {\r\n    if (!activity.summaries.length) {\r\n      return [{ element: <p>This user has not posted any messages.</p>, key: \"none\" }];\r\n    }\r\n    const tagCounts = activity.tagCounts.sort((x, y) => x.key.localeCompare(y.key));\r\n    const tags = (\r\n      <React.Fragment>\r\n        <h2>{`${activity.tagCounts.length} ${config.strTags}`}</h2>\r\n        <div className=\"tags\">{tagCounts.map(getTagCount)}</div>\r\n      </React.Fragment>\r\n    );\r\n    const first: KeyedItem = { element: tags, key: \"tags\" };\r\n    const next: KeyedItem[] = activity.summaries.map((summary) => getDiscussionSummary(summary, true));\r\n    return [first].concat(next);\r\n  }\r\n  const content = getActivityContent();\r\n\r\n  function getActivityUrl(user: Data.IdName, sort: Url.ActivitySort) {\r\n    return Url.getUserActivityUrl({ user, userTabType: \"Activity\", sort });\r\n  }\r\n  const subTabs: SubTabs = {\r\n    text: activity.summaries.length === 1 ? \"1 Message\" : `${activity.summaries.length} Messages`,\r\n    selected: activity.range.sort === \"Newest\" ? 0 : 1,\r\n    tabs: [\r\n      { text: \"newest\", href: getActivityUrl(activity.summary, \"Newest\") },\r\n      { text: \"oldest\", href: getActivityUrl(activity.summary, \"Oldest\") },\r\n    ],\r\n  };\r\n\r\n  return showCommonUserLayout(activity.summary, \"Activity\", content, extra.canEdit, subTabs);\r\n}\r\n\r\n// create a Layout that's common to all three user tabs\r\nfunction showCommonUserLayout(\r\n  summary: Data.UserSummary,\r\n  userTabType: Url.UserTabType,\r\n  content: MainContent,\r\n  canEdit: boolean,\r\n  subTabs?: SubTabs\r\n): Layout {\r\n  const gravatarSmall = getUserSummary(summary, {\r\n    title: false,\r\n    size: \"small\",\r\n  }).gravatar;\r\n  const slug = (\r\n    <React.Fragment>\r\n      <h1>{summary.name}</h1>\r\n      {gravatarSmall}\r\n    </React.Fragment>\r\n  );\r\n\r\n  // the tab definitions\r\n\r\n  const profile: Tab = {\r\n    navlink: {\r\n      href: Url.getUserOptionsUrl({ user: summary, userTabType: \"Profile\" }),\r\n      text: \"Profile\",\r\n    },\r\n    content: <p>To be supplied</p>,\r\n  };\r\n\r\n  const settings: Tab = {\r\n    navlink: {\r\n      href: Url.getUserOptionsUrl({ user: summary, userTabType: \"EditSettings\" }),\r\n      text: \"Edit\",\r\n    },\r\n    content: <p>Not authorized</p>,\r\n    slug,\r\n  };\r\n\r\n  const activity: Tab = {\r\n    navlink: {\r\n      href: Url.getUserOptionsUrl({ user: summary, userTabType: \"Activity\" }),\r\n      text: \"Activity\",\r\n    },\r\n    content: <p>To be supplied</p>,\r\n    subTabs,\r\n    slug,\r\n  };\r\n\r\n  function getSelected(): number {\r\n    switch (userTabType) {\r\n      case \"Profile\":\r\n        profile.content = content;\r\n        return 0;\r\n      case \"EditSettings\":\r\n        if (canEdit) {\r\n          settings.content = content;\r\n        }\r\n        return 1;\r\n      case \"Activity\":\r\n        activity.content = content;\r\n        return canEdit ? 2 : 1;\r\n      default:\r\n        throw new Error(\"Unexpected userTabType\");\r\n    }\r\n  }\r\n  const selected = getSelected();\r\n\r\n  const tabs: Tabs = {\r\n    selected,\r\n    title: summary.name,\r\n    tabbed: canEdit ? [profile, settings!, activity] : [profile, activity],\r\n  };\r\n\r\n  return {\r\n    main: tabs,\r\n    width: \"Closed\",\r\n  };\r\n}\r\n","import { config, Data, Url } from 'client/src';\r\nimport React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { getDiscussionsSubtitle, getDiscussionSummary, getNavLinks, getPageNavLinks } from '../components';\r\nimport { useApi, useFetchApi2 } from '../hooks';\r\nimport { FetchedT, getPage, Layout } from '../layouts';\r\nimport { notFound } from './NotFound';\r\n\r\nexport const Discussions: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  // get the options\r\n  const options = Url.isDiscussionsOptions(props.location);\r\n  if (Url.isParserError(options)) {\r\n    return notFound(props, options.error);\r\n  }\r\n  // split options into its components instead of passing whole options\r\n  // otherwise the eslint \"react-hooks/exhaustive-deps\" rule wil complain when we use useMemo\r\n  return <DiscussionsList sort={options.sort} pagesize={options.pagesize} page={options.page} tag={options.tag} />;\r\n};\r\n\r\nconst DiscussionsList: React.FunctionComponent<Url.DiscussionsOptions> = (props: Url.DiscussionsOptions) => {\r\n  const { sort, pagesize, page, tag } = props;\r\n  const options: Url.DiscussionsOptions = React.useMemo(() => {\r\n    return { sort, pagesize, page, tag };\r\n  }, [sort, pagesize, page, tag]);\r\n\r\n  const api = useApi();\r\n  return getPage(useFetchApi2(api.getDiscussions, options), showDiscussions);\r\n};\r\n\r\nfunction showDiscussions(fetched: FetchedT<Data.Discussions, void>): Layout {\r\n  const { data } = fetched;\r\n  const { range, summaries } = data;\r\n  const { pageNumber, nTotal, pageSize, sort, tag } = range;\r\n  const title = !tag\r\n    ? `All ${config.strQuestions}`\r\n    : `${sort === \"Newest\" ? \"Newest\" : \"Recently Active\"} '${tag.key}' ${config.strQuestions}`;\r\n\r\n  const subtitle = getDiscussionsSubtitle(title, formatNumber(nTotal, config.strQuestions), tag, sort);\r\n\r\n  const footer = (\r\n    <React.Fragment>\r\n      <div className=\"minigrid footer\">\r\n        <div className=\"page\">\r\n          {getPageNavLinks(pageNumber, nTotal, pageSize, (page) => Url.getDiscussionsOptionsUrl({ page, sort, tag }))}\r\n        </div>\r\n        <div className=\"page\">\r\n          {getNavLinks(\r\n            [15, 30, 50].map((n) => {\r\n              return { text: \"\" + n, n };\r\n            }),\r\n            (n: number) => Url.getDiscussionsOptionsUrl({ pagesize: n as Url.PageSize, tag }),\r\n            (n: number) => `show ${n} items per page`,\r\n            pageSize,\r\n            false\r\n          )}\r\n          <span className=\"dots\">per page</span>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const content = summaries.map((summary) => getDiscussionSummary(summary));\r\n\r\n  return {\r\n    main: { content, title, subtitle, footer },\r\n    width: \"Closed\",\r\n  };\r\n}\r\n\r\nfunction formatNumber(count: number, things: string) {\r\n  // https://blog.abelotech.com/posts/number-currency-formatting-javascript/\r\n  const rc = count.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") + \" \" + things.toLowerCase();\r\n  return count === 1 && things[things.length - 1] === \"s\" ? rc.substring(0, rc.length - 1) : rc;\r\n}\r\n","import { Data, Url } from 'client/src';\r\nimport React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { getFirstMessage, getNextMessage, getPageNavLinks } from '../components';\r\nimport { AnswerDiscussion } from '../forms';\r\nimport { useApi, useFetchApi2 } from '../hooks';\r\nimport { FetchedT, getPage, KeyedItem, Layout, SubTabs } from '../layouts';\r\nimport { notFound } from './NotFound';\r\n\r\nexport const Discussion: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  const parsed = Url.isDiscussionOptions(props.location);\r\n  if (Url.isParserError(parsed)) {\r\n    return notFound(props, parsed.error);\r\n  }\r\n\r\n  return <DiscussionId discussion={parsed.discussion} sort={parsed.sort} page={parsed.page} />;\r\n};\r\n\r\nconst DiscussionId: React.FunctionComponent<Url.DiscussionOptions> = (props: Url.DiscussionOptions) => {\r\n  const { sort, discussion, page } = props;\r\n  const options: Url.DiscussionOptions = React.useMemo(() => {\r\n    return {\r\n      sort,\r\n      page,\r\n      discussion: { id: discussion.id, name: discussion.name },\r\n    };\r\n  }, [sort, discussion.id, discussion.name, page]);\r\n  const api = useApi();\r\n  return getPage(useFetchApi2(api.getDiscussion, options), showDiscussion);\r\n};\r\n\r\nexport function showDiscussion(fetched: FetchedT<Data.Discussion, void>): Layout {\r\n  const { data, reload } = fetched;\r\n  const { id, name, tags, first, range, messages } = data;\r\n  const { nTotal } = range;\r\n\r\n  const subTabs: SubTabs | undefined = !nTotal\r\n    ? undefined\r\n    : {\r\n        text: nTotal === 1 ? \"1 Answer\" : `${nTotal} Answers`,\r\n        selected: data.range.sort === \"Newest\" ? 0 : 1,\r\n        tabs: [\r\n          {\r\n            text: \"newest\",\r\n            href: Url.getDiscussionOptionsUrl({\r\n              discussion: data,\r\n              sort: \"Newest\",\r\n            }),\r\n          },\r\n          {\r\n            text: \"oldest\",\r\n            href: Url.getDiscussionOptionsUrl({\r\n              discussion: data,\r\n              sort: \"Oldest\",\r\n            }),\r\n          },\r\n        ],\r\n      };\r\n\r\n  const content: KeyedItem[] = [];\r\n  content.push(getFirstMessage(first, tags));\r\n  messages.forEach((message, index) => content.push(getNextMessage(message, index)));\r\n\r\n  const footer =\r\n    range.nTotal > range.pageSize ? (\r\n      <div className=\"footer\">\r\n        <div className=\"index\">\r\n          {getPageNavLinks(range.pageNumber, range.nTotal, range.pageSize, (page) =>\r\n            Url.getDiscussionOptionsUrl({\r\n              discussion: data,\r\n              page,\r\n              sort: range.sort,\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    ) : undefined;\r\n\r\n  const yourAnswer = <AnswerDiscussion discussionId={id} reload={reload} />;\r\n  content.push({ element: yourAnswer, key: \"editor\" });\r\n\r\n  return {\r\n    main: { content, title: name, subTabs, footer },\r\n    width: \"Open\",\r\n  };\r\n}\r\n","import { config } from \"client/src\";\r\nimport React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { NewDiscussion as NewDiscussionElement } from \"../forms\";\r\nimport { Layout, renderLayout } from \"../layouts\";\r\n\r\nexport const NewDiscussion: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  // this is unusual because we don't need to fetch data before rendering this element\r\n  const content = <NewDiscussionElement history={props.history} />;\r\n  const title = config.strNewQuestion.title;\r\n  const layout: Layout = {\r\n    main: { content, title },\r\n    width: \"None\",\r\n  };\r\n  return renderLayout(layout);\r\n};\r\n","import { config, Data, SearchInput, Url } from 'client/src';\r\nimport React from 'react';\r\nimport { Link, NavLink, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { getPageNavLinks, getTagLink, ThrottledInput } from '../components';\r\nimport { useApi, useFetchApi2 } from '../hooks';\r\nimport * as Icon from '../icons';\r\nimport { FetchedT, getPage, Layout } from '../layouts';\r\nimport { notFound } from './NotFound';\r\n\r\nexport const Tags: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  // get the options\r\n  const options = Url.isTagsOptions(props.location);\r\n  if (Url.isParserError(options)) {\r\n    return notFound(props, options.error);\r\n  }\r\n  return <TagsList sort={options.sort} pagesize={options.pagesize} page={options.page} />;\r\n};\r\n\r\nconst TagsList: React.FunctionComponent<Url.TagsOptions> = (props: Url.TagsOptions) => {\r\n  const { sort, pagesize, page } = props;\r\n  const options: Url.TagsOptions = React.useMemo(() => {\r\n    return { sort, pagesize, page };\r\n  }, [sort, pagesize, page]);\r\n\r\n  const api = useApi();\r\n  return getPage(useFetchApi2(api.getTags, options), showTags);\r\n};\r\n\r\nfunction showTags(fetched: FetchedT<Data.Tags, SearchInput>): Layout {\r\n  const { data, newData } = fetched;\r\n  const { range, tagCounts } = data;\r\n  const title = config.strTags;\r\n\r\n  // the header (subtitle) and footer are like (copy-and-pasted) those from the Discussions page\r\n\r\n  const search = (\r\n    <div className=\"search\">\r\n      <ThrottledInput api={newData} placeholder=\"Filter by tag name\" />\r\n      <Icon.Search />\r\n    </div>\r\n  );\r\n\r\n  const subtitle = (\r\n    <React.Fragment>\r\n      <div className=\"minigrid\">\r\n        <h1>{title}</h1>\r\n      </div>\r\n      <div className=\"minigrid subtitle\">\r\n        <div className=\"count\">{search}</div>\r\n        <div className=\"sort\">\r\n          <NavLink\r\n            to={Url.getTagsOptionsUrl({ sort: \"Popular\" })}\r\n            className={range.sort === \"Popular\" ? \"selected\" : undefined}\r\n          >\r\n            Popular\r\n          </NavLink>\r\n          <NavLink\r\n            to={Url.getTagsOptionsUrl({ sort: \"Name\" })}\r\n            className={range.sort === \"Name\" ? \"selected\" : undefined}\r\n          >\r\n            Name\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const footer = (\r\n    <React.Fragment>\r\n      <div className=\"minigrid footer\">\r\n        <div className=\"page\"></div>\r\n        <div className=\"page\">\r\n          {getPageNavLinks(range.pageNumber, range.nTotal, range.pageSize, (page) =>\r\n            Url.getTagsOptionsUrl({ page, sort: range.sort })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  function getTagInfo(tagCount: Data.TagCount) {\r\n    // similar to the ShowHint function in EditorTags.tsx\r\n    const key = tagCount.key;\r\n    const tag = getTagLink(tagCount);\r\n    const count = tagCount.count ? <span className=\"multiplier\">×&nbsp;{tagCount.count}</span> : undefined;\r\n    const summary = tagCount.summary ? <div className=\"exerpt\">{tagCount.summary}</div> : undefined;\r\n    const edit = (\r\n      <div>\r\n        <Link className=\"edit-link\" to={Url.getTagEditUrl({ key })}>\r\n          edit\r\n        </Link>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"tag-info\" key={key}>\r\n        {tag}\r\n        {count}\r\n        {summary}\r\n        {edit}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // the content is like that of the User page\r\n  const contentTags: React.ReactElement = (\r\n    <div className=\"all-tags\">\r\n      {tagCounts.map((tagCount) => {\r\n        return getTagInfo(tagCount);\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  return {\r\n    main: { content: contentTags, title, subtitle, footer },\r\n    width: \"Grid\",\r\n  };\r\n}\r\n","import { Data, toHtml, Url } from 'client/src';\r\nimport { History } from 'history';\r\nimport React from 'react';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { getDiscussionsSubtitle } from '../components';\r\nimport { EditTagInfo } from '../forms';\r\nimport { useApi, useFetchApi2 } from '../hooks';\r\nimport { FetchedT, getPage, Layout, ShowDataT } from '../layouts';\r\nimport { notFound } from './NotFound';\r\n\r\nexport const Tag: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  const info = Url.isTagInfo(props.location);\r\n  if (!Url.isParserError(info)) {\r\n    return <TagId tag={info.key} word=\"info\" history={props.history} />;\r\n  }\r\n  const edit = Url.isTagEdit(props.location);\r\n  if (!Url.isParserError(edit)) {\r\n    return <TagId tag={edit.key} word=\"edit\" history={props.history} />;\r\n  }\r\n  return notFound(props);\r\n};\r\n\r\ntype TagIdProps = Url.InfoOrEdit & { history: History; tag: string };\r\nconst TagId: React.FunctionComponent<TagIdProps> = (props: TagIdProps) => {\r\n  const { tag, word, history } = props;\r\n\r\n  // include word as a dependency because we want to re-render if word changes,\r\n  // even though { word } isn't required in the TParam parameter passed to useGetLayout2\r\n  const key: Data.Key & Url.InfoOrEdit = React.useMemo(() => {\r\n    return { key: tag, word };\r\n  }, [tag, word]);\r\n\r\n  const showData: ShowDataT<Data.TagInfo, void> = (fetched: FetchedT<Data.TagInfo, void>) =>\r\n    showTag(fetched, { word, history });\r\n  const api = useApi();\r\n  return getPage(useFetchApi2(api.getTag, key), showData);\r\n};\r\n\r\ntype TagExtra = Url.InfoOrEdit & { history: History };\r\nfunction showTag(fetched: FetchedT<Data.TagInfo, void>, extra: TagExtra): Layout {\r\n  const { data } = fetched;\r\n  const { word } = extra;\r\n\r\n  const title = word === \"edit\" ? `Editing tag info for '${data.key}'` : `About '${data.key}'`;\r\n\r\n  const subtitle = word === \"edit\" ? undefined : getDiscussionsSubtitle(title, \"Tag Info\", data, \"info\");\r\n\r\n  function infoContent() {\r\n    const summary = data.summary ? data.summary : \"There is no summary for this tag … yet!\";\r\n    const markdown = data.markdown ? (\r\n      <div dangerouslySetInnerHTML={toHtml(data.markdown)}></div>\r\n    ) : (\r\n      <div className=\"summary none\">{\"There is no information for this tag … yet!\"}</div>\r\n    );\r\n    const buttonText = !!data.summary && !!data.markdown ? \"Edit Tag info\" : \"Create Tag Info\";\r\n    return (\r\n      <div className=\"tag-wiki\">\r\n        <div className=\"summary\">{summary}</div>\r\n        {markdown}\r\n        <div className=\"link\">\r\n          <Link to={Url.getTagEditUrl(data)} className=\"linkbutton\">\r\n            {buttonText}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const content =\r\n    word === \"edit\" ? (\r\n      <EditTagInfo tag={data.key} history={extra.history} summary={data.summary} markdown={data.markdown} />\r\n    ) : (\r\n      infoContent()\r\n    );\r\n  const layout: Layout = {\r\n    main: { content, title, subtitle },\r\n    width: \"None\",\r\n  };\r\n  return layout;\r\n}\r\n","import React from \"react\";\nimport { Login as LoginForm } from \"../forms\";\nimport { Layout, renderLayout } from \"../layouts\";\n\nexport const Login: React.FunctionComponent = () => {\n  const content = <LoginForm />;\n  const layout: Layout = { main: { content, title: \"Login\" }, width: \"Open\" };\n  return renderLayout(layout);\n};\n","import { Data } from 'client/src';\r\nimport React from 'react';\r\n\r\nimport { getImageSummary, getTagSummary } from '../components';\r\nimport { useApi, useFetchApi } from '../hooks';\r\nimport { FetchedT, getPage, KeyedItem, Layout } from '../layouts';\r\n\r\nexport const SiteMap: React.FunctionComponent = () => {\r\n  const api = useApi();\r\n  return getPage(useFetchApi(api.getSiteMap), showSiteMap);\r\n};\r\n\r\nfunction showSiteMap(fetched: FetchedT<Data.SiteMap, void>): Layout {\r\n  const { data } = fetched;\r\n  const content: KeyedItem[] = [];\r\n\r\n  /*\r\n    visitors can see:\r\n    - image document[s]\r\n    - (featured) articles\r\n    - (text) sources\r\n\r\n    and cannot see:\r\n    - users\r\n    - discussions\r\n    - feaure reports\r\n    - notable omissions\r\n  */\r\n\r\n  // render the images\r\n  data.images.forEach((x) => content.push(getImageSummary(x)));\r\n\r\n  const features = (\r\n    <React.Fragment>\r\n      <h2>Features</h2>\r\n      <div className=\"features\">\r\n        {data.tags.map((tag) => {\r\n          const content = getTagSummary(tag);\r\n          /*\r\n            either we need to add whitespace between elements ...\r\n            - https://github.com/facebook/react/issues/1643\r\n            - https://reactjs.org/blog/2014/02/20/react-v0.9.html#jsx-whitespace\r\n            ... or to add whitespace between spans ...\r\n            - https://github.com/facebook/react/issues/1643#issuecomment-321439506\r\n          */\r\n          return <span key={content.key}>{content.element}</span>;\r\n        })}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  content.push({ element: features, key: \"Feature\" });\r\n\r\n  return { main: { title: \"Site Map\", content }, width: \"Closed\" };\r\n}\r\n","import { Data, toHtml, Url } from \"client/src\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport type { KeyedItem } from \"../layouts\";\r\n\r\nexport function getImageSummary(summary: Data.ImageSummary): KeyedItem {\r\n  const href = Url.getImageUrl(summary);\r\n  const element: React.ReactElement = (\r\n    <React.Fragment>\r\n      <h3>\r\n        <NavLink to={href}>{summary.name}</NavLink>\r\n      </h3>\r\n      <div dangerouslySetInnerHTML={toHtml(summary.summary)} />\r\n    </React.Fragment>\r\n  );\r\n  return { element, key: href };\r\n}\r\n","import { Data, Url } from \"client/src\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport type { KeyedItem } from \"../layouts\";\r\n\r\nconst nbsp = \"\\u00A0\";\r\n\r\nexport function getTagSummary(summary: Data.SiteTagCount): KeyedItem {\r\n  const href = Url.getTagUrl(summary);\r\n  const label = summary.title.replace(\" \", nbsp);\r\n  const element = <NavLink to={href}>{label}</NavLink>;\r\n  return { element, key: href };\r\n}\r\n","import { Data, Url } from 'client/src';\r\nimport React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { useApi, useFetchApi2 } from '../hooks';\r\nimport { FetchedT, getPage, Layout } from '../layouts';\r\nimport { notFound } from './NotFound';\r\n\r\nexport const Image: React.FunctionComponent<RouteComponentProps> = (props: RouteComponentProps) => {\r\n  const parsed = Url.isImage(props.location);\r\n  if (Url.isParserError(parsed)) {\r\n    return notFound(props, parsed.error);\r\n  }\r\n\r\n  // see https://stackoverflow.com/questions/55990985/is-this-a-safe-way-to-avoid-did-you-accidentally-call-a-react-hook\r\n  // I'm not sure whether or why it's necessary to instantiate it like `<ImageId />` instead\r\n  // of calling it as a function like `ImageId({imageId: imageId})` but I do it anyway.\r\n  // So far as I can tell from testing, what really matters is the array of dependencies passed to useEffects.\r\n  return <ImageId id={parsed.id} name={parsed.name} />;\r\n};\r\n\r\nconst ImageId: React.FunctionComponent<Data.IdName> = (props: Data.IdName) => {\r\n  // ImageId is a separate function component because there's an `if` statement at the top of the Image cmpnent\r\n  // https://overreacted.io/a-complete-guide-to-useeffect/#but-i-cant-put-this-function-inside-an-effect\r\n\r\n  const { id, name } = props;\r\n  const idName = React.useMemo<Data.IdName>(() => {\r\n    return { id, name };\r\n  }, [id, name]);\r\n\r\n  const api = useApi();\r\n  return getPage(useFetchApi2(api.getImage, idName), showImage);\r\n};\r\n\r\nfunction showImage(fetched: FetchedT<Data.Image, void>): Layout {\r\n  const { data } = fetched;\r\n  const images = (\r\n    <div className=\"image-images\">\r\n      <img src={data.image.src} height={data.image.height} width={data.image.width} alt=\"\" />\r\n    </div>\r\n  );\r\n  const right = !data.layers\r\n    ? undefined\r\n    : {\r\n        element: renderLayers(data.layers, 0),\r\n        width: data.layersWidth,\r\n        showButtonLabel: \"Show Layers\",\r\n        visible: true,\r\n      };\r\n  return {\r\n    main: { content: images, title: data.name },\r\n    width: \"Full\",\r\n    right,\r\n  };\r\n}\r\nfunction getLayerKey(layer: Data.LayerNode): string {\r\n  return layer.alias ? layer.alias : layer.name.toLowerCase().replace(\"&\", \"and\").replace(\" \", \"-\");\r\n}\r\n\r\nfunction handleLayerChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n  const target = event.target;\r\n  const alias: string | null = target.getAttribute(\"name\");\r\n  const checked: boolean = target.checked;\r\n  alert(`In the non-prototype this would ${checked ? \"show\" : \"hide\"} the '${alias}' image layer`);\r\n}\r\n\r\nfunction renderNode(node: Data.LayerNode, alias: string): React.ReactElement {\r\n  // https://stackoverflow.com/questions/26615779/react-checkbox-not-sending-onchange\r\n  return (\r\n    <label>\r\n      <input type=\"checkbox\" defaultChecked={true} onChange={handleLayerChange} name={alias} />\r\n      {node.name}\r\n    </label>\r\n  );\r\n}\r\n\r\nfunction renderLayers(layers: Data.ImageLayers, level: number): React.ReactElement {\r\n  const className = level === 0 ? \"image-layers\" : undefined;\r\n  const listItems = layers.map((node) => {\r\n    const alias = getLayerKey(node);\r\n    return (\r\n      <li key={alias} className={node.children ? \"parent\" : undefined}>\r\n        {renderNode(node, alias)}\r\n        {node.children && renderLayers(node.children, level + 1)}\r\n      </li>\r\n    );\r\n  });\r\n  return <ul className={className}>{listItems}</ul>;\r\n}\r\n","import 'ui-assets/css/App.css';\n\nimport { Api, config, Route } from 'client/src';\nimport React from 'react';\nimport * as ReactRouter from 'react-router-dom';\n\nimport { Topbar } from './components';\nimport { AppContext, useCreateMe } from './hooks';\nimport * as Page from './routes';\n\n/*\n  This defines the App's routes\n  and the context (like global data) which is available to any child elements which it creates.\n*/\n\ninterface AppOptions {\n  api: Api;\n}\n\nconst App: React.FunctionComponent<AppOptions> = (appOptions: AppOptions) => {\n  // pass the identity of the logged-in user to subcomponents via AppContext, instead of explicitly as parameter\n  const [me, setMe] = useCreateMe();\n\n  const { api } = appOptions;\n\n  document.title = `${config.appname}`;\n\n  // plus https://reacttraining.com/react-router/web/api/BrowserRouter\n  return (\n    <AppContext.Provider value={{ me, setMe, api }}>\n      <ReactRouter.BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AppRoutes />\n      </ReactRouter.BrowserRouter>\n    </AppContext.Provider>\n  );\n};\n\nconst AppRoutes: React.FunctionComponent = () => {\n  // https://reacttraining.com/react-router/web/api/Switch\n  return (\n    <React.Fragment>\n      <Topbar />\n      <ReactRouter.Switch>\n        <ReactRouter.Route exact path=\"/index\" component={Page.SiteMap} />\n        <ReactRouter.Route exact path=\"/\" component={Page.Discussions} />\n        <ReactRouter.Route exact path=\"/home\" component={Page.Home} />\n        <ReactRouter.Route exact path={Route.login} component={Page.Login} />\n        <ReactRouter.Route exact path={Route.siteMap} component={Page.SiteMap} />\n        <ReactRouter.Route exact path={Route.discussions} component={Page.Discussions} />\n        <ReactRouter.Route exact path={Route.newDiscussion} component={Page.NewDiscussion} />\n        <ReactRouter.Route exact path={Route.users} component={Page.Users} />\n        <ReactRouter.Route exact path={Route.tags} component={Page.Tags} />\n        <ReactRouter.Route path={Route.discussionsTagged} component={Page.Discussions} />\n        <ReactRouter.Route path={Route.users} component={Page.User} />\n        <ReactRouter.Route path={Route.images} component={Page.Image} />\n        <ReactRouter.Route path={Route.discussions} component={Page.Discussion} />\n        <ReactRouter.Route path={Route.tags} component={Page.Tag} />\n        <ReactRouter.Route component={Page.NotFound} />\n      </ReactRouter.Switch>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import 'normalize.css';\n\nimport { Api, getApi } from 'client/src';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { mockFetch } from 'server-mock/src';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// same as index-client.ts except with server-mock\nconst api: Api = getApi(mockFetch);\n\nReactDOM.render(<App api={api} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Data, Message, Post, SearchInput, SimpleResponse, Url } from 'shared-lib';\n\n// you could temporarily change this to enable logging, for debugging\nconst isLogging = false;\n\nexport interface Api {\n  // methods to get data\n  getSiteMap(): Promise<Data.SiteMap>;\n  getImage(image: Data.IdName): Promise<Data.Image>;\n  getUsers(): Promise<Data.UserSummaryEx[]>;\n  getUser(user: Data.IdName): Promise<Data.User>;\n  getUserActivity(options: Url.UserActivityOptions): Promise<Data.UserActivity>;\n  getDiscussions(options: Url.DiscussionsOptions): Promise<Data.Discussions>;\n  getDiscussion(options: Url.DiscussionOptions): Promise<Data.Discussion>;\n  getAllTags(): Promise<Data.TagCount[]>;\n  getTags(options: Url.TagsOptions, data?: SearchInput): Promise<Data.Tags>;\n  getTag(tag: Data.Key): Promise<Data.TagInfo>;\n  // methods to post data\n  login(data: Post.Login): Promise<Data.UserSummary>;\n  newMessage(discussionId: number, data: Post.NewMessage): Promise<Data.Message>;\n  newDiscussion(data: Post.NewDiscussion): Promise<Data.IdName>;\n  editUserProfile(userId: number, data: Post.EditUserProfile): Promise<Data.IdName>;\n  editTagInfo(tag: string, data: Post.EditTagInfo): Promise<Data.Key>;\n  getPublic(filename: string): Promise<string>;\n}\n\ninterface MockFetch {\n  (url: string, body?: object): Promise<SimpleResponse>;\n}\n\nexport function getApi(mockFetch?: MockFetch): Api {\n  function get(url: string, body?: object): Promise<SimpleResponse> {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n    if (!mockFetch) {\n      const init: RequestInit = {};\n\n      if (body) {\n        init.method = \"POST\";\n        init.body = JSON.stringify(body);\n        init.headers = {\n          \"Content-Type\": \"application/json\",\n        };\n      }\n\n      return fetch(url, init);\n    } else {\n      return mockFetch(url, body);\n    }\n  }\n\n  // https://stackoverflow.com/questions/41103360/how-to-use-fetch-in-typescript\n  function getT<T>(url: string, body?: object): Promise<T> {\n    if (isLogging) {\n      console.log(`getT(${url})`);\n    }\n    return get(url, body).then((response) => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json() as Promise<T>;\n    });\n  }\n\n  /*\n  function to get data\n*/\n\n  async function getSiteMap(): Promise<Data.SiteMap> {\n    return getT<Data.SiteMap>(Url.getSiteMapUrl());\n  }\n\n  async function getImage(image: Data.IdName): Promise<Data.Image> {\n    return getT<Data.Image>(Url.getImageUrl(image));\n  }\n\n  async function getUsers(): Promise<Data.UserSummaryEx[]> {\n    return getT<Data.UserSummaryEx[]>(Url.getUsersUrl());\n  }\n\n  async function getUser(user: Data.IdName): Promise<Data.User> {\n    return getT<Data.User>(Url.getUserUrl(user));\n  }\n\n  function convertPromise<TWire, TData>(promise: Promise<TWire>, convert: (wire: TWire) => TData): Promise<TData> {\n    const rc: Promise<TData> = new Promise<TData>((resolve, reject) => {\n      promise.then((wire: TWire) => {\n        const wanted: TData = convert(wire);\n        resolve(wanted);\n      });\n      promise.catch((error) => {\n        reject(error);\n      });\n    });\n    return rc;\n  }\n\n  async function getUserActivity(options: Url.UserActivityOptions): Promise<Data.UserActivity> {\n    const url = Url.getUserActivityUrl(options);\n    const wirePromise: Promise<Message.WireUserActivity> = getT<Message.WireUserActivity>(url);\n    return convertPromise(wirePromise, Message.unwireUserActivity);\n  }\n\n  async function getDiscussions(options: Url.DiscussionsOptions): Promise<Data.Discussions> {\n    const url = Url.getDiscussionsOptionsUrl(options);\n    const wirePromise: Promise<Message.WireDiscussions> = getT<Message.WireDiscussions>(url);\n    return convertPromise(wirePromise, Message.unwireDiscussions);\n  }\n\n  async function getDiscussion(options: Url.DiscussionOptions): Promise<Data.Discussion> {\n    const url = Url.getDiscussionOptionsUrl(options);\n    const wirePromise: Promise<Message.WireDiscussion> = getT<Message.WireDiscussion>(url);\n    return convertPromise(wirePromise, Message.unwireDiscussion);\n  }\n\n  async function getAllTags(): Promise<Data.TagCount[]> {\n    return getT<Data.TagCount[]>(Url.getAllTagsUrl());\n  }\n\n  async function getTags(options: Url.TagsOptions, data?: SearchInput): Promise<Data.Tags> {\n    const url = Url.getTagsOptionsUrl(options);\n    return getT<Data.Tags>(url, data);\n  }\n\n  async function getTag(tag: Data.Key): Promise<Data.TagInfo> {\n    const url = Url.getTagKeyUrl(tag);\n    return getT<Data.TagInfo>(url);\n  }\n\n  /*\n  function to post data\n*/\n\n  async function login(data: Post.Login): Promise<Data.UserSummary> {\n    return getT<Data.UserSummary>(Url.postLoginUrl(), data);\n  }\n\n  async function newMessage(discussionId: number, data: Post.NewMessage): Promise<Data.Message> {\n    return getT<Data.Message>(Url.postNewAnswerUrl(discussionId), data);\n  }\n\n  async function newDiscussion(data: Post.NewDiscussion): Promise<Data.IdName> {\n    return getT<Data.IdName>(Url.postNewDiscussionUrl(), data);\n  }\n\n  async function editUserProfile(userId: number, data: Post.EditUserProfile): Promise<Data.IdName> {\n    return getT<Data.IdName>(Url.postEditUserProfileUrl(userId), data);\n  }\n\n  async function editTagInfo(tag: string, data: Post.EditTagInfo): Promise<Data.Key> {\n    return getT<Data.Key>(Url.postEditTagInfoUrl(tag), data);\n  }\n\n  /*\n  function to get markdown\n\n  it's difficult to import markdown into the server\n\n  for example `import home from \"../server_data/home.md\";` seem to work\n\n  this comment involves a babel macro which might work ...\n\n  https://github.com/facebook/create-react-app/issues/3722#issuecomment-458124126\n\n  ... but instead the following uses fetch to read the file from the public directory.\n*/\n\n  async function getPublic(filename: string): Promise<string> {\n    const headers: Headers = new Headers();\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"pragma\", \"no-cache\");\n    headers.append(\"cache-control\", \"no-cache\");\n    const init: RequestInit = {\n      headers,\n    };\n    const promise: Promise<Response> = fetch(filename, init);\n    const result: Promise<string> = new Promise<string>((resolve, reject) => {\n      promise\n        .then((response: Response) => {\n          if (!response.ok) {\n            const error = new Error(`${response.status} ${response.statusText}`);\n            (error as any).url = filename;\n            console.error(error.message);\n            reject(error);\n          }\n          response.text().then((text: string) => {\n            // console.log(text);\n            resolve(text);\n          });\n        })\n        .catch((reason) => {\n          console.error(reason.error);\n          reject(reason);\n        });\n    });\n    return result;\n  }\n\n  return {\n    // methods to get data\n    getSiteMap,\n    getImage,\n    getUsers,\n    getUser,\n    getUserActivity,\n    getDiscussions,\n    getDiscussion,\n    getAllTags,\n    getTags,\n    getTag,\n    // methods to post data\n    login,\n    newMessage,\n    newDiscussion,\n    editUserProfile,\n    editTagInfo,\n    getPublic,\n  };\n}\n","import { loginUser, routeOnGet, routeOnPost } from \"server\";\nimport { config, SimpleResponse } from \"shared-lib\";\n\n// you could temporarily change this to enable logging, for debugging\nconst isLogging = false;\n\nexport function mockFetch(url: string, body?: object): Promise<SimpleResponse> {\n  return new Promise<SimpleResponse>((resolve, reject) => {\n    setTimeout(() => {\n      if (config.loginfails) {\n        // simulate login failure\n        const failPromise: Promise<any> = new Promise<any>((resolve, reject) => {\n          // no possible need to call reject because we already have the data\n          reject(\"Don't get JSON if request failed\");\n        });\n        const failure: SimpleResponse = {\n          ok: false,\n          statusText: \"Unauthorized\",\n          json: () => failPromise,\n        };\n        resolve(failure);\n        return;\n      }\n      // a real server would infer the userId from authentication cookies\n      // and not trust the client to pass its userId as an API parameter\n      // but for the mock implementation we get and pass it from app context\n      // const me: I.UserSummary | undefined = React.useContext(AppContext).me;\n      // const userId: number | undefined = me ? me.idName.id : undefined;\n      const userId = loginUser().id;\n      const isPost: boolean = body ? true : false;\n      const json = !isPost ? routeOnGet(url, userId) : routeOnPost(url, userId, body);\n      if (!json) {\n        // from inside setTimeout we must reject not throw\n        // https://stackoverflow.com/questions/33445415/javascript-promises-reject-vs-throw\n        reject(new Error(`No mock data found for ${url}`));\n      }\n      if (isLogging) {\n        console.log(JSON.stringify(json, null, 2));\n      }\n      const jsonPromise: Promise<any> = new Promise<any>((resolve, reject) => {\n        // no possible need to call reject because we already have the data\n        resolve(json);\n      });\n      const response: SimpleResponse = {\n        ok: true,\n        statusText: \"OK\",\n        json: () => jsonPromise,\n      };\n      resolve(response);\n    }, config.mockdelay);\n  });\n}\n","/*\n  These are the public interfaces used in the ui-react code.\n*/\n\nexport * from \"./id\";\nexport * from \"./discussion\";\nexport * from \"./imageLayers\";\nexport * from \"./image\";\nexport * from \"./range\";\nexport * from \"./siteMap\";\nexport * from \"./tag\";\nexport * from \"./user\";\nexport * from \"./userActivity\";\n","import { Discussion, DiscussionMeta, Discussions, DiscussionSummary, Message } from \"../data/discussion\";\nimport { Key } from \"../data/id\";\nimport { ActivityRange, DiscussionRange, DiscussionsRange } from \"../data/range\";\nimport { TagCount } from \"../data/tag\";\nimport { UserSummary } from \"../data/user\";\nimport { UserActivity } from \"../data/userActivity\";\n\n/*\n  This defines slightly more compact forms for various types of data, in which the data is sent from the server.\n  It just ensures that only one instance of each UserSummary is sent, even when several messages are from the same user.\n*/\n\nexport interface WireSummaries {\n  users: UserSummary[];\n  discussions: {\n    id: number;\n    name: string;\n    tags: Key[];\n    userId: number; // + user ID\n    // ownerId?: number, // plus ID of user who started the discussion, if this is a list of messages not of discussions\n    messageExerpt: string;\n    dateTime: string;\n    nAnswers: number;\n  }[];\n}\n\nfunction unwireSummaries(input: WireSummaries): DiscussionSummary[] {\n  // create a Map of the users\n  const users: Map<number, UserSummary> = new Map<number, UserSummary>(input.users.map((user) => [user.id, user]));\n\n  const summaries: DiscussionSummary[] = input.discussions.map((wire) => {\n    return {\n      id: wire.id,\n      name: wire.name,\n      tags: wire.tags,\n      messageSummary: {\n        userSummary: users.get(wire.userId)!,\n        messageExerpt: wire.messageExerpt,\n        dateTime: wire.dateTime,\n      },\n      nAnswers: wire.nAnswers,\n    };\n  });\n\n  return summaries;\n}\n\n/*\n  WireDiscussions <-> Discussions\n*/\n\nexport type WireDiscussions = WireSummaries & { range: DiscussionsRange };\n\nexport function unwireDiscussions(input: WireDiscussions): Discussions {\n  const summaries = unwireSummaries(input);\n  return { range: input.range, summaries };\n}\n\n/*\n  WireDiscussion <-> Discussion\n*/\n\nexport interface WireMessage {\n  messageId: number;\n  userId: number; // + users\n  markdown: string;\n  dateTime: string;\n}\n\nexport interface WireDiscussion extends DiscussionMeta {\n  users: UserSummary[];\n  first: WireMessage;\n  range: DiscussionRange;\n  messages: WireMessage[];\n}\n\nexport function unwireDiscussion(input: WireDiscussion): Discussion {\n  const users: Map<number, UserSummary> = new Map<number, UserSummary>(input.users.map((user) => [user.id, user]));\n\n  const { id, name, tags, range, first, messages } = input;\n\n  function unwireMessage(wire: WireMessage): Message {\n    return {\n      userSummary: users.get(wire.userId)!,\n      markdown: wire.markdown,\n      dateTime: wire.dateTime,\n    };\n  }\n\n  return {\n    id,\n    name,\n    tags,\n    first: unwireMessage(first),\n    range: range,\n    messages: messages.map(unwireMessage),\n  };\n}\n\n/*\n  WireUserActivity <-> UserActivity\n*/\n\nexport interface WireUserActivity extends WireSummaries {\n  range: ActivityRange;\n  tagCounts: TagCount[];\n}\n\nexport function unwireUserActivity(input: WireUserActivity): UserActivity {\n  const summaries = unwireSummaries(input);\n  const summary: UserSummary = input.users[0];\n  const range = input.range;\n  return { summary, summaries, tagCounts: input.tagCounts, range };\n}\n","import { IdName, Key } from \"./data\";\n\n/*\n  This interface is able to represent any URL which exists within the system.\n\n  I use it because I find it's difficult and not \"type-safe\" to work with URLs in string format\n  e.g. if the URL scheme (i.e. the routes supported by the system) changes or expands.\n\n  The full list of application URLs is defined by the list of Route and RouteT values defined below --\n  (but) several of these also support additional search/query parameters).\n*/\n\n// User\nconst routeUsers: Route = { resourceType: \"User\" };\nconst routeUser: RouteT<IdName> = {\n  resourceType: \"User\",\n  parts: [\"id\", \"name\"],\n};\nconst routeUserEdit: RouteT<IdName> = {\n  resourceType: \"User\",\n  parts: [\"edit\", \"id\", \"name\"],\n};\n// Image\nconst routeImages: Route = { resourceType: \"Image\" };\nconst routeImage: RouteT<IdName> = {\n  resourceType: \"Image\",\n  parts: [\"id\", \"name\"],\n};\n// Discussion\nconst routeDiscussions: Route = { resourceType: \"Discussion\" };\nconst routeDiscussion: RouteT<IdName> = {\n  resourceType: \"Discussion\",\n  parts: [\"id\", \"name\"],\n};\n// SiteMap\nconst routeSiteMap: Route = { resourceType: \"SiteMap\" };\n// Tag\nconst routeAllTags: Route = { resourceType: \"Tag\", word: \"all\" };\nconst routeTags: Route = { resourceType: \"Tag\" };\nconst routeDiscussionsTagged_: Route = {\n  resourceType: \"Discussion\",\n  word: \"tagged\",\n};\nconst routeDiscussionsTagged: RouteT<Key> = {\n  resourceType: \"Discussion\",\n  parts: [\"tagged\", \"key\"],\n};\nconst routeTagInfo: RouteT<Key> = {\n  resourceType: \"Tag\",\n  parts: [\"key\", \"info\"],\n};\nconst routeTagEdit: RouteT<Key> = {\n  resourceType: \"Tag\",\n  parts: [\"key\", \"edit\"],\n};\nconst routeTagKey: RouteT<Key> = { resourceType: \"Tag\", parts: [\"key\"] };\n\n// POST not GET\nconst routeLogin: Route = { resourceType: \"Login\" };\nconst routeNewDiscussion: Route = { resourceType: \"Discussion\", word: \"new\" };\nconst routeNewAnswer: RouteT<Id> = {\n  resourceType: \"Discussion\",\n  parts: [\"id\", \"answer\", \"submit\"],\n};\nconst routeEditUserProfile: RouteT<Id> = {\n  resourceType: \"User\",\n  parts: [\"edit\", \"id\"],\n};\n\n/*\n  Definitions of a route (see instances above) -- URLs contain:\n\n  - a root directory which identifies the type of resource\n  - other path seqgments which are either a keyword like \"edit\", and/or a replaceable element like {id} or {name}\n*/\n\nexport type ResourceType = \"SiteMap\" | \"Login\" | \"Discussion\" | \"User\" | \"Image\" | \"Tag\";\n\ntype Keyword = \"new\" | \"edit\" | \"tagged\" | \"info\" | \"answer\" | \"submit\" | \"all\";\n\nfunction isKeyword(s: Keyword | any): s is Keyword {\n  switch (s) {\n    case \"new\":\n    case \"edit\":\n    case \"tagged\":\n    case \"info\":\n    case \"answer\":\n    case \"submit\":\n    case \"all\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type Parts<T extends object> = (Keyword | keyof T)[];\n\n// a hard-coded URL without replaceable/variable segments\ninterface Route {\n  resourceType: ResourceType;\n  word?: Keyword;\n}\n\n// a URL which includes in its segments the element values of an identifier of type T\ninterface RouteT<T extends object> {\n  resourceType: ResourceType;\n  parts: Parts<T>;\n}\n\n/*\n  isUrl, isUrlT -- test whether a URL matches a route\n\n  makeUrl, makeUrlT -- make the URL for a given route\n*/\n\nfunction isUrlT<T extends object>(segments: string[], route: RouteT<T>): T | undefined {\n  const { resourceType, parts } = route;\n  if (!segments.length || segments[0] !== getRoot(resourceType)) {\n    return undefined;\n  }\n  if (segments.length !== 1 + parts.length) {\n    // handle it gracefully if the last \"name\" part of the URL is left offf\n    if (parts.length && parts[parts.length - 1] === \"name\" && segments.length === parts.length) {\n      const short: RouteT<T> = {\n        resourceType,\n        parts: parts.slice(0, parts.length - 1),\n      };\n      const found = isUrlT(segments, short);\n      if (found) {\n        return { ...found, name: \"\" };\n      }\n    }\n    return undefined;\n  }\n  let rc = {};\n  for (let segmentIndex = 1, partIndex = 0; segmentIndex < segments.length; ++segmentIndex, ++partIndex) {\n    const part = parts[partIndex];\n    const segment = segments[segmentIndex];\n    if (isKeyword(part)) {\n      // it's a string\n      if (segment !== part) {\n        return undefined;\n      }\n      // it matched\n      continue;\n    }\n    // else it's a key\n    const key: keyof T = part;\n    switch (key) {\n      case \"id\":\n        const id = toNumber(segment);\n        if (!id) {\n          return undefined;\n        }\n        rc = { ...rc, id };\n        break;\n      case \"name\":\n        rc = { ...rc, name: segment };\n        break;\n      case \"key\":\n        rc = { ...rc, key: segment };\n        break;\n      default:\n        return undefined;\n    }\n  }\n  return rc as T;\n}\n\nfunction isUrl(pathSegments: string[], route: Route): boolean {\n  const { resourceType, word } = route;\n  if (!pathSegments.length || pathSegments[0] !== getRoot(resourceType)) {\n    return false;\n  }\n  return (pathSegments.length === 1 && !word) || (pathSegments.length === 2 && pathSegments[1] === word);\n}\n\nfunction toNumber(s: string): number | undefined {\n  const rc: number = +s;\n  return typeof rc === \"number\" ? rc : undefined;\n}\n\n// getTagText reuses this function\nexport function slugify(title: string) {\n  // preserve only alphanumeric and whitespace and hyphen, then convert all whitespace, then toLower\n  return title\n    .replace(/[^A-Za-z0-9\\- ]/g, \"\")\n    .replace(/ /g, \"-\")\n    .toLocaleLowerCase();\n}\n\nfunction makeUrlT<T extends object>(route: RouteT<T>, data: T, queries?: Queries): string {\n  const { resourceType, parts } = route;\n  const rc: string[] = [];\n  rc.push(getRoot(resourceType));\n  parts.forEach((part) => {\n    if (isKeyword(part)) {\n      rc.push(part);\n    } else {\n      const key: keyof T = part;\n      const value = \"\" + data[key]; // convert to string if it's a number\n      const safe = key === \"name\" ? (resourceType === \"User\" ? encodeURIComponent(value) : slugify(value)) : value;\n      rc.push(safe);\n    }\n  });\n  return \"/\" + rc.join(\"/\") + (queries ? queries.search() : \"\");\n}\n\nfunction makeUrl(route: Route, queries?: Queries): string {\n  const { resourceType, word } = route;\n  const rc: string[] = [];\n  rc.push(getRoot(resourceType));\n  if (word) {\n    rc.push(word);\n  }\n  return \"/\" + rc.join(\"/\") + (queries ? queries.search() : \"\");\n}\n\n/*\n  Helper to convert between URL fragments (used in the URL) and type string and numeric values (used in the code)\n\n  They're similar but the URL uses lower-case strings, while the code uses upper-case type strings and number values.\n*/\n\nclass Pairs<T0, T1> {\n  readonly array: [T0, T1][];\n  constructor(array: [T0, T1][]) {\n    this.array = array;\n  }\n  find0(wanted: T0): T1 | undefined {\n    const found = this.array.find((x) => x[0] === wanted);\n    return !!found ? found[1] : undefined;\n  }\n  find1(wanted: T1): T0 | undefined {\n    const found = this.array.find((x) => x[1] === wanted);\n    return !!found ? found[0] : undefined;\n  }\n}\n\nconst resourceTypes = new Pairs<ResourceType, string>([\n  [\"SiteMap\", \"sitemap\"],\n  [\"Login\", \"login\"],\n  [\"Discussion\", \"discussions\"],\n  [\"User\", \"users\"],\n  [\"Image\", \"images\"],\n  [\"Tag\", \"tags\"],\n]);\n\nfunction getRoot(resourceType: ResourceType): string {\n  const root = resourceTypes.find0(resourceType);\n  if (!root) {\n    throw new Error(`Undefined ResourceType: '${resourceType}'`);\n  }\n  return root;\n}\n\nexport function getResourceType(location: Location): ResourceType | ParserError {\n  const elements: Elements = new Elements(location);\n  return elements.getResourceType();\n}\n\n/*\n  Location\n\n  Client-side code already has its URLs formatted as a location\n  Server-side code needs a function to split a URL into a Location\n*/\n\n// subset of the Location which is exported by the \"history\" module\n// and which is passed to routes in the ReactRouter.RouteComponentProps\nexport interface Location {\n  pathname: string;\n  search: string;\n}\n\nexport function getLocation(url: string): Location {\n  if (url[0] !== \"/\") {\n    // this function is called on the server to parse a URL which the server code gets from the system run-time\n    // it's not used to parse a URL received directly from a user application\n    // so it's safe to say \"this is impossile and shouldn't happen\" and throw an exception, i.e. it's not something\n    // that a malicious application might have sent us, and which we should handle without throwing an exception\n    throw new Error(\"Expected URL to start with `/`\");\n  }\n\n  const splitHash = url.indexOf(\"#\");\n  if (splitHash !== -1) {\n    url = url.substring(0, splitHash);\n  }\n\n  const splitQuery = url.indexOf(\"?\");\n  const query = splitQuery !== -1 ? url.substring(splitQuery) : \"\";\n  if (splitQuery !== -1) {\n    url = url.substring(0, splitQuery);\n  }\n\n  return { pathname: url, search: query };\n}\n\n/*\n  Elements\n\n  Splits the pathname and the search within a location to a more usable format\n  A private implementation details used only within this module\n*/\n\nclass Elements {\n  private segments: string[];\n  private queries: Queries;\n\n  constructor(location: Location) {\n    // split the input parameters\n    const { pathname, search } = location;\n    if (search && search[0] !== \"?\") {\n      throw new Error(\"Expected search to start with `?`\");\n    }\n    if (pathname[0] !== \"/\") {\n      throw new Error(\"Expected pathname to start with `/`\");\n    }\n    this.segments = pathname.length === 1 ? [] : pathname.substring(1).split(\"/\");\n    this.queries = new Queries(location);\n  }\n\n  matchesT<T extends object>(route: RouteT<T>): T | undefined {\n    return isUrlT(this.segments, route);\n  }\n\n  getQuery(name: string): string | undefined {\n    return this.queries.get(name);\n  }\n\n  matches(route: Route): boolean {\n    return isUrl(this.segments, route);\n  }\n\n  getResourceType(): ResourceType | ParserError {\n    if (!this.segments.length) {\n      return \"SiteMap\";\n    }\n    const resourceType = resourceTypes.find1(this.segments[0]);\n    if (!resourceType) {\n      return { error: `Undefined ResourceType: '${this.segments[0]}'` };\n    }\n    return resourceType;\n  }\n}\n\n/*\n  ParserError\n  \n  Returned if there's an error parsing a URL\n  Used when parsing URLs which a server might receive from an application,\n  so that a malicious application doesn't cause the server to throw an unhandled exception.\n*/\n\nexport interface ParserError {\n  error: string;\n}\n\nexport function isParserError(rc: any | ParserError): rc is ParserError {\n  return (rc as ParserError).error !== undefined;\n}\n\nconst errorUnexpectedPath: ParserError = { error: \"Unexpected path\" };\n\n/*\n  Queries\n\n  The optional query parameters (a.k.a. search parameters)\n*/\n\nclass Queries {\n  private params: [string, string | undefined][];\n\n  constructor(location?: Location) {\n    if (location && location.search) {\n      const split = location.search.substring(1).split(\"&\");\n      this.params = split\n        .filter((s) => s.length > 0)\n        .map((s) => {\n          const parts = s.split(\"=\");\n          return parts.length > 1 ? [parts[0], parts[1]] : [parts[0], undefined];\n        });\n    } else {\n      this.params = [];\n    }\n  }\n\n  get(name: string): string | undefined {\n    const found = this.params.find((x) => x[0] === name);\n    return !!found ? found[1] : undefined;\n  }\n  push(name: string, value?: string): void {\n    if (!value) {\n      throw new Error(\"Unexpected undefined search value\");\n    }\n    this.params.push([name, value]);\n  }\n  search(): string {\n    return !this.params.length\n      ? \"\"\n      : \"?\" + this.params.map((pair) => (pair[1] ? pair[0] + \"=\" + pair[1] : pair[0])).join(\"&\");\n  }\n}\n\n/*\n  User page supports 3 tabs\n*/\n\nconst userTabTypes = new Pairs<UserTabType, string>([\n  [\"Profile\", \"profile\"],\n  [\"Activity\", \"activity\"],\n]);\n\nexport type UserTabType = \"Profile\" | \"EditSettings\" | \"Activity\";\nexport interface UserOptions {\n  user: IdName;\n  userTabType?: UserTabType;\n}\n\nexport type ActivitySort = \"Oldest\" | \"Newest\";\nexport interface UserActivityOptions {\n  user: IdName;\n  userTabType: \"Activity\";\n  sort?: ActivitySort;\n  page?: number; //1-based\n}\n\nexport function isUsers(location: Location): boolean {\n  const elements = new Elements(location);\n  return elements.matches(routeUsers);\n}\n\nexport function getUsersUrl(): string {\n  return makeUrl(routeUsers);\n}\n\nexport function isUserOptions(location: Location): UserOptions | ParserError {\n  const elements = new Elements(location);\n  let user: IdName | undefined = elements.matchesT(routeUserEdit);\n  if (user) {\n    return { user, userTabType: \"EditSettings\" };\n  }\n  user = elements.matchesT(routeUser);\n  if (!user) {\n    return errorUnexpectedPath;\n  }\n  const tab = elements.getQuery(\"tab\");\n  if (!tab) {\n    return { user };\n  }\n  const userTabType: UserTabType | undefined = userTabTypes.find1(tab);\n  if (!userTabType) {\n    return { error: \"Unexpected tab value\" };\n  }\n  return { user, userTabType };\n}\n\nexport function isUserActivityOptions(location: Location): UserActivityOptions | ParserError {\n  const userOptions = isUserOptions(location);\n  if (isParserError(userOptions)) {\n    return userOptions;\n  }\n  const { user, userTabType } = userOptions;\n  if (userTabType !== \"Activity\") {\n    return { error: \"Unexpected tab value\" };\n  }\n  function getActivityoptions(queries: Queries) {\n    const sort = queries.get(\"sort\");\n    const page = queries.get(\"page\");\n    return {\n      sort: sort ? discussionSort.find1(sort) : undefined,\n      page: page ? toNumber(page) : undefined,\n    };\n  }\n  const { sort, page } = getActivityoptions(new Queries(location));\n  return { user, sort, userTabType, page };\n}\n\nexport function getUserUrl(user: IdName): string {\n  return makeUrlT(routeUser, user);\n}\n\nexport function getUserOptionsUrl(options: UserOptions): string {\n  if (options.userTabType === \"EditSettings\") {\n    return makeUrlT(routeUserEdit, options.user);\n  }\n  const queries: Queries = new Queries();\n  if (options.userTabType) {\n    queries.push(\"tab\", userTabTypes.find0(options.userTabType));\n  }\n  return makeUrlT(routeUser, options.user, queries);\n}\n\nexport function getUserActivityUrl(options: UserActivityOptions): string {\n  const queries: Queries = new Queries();\n  queries.push(\"tab\", userTabTypes.find0(\"Activity\"));\n  if (options.sort) {\n    queries.push(\"sort\", discussionSort.find0(options.sort));\n  }\n  if (options.page) {\n    queries.push(\"page\", \"\" + options.page);\n  }\n  return makeUrlT(routeUser, options.user, queries);\n}\n\n/*\n  Image page just has a numeric ID\n*/\n\nexport function isImage(location: Location): IdName | ParserError {\n  const elements = new Elements(location);\n  const image: IdName | undefined = elements.matchesT(routeImage);\n  return image ? image : errorUnexpectedPath;\n}\n\nexport function getImageUrl(image: IdName): string {\n  return makeUrlT(routeImage, image);\n}\n\n/*\n  Tabs page has two tabs (2 options)\n*/\n\nexport type TagsSort = \"Popular\" | \"Name\";\n\nconst tagsSort = new Pairs<TagsSort, string>([\n  [\"Popular\", \"popular\"],\n  [\"Name\", \"name\"],\n]);\n\nexport interface TagsOptions {\n  sort?: TagsSort;\n  pagesize: 36;\n  page?: number; //1-based\n}\n\nexport function isTagsOptions(location: Location): TagsOptions | ParserError {\n  const elements = new Elements(location);\n  if (!elements.matches(routeTags)) {\n    return errorUnexpectedPath;\n  }\n  const sort = elements.getQuery(\"sort\");\n  const page = elements.getQuery(\"page\");\n  return {\n    sort: sort ? tagsSort.find1(sort) : undefined,\n    pagesize: 36,\n    page: page ? toNumber(page) : undefined,\n  };\n}\n\nexport function isAllTags(location: Location): boolean {\n  const elements = new Elements(location);\n  return elements.matches(routeAllTags);\n}\n\nexport function getTagsOptionsUrl(params: { sort?: TagsSort; page?: number }): string {\n  const options: TagsOptions = { ...params, pagesize: 36 };\n  const queries: Queries = new Queries();\n  if (options.sort) {\n    queries.push(\"sort\", tagsSort.find0(options.sort));\n  }\n  if (options.page) {\n    queries.push(\"page\", \"\" + options.page);\n  }\n  queries.push(\"pagesize\", \"\" + options.pagesize);\n  return makeUrl(routeTags, queries);\n}\n\n/*\n  Other Tags pages\n*/\n\nexport function getAllTagsUrl(): string {\n  return makeUrl(routeAllTags);\n}\nexport function getTagsUrl(): string {\n  return makeUrl(routeTags);\n}\nexport function getTagUrl(tag: Key): string {\n  return getDiscussionsTaggedUrl(tag);\n}\n\nexport function getTagInfoUrl(tag: Key): string {\n  return makeUrlT(routeTagInfo, tag);\n}\nexport function getTagEditUrl(tag: Key): string {\n  return makeUrlT(routeTagEdit, tag);\n}\nexport function getTagKeyUrl(tag: Key): string {\n  return makeUrlT(routeTagKey, tag);\n}\n\nexport function getDiscussionsTaggedUrl(tag: Key): string {\n  return makeUrlT(routeDiscussionsTagged, tag);\n}\n\nexport interface InfoOrEdit {\n  word: \"info\" | \"edit\";\n}\n\nexport function isTagInfo(location: Location): Key | ParserError {\n  const elements: Elements = new Elements(location);\n  const key = elements.matchesT(routeTagInfo);\n  return key ? key : errorUnexpectedPath;\n}\n\nexport function isTagEdit(location: Location): Key | ParserError {\n  const elements: Elements = new Elements(location);\n  const key = elements.matchesT(routeTagEdit);\n  return key ? key : errorUnexpectedPath;\n}\n\nexport function isTagKey(location: Location): Key | ParserError {\n  const elements: Elements = new Elements(location);\n  const key = elements.matchesT(routeTagKey);\n  return key ? key : errorUnexpectedPath;\n}\n\n/*\n  Discussions page has two tabs (3 options)\n*/\n\nexport type DiscussionsSort = \"Active\" | \"Newest\";\nexport type PageSize = 15 | 30 | 50;\n\nconst discussionsSort = new Pairs<DiscussionsSort, string>([\n  [\"Active\", \"active\"],\n  [\"Newest\", \"newest\"],\n]);\n\nconst pageSizes = new Pairs<PageSize, string>([\n  [15, \"15\"],\n  [30, \"30\"],\n  [50, \"50\"],\n]);\n\nexport interface DiscussionsOptions {\n  sort?: DiscussionsSort;\n  pagesize?: PageSize;\n  page?: number; //1-based\n  tag?: Key;\n}\n\nexport function isDiscussionsOptions(location: Location): DiscussionsOptions | ParserError {\n  const elements = new Elements(location);\n  const key = elements.matchesT(routeDiscussionsTagged);\n  const isRoot = location.pathname === \"/\"; // Discussions is the default page for the root path\n  if (!key && !elements.matches(routeDiscussions) && !isRoot) {\n    return errorUnexpectedPath;\n  }\n  const sort = elements.getQuery(\"sort\");\n  const pagesize = elements.getQuery(\"pagesize\");\n  const page = elements.getQuery(\"page\");\n  return {\n    sort: sort ? discussionsSort.find1(sort) : undefined,\n    pagesize: pagesize ? pageSizes.find1(pagesize) : undefined,\n    page: page ? toNumber(page) : undefined,\n    tag: key,\n  };\n}\n\nexport function getDiscussionsOptionsUrl(options: DiscussionsOptions): string {\n  const queries: Queries = new Queries();\n  if (options.sort) {\n    queries.push(\"sort\", discussionsSort.find0(options.sort));\n  }\n  if (options.pagesize) {\n    queries.push(\"pagesize\", \"\" + options.pagesize);\n  }\n  if (options.page) {\n    queries.push(\"page\", \"\" + options.page);\n  }\n  return !options.tag ? makeUrl(routeDiscussions, queries) : makeUrlT(routeDiscussionsTagged, options.tag, queries);\n}\n\n/*\n  Discussion page has two tabs\n*/\n\nexport type DiscussionSort = \"Oldest\" | \"Newest\";\n\nconst discussionSort = new Pairs<DiscussionSort, string>([\n  [\"Oldest\", \"oldest\"],\n  [\"Newest\", \"newest\"],\n]);\n\nexport interface DiscussionOptions {\n  discussion: IdName;\n  sort?: DiscussionSort;\n  page?: number; //1-based\n}\n\nexport function isDiscussionOptions(location: Location): DiscussionOptions | ParserError {\n  const elements = new Elements(location);\n  const discussion: IdName | undefined = elements.matchesT(routeDiscussion);\n  if (!discussion) {\n    return errorUnexpectedPath;\n  }\n\n  const sort = elements.getQuery(\"sort\");\n  const page = elements.getQuery(\"page\");\n  return {\n    discussion,\n    sort: sort ? discussionSort.find1(sort) : undefined,\n    page: page ? toNumber(page) : undefined,\n  };\n}\n\nexport function getDiscussionUrl(discussion: IdName): string {\n  return makeUrlT(routeDiscussion, discussion);\n}\n\nexport function getDiscussionOptionsUrl(options: DiscussionOptions): string {\n  const queries = new Queries();\n  if (options.sort) {\n    queries.push(\"sort\", discussionSort.find0(options.sort));\n  }\n  if (options.page) {\n    queries.push(\"page\", \"\" + options.page);\n  }\n  return makeUrlT(routeDiscussion, options.discussion, queries);\n}\n\n/*\n  SiteMap\n*/\n\nexport function getSiteMapUrl(): string {\n  return makeUrl(routeSiteMap);\n}\n\n/*\n  Posts\n*/\n\ninterface Id {\n  id: number;\n}\n\nexport function postLoginUrl(): string {\n  return route.login;\n}\n\nexport function postNewDiscussionUrl(): string {\n  return route.newDiscussion;\n}\n\nexport function postNewAnswerUrl(discussionId: number): string {\n  return makeUrlT(routeNewAnswer, { id: discussionId });\n}\n\nexport function postEditUserProfileUrl(userId: number): string {\n  return makeUrlT(routeEditUserProfile, { id: userId });\n}\n\nexport function postEditTagInfoUrl(tag: string): string {\n  return makeUrlT(routeTagEdit, { key: tag });\n}\n\nexport function isLogin(location: Location): boolean {\n  const elements: Elements = new Elements(location);\n  return elements.matches(routeLogin);\n}\n\nexport function isNewDiscussion(location: Location): boolean {\n  const elements: Elements = new Elements(location);\n  return elements.matches(routeNewDiscussion);\n}\n\nexport function isNewAnswer(location: Location): number | undefined {\n  const elements: Elements = new Elements(location);\n  const found = elements.matchesT(routeNewAnswer);\n  return found ? found.id : undefined;\n}\n\nexport function isEditUserProfile(location: Location): number | undefined {\n  const elements: Elements = new Elements(location);\n  const found = elements.matchesT(routeEditUserProfile);\n  return found ? found.id : undefined;\n}\n\nexport function isEditTagInfo(location: Location): string | undefined {\n  const elements: Elements = new Elements(location);\n  const found = elements.matchesT(routeTagEdit);\n  return found ? found.key : undefined;\n}\n\n/*\n  Simple routes for each of the various ResourceType values\n*/\n\nexport const route = {\n  login: makeUrl(routeLogin),\n  siteMap: makeUrl(routeSiteMap),\n  discussions: makeUrl(routeDiscussions),\n  discussionsTagged: makeUrl(routeDiscussionsTagged_),\n  users: makeUrl(routeUsers),\n  images: makeUrl(routeImages),\n  newDiscussion: makeUrl(routeNewDiscussion),\n  tags: makeUrl(routeTags),\n};\n","import { Key } from \"./id\";\nimport { TagsRange } from \"./range\";\n\n// as well as the key which identifies a tag, this has a count of how often it's used, and its summary of how to use it\nexport interface TagCount extends Key {\n  summary?: string;\n  count: number;\n}\n\nexport interface Tags {\n  range: TagsRange;\n  tagCounts: TagCount[];\n}\n\nexport interface TagInfo extends Key {\n  title: string;\n  summary?: string;\n  markdown?: string;\n}\n\nexport const tagSummaryLength = { min: 20, max: 460 };\n"],"sourceRoot":""}